{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RGBA = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst RGBA = function (imageData) {\n  var data = imageData.data,\n    nPixels = data.length,\n    red = this.red(),\n    green = this.green(),\n    blue = this.blue(),\n    alpha = this.alpha(),\n    i,\n    ia;\n  for (i = 0; i < nPixels; i += 4) {\n    ia = 1 - alpha;\n    data[i] = red * alpha + data[i] * ia;\n    data[i + 1] = green * alpha + data[i + 1] * ia;\n    data[i + 2] = blue * alpha + data[i + 2] * ia;\n  }\n};\nexports.RGBA = RGBA;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\n  this._filterUpToDate = false;\n  if (val > 255) {\n    return 255;\n  } else if (val < 0) {\n    return 0;\n  } else {\n    return Math.round(val);\n  }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\n  this._filterUpToDate = false;\n  if (val > 255) {\n    return 255;\n  } else if (val < 0) {\n    return 0;\n  } else {\n    return Math.round(val);\n  }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'alpha', 1, function (val) {\n  this._filterUpToDate = false;\n  if (val > 1) {\n    return 1;\n  } else if (val < 0) {\n    return 0;\n  } else {\n    return val;\n  }\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","RGBA","Factory_1","require","Node_1","Validators_1","imageData","data","nPixels","length","red","green","blue","alpha","i","ia","Factory","addGetterSetter","Node","val","_filterUpToDate","Math","round","RGBComponent","afterSetFilter"],"sources":["/Users/nicolasgrenier/Documents/Code/fighting_RPG/node_modules/konva/lib/filters/RGBA.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RGBA = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst RGBA = function (imageData) {\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), alpha = this.alpha(), i, ia;\n    for (i = 0; i < nPixels; i += 4) {\n        ia = 1 - alpha;\n        data[i] = red * alpha + data[i] * ia;\n        data[i + 1] = green * alpha + data[i + 1] * ia;\n        data[i + 2] = blue * alpha + data[i + 2] * ia;\n    }\n};\nexports.RGBA = RGBA;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'alpha', 1, function (val) {\n    this._filterUpToDate = false;\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return val;\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}