{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tag = exports.Label = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Group_1 = require(\"../Group\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nvar ATTR_CHANGE_LIST = ['fontFamily', 'fontSize', 'fontStyle', 'padding', 'lineHeight', 'text', 'width', 'height', 'pointerDirection', 'pointerWidth', 'pointerHeight'],\n  CHANGE_KONVA = 'Change.konva',\n  NONE = 'none',\n  UP = 'up',\n  RIGHT = 'right',\n  DOWN = 'down',\n  LEFT = 'left',\n  attrChangeListLen = ATTR_CHANGE_LIST.length;\nclass Label extends Group_1.Group {\n  constructor(config) {\n    super(config);\n    this.on('add.konva', function (evt) {\n      this._addListeners(evt.child);\n      this._sync();\n    });\n  }\n  getText() {\n    return this.find('Text')[0];\n  }\n  getTag() {\n    return this.find('Tag')[0];\n  }\n  _addListeners(text) {\n    var that = this,\n      n;\n    var func = function () {\n      that._sync();\n    };\n    for (n = 0; n < attrChangeListLen; n++) {\n      text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n    }\n  }\n  getWidth() {\n    return this.getText().width();\n  }\n  getHeight() {\n    return this.getText().height();\n  }\n  _sync() {\n    var text = this.getText(),\n      tag = this.getTag(),\n      width,\n      height,\n      pointerDirection,\n      pointerWidth,\n      x,\n      y,\n      pointerHeight;\n    if (text && tag) {\n      width = text.width();\n      height = text.height();\n      pointerDirection = tag.pointerDirection();\n      pointerWidth = tag.pointerWidth();\n      pointerHeight = tag.pointerHeight();\n      x = 0;\n      y = 0;\n      switch (pointerDirection) {\n        case UP:\n          x = width / 2;\n          y = -1 * pointerHeight;\n          break;\n        case RIGHT:\n          x = width + pointerWidth;\n          y = height / 2;\n          break;\n        case DOWN:\n          x = width / 2;\n          y = height + pointerHeight;\n          break;\n        case LEFT:\n          x = -1 * pointerWidth;\n          y = height / 2;\n          break;\n      }\n      tag.setAttrs({\n        x: -1 * x,\n        y: -1 * y,\n        width: width,\n        height: height\n      });\n      text.setAttrs({\n        x: -1 * x,\n        y: -1 * y\n      });\n    }\n  }\n}\nexports.Label = Label;\nLabel.prototype.className = 'Label';\n(0, Global_1._registerNode)(Label);\nclass Tag extends Shape_1.Shape {\n  _sceneFunc(context) {\n    var width = this.width(),\n      height = this.height(),\n      pointerDirection = this.pointerDirection(),\n      pointerWidth = this.pointerWidth(),\n      pointerHeight = this.pointerHeight(),\n      cornerRadius = this.cornerRadius();\n    let topLeft = 0;\n    let topRight = 0;\n    let bottomLeft = 0;\n    let bottomRight = 0;\n    if (typeof cornerRadius === 'number') {\n      topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n    } else {\n      topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n      topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n      bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n      bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n    }\n    context.beginPath();\n    context.moveTo(topLeft, 0);\n    if (pointerDirection === UP) {\n      context.lineTo((width - pointerWidth) / 2, 0);\n      context.lineTo(width / 2, -1 * pointerHeight);\n      context.lineTo((width + pointerWidth) / 2, 0);\n    }\n    context.lineTo(width - topRight, 0);\n    context.arc(width - topRight, topRight, topRight, Math.PI * 3 / 2, 0, false);\n    if (pointerDirection === RIGHT) {\n      context.lineTo(width, (height - pointerHeight) / 2);\n      context.lineTo(width + pointerWidth, height / 2);\n      context.lineTo(width, (height + pointerHeight) / 2);\n    }\n    context.lineTo(width, height - bottomRight);\n    context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n    if (pointerDirection === DOWN) {\n      context.lineTo((width + pointerWidth) / 2, height);\n      context.lineTo(width / 2, height + pointerHeight);\n      context.lineTo((width - pointerWidth) / 2, height);\n    }\n    context.lineTo(bottomLeft, height);\n    context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n    if (pointerDirection === LEFT) {\n      context.lineTo(0, (height + pointerHeight) / 2);\n      context.lineTo(-1 * pointerWidth, height / 2);\n      context.lineTo(0, (height - pointerHeight) / 2);\n    }\n    context.lineTo(0, topLeft);\n    context.arc(topLeft, topLeft, topLeft, Math.PI, Math.PI * 3 / 2, false);\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n  getSelfRect() {\n    var x = 0,\n      y = 0,\n      pointerWidth = this.pointerWidth(),\n      pointerHeight = this.pointerHeight(),\n      direction = this.pointerDirection(),\n      width = this.width(),\n      height = this.height();\n    if (direction === UP) {\n      y -= pointerHeight;\n      height += pointerHeight;\n    } else if (direction === DOWN) {\n      height += pointerHeight;\n    } else if (direction === LEFT) {\n      x -= pointerWidth * 1.5;\n      width += pointerWidth;\n    } else if (direction === RIGHT) {\n      width += pointerWidth * 1.5;\n    }\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  }\n}\nexports.Tag = Tag;\nTag.prototype.className = 'Tag';\n(0, Global_1._registerNode)(Tag);\nFactory_1.Factory.addGetterSetter(Tag, 'pointerDirection', NONE);\nFactory_1.Factory.addGetterSetter(Tag, 'pointerWidth', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Tag, 'pointerHeight', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Tag, 'cornerRadius', 0, (0, Validators_1.getNumberOrArrayOfNumbersValidator)(4));","map":{"version":3,"names":["Object","defineProperty","exports","value","Tag","Label","Factory_1","require","Shape_1","Group_1","Validators_1","Global_1","ATTR_CHANGE_LIST","CHANGE_KONVA","NONE","UP","RIGHT","DOWN","LEFT","attrChangeListLen","length","Group","constructor","config","on","evt","_addListeners","child","_sync","getText","find","getTag","text","that","n","func","getWidth","width","getHeight","height","tag","pointerDirection","pointerWidth","x","y","pointerHeight","setAttrs","prototype","className","_registerNode","Shape","_sceneFunc","context","cornerRadius","topLeft","topRight","bottomLeft","bottomRight","Math","min","beginPath","moveTo","lineTo","arc","PI","closePath","fillStrokeShape","getSelfRect","direction","Factory","addGetterSetter","getNumberValidator","getNumberOrArrayOfNumbersValidator"],"sources":["/Users/nicolasgrenier/Documents/Code/fighting_RPG/node_modules/konva/lib/shapes/Label.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tag = exports.Label = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Group_1 = require(\"../Group\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nvar ATTR_CHANGE_LIST = [\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'padding',\n    'lineHeight',\n    'text',\n    'width',\n    'height',\n    'pointerDirection',\n    'pointerWidth',\n    'pointerHeight',\n], CHANGE_KONVA = 'Change.konva', NONE = 'none', UP = 'up', RIGHT = 'right', DOWN = 'down', LEFT = 'left', attrChangeListLen = ATTR_CHANGE_LIST.length;\nclass Label extends Group_1.Group {\n    constructor(config) {\n        super(config);\n        this.on('add.konva', function (evt) {\n            this._addListeners(evt.child);\n            this._sync();\n        });\n    }\n    getText() {\n        return this.find('Text')[0];\n    }\n    getTag() {\n        return this.find('Tag')[0];\n    }\n    _addListeners(text) {\n        var that = this, n;\n        var func = function () {\n            that._sync();\n        };\n        for (n = 0; n < attrChangeListLen; n++) {\n            text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n        }\n    }\n    getWidth() {\n        return this.getText().width();\n    }\n    getHeight() {\n        return this.getText().height();\n    }\n    _sync() {\n        var text = this.getText(), tag = this.getTag(), width, height, pointerDirection, pointerWidth, x, y, pointerHeight;\n        if (text && tag) {\n            width = text.width();\n            height = text.height();\n            pointerDirection = tag.pointerDirection();\n            pointerWidth = tag.pointerWidth();\n            pointerHeight = tag.pointerHeight();\n            x = 0;\n            y = 0;\n            switch (pointerDirection) {\n                case UP:\n                    x = width / 2;\n                    y = -1 * pointerHeight;\n                    break;\n                case RIGHT:\n                    x = width + pointerWidth;\n                    y = height / 2;\n                    break;\n                case DOWN:\n                    x = width / 2;\n                    y = height + pointerHeight;\n                    break;\n                case LEFT:\n                    x = -1 * pointerWidth;\n                    y = height / 2;\n                    break;\n            }\n            tag.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n                width: width,\n                height: height,\n            });\n            text.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n            });\n        }\n    }\n}\nexports.Label = Label;\nLabel.prototype.className = 'Label';\n(0, Global_1._registerNode)(Label);\nclass Tag extends Shape_1.Shape {\n    _sceneFunc(context) {\n        var width = this.width(), height = this.height(), pointerDirection = this.pointerDirection(), pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), cornerRadius = this.cornerRadius();\n        let topLeft = 0;\n        let topRight = 0;\n        let bottomLeft = 0;\n        let bottomRight = 0;\n        if (typeof cornerRadius === 'number') {\n            topLeft =\n                topRight =\n                    bottomLeft =\n                        bottomRight =\n                            Math.min(cornerRadius, width / 2, height / 2);\n        }\n        else {\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n        }\n        context.beginPath();\n        context.moveTo(topLeft, 0);\n        if (pointerDirection === UP) {\n            context.lineTo((width - pointerWidth) / 2, 0);\n            context.lineTo(width / 2, -1 * pointerHeight);\n            context.lineTo((width + pointerWidth) / 2, 0);\n        }\n        context.lineTo(width - topRight, 0);\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n        if (pointerDirection === RIGHT) {\n            context.lineTo(width, (height - pointerHeight) / 2);\n            context.lineTo(width + pointerWidth, height / 2);\n            context.lineTo(width, (height + pointerHeight) / 2);\n        }\n        context.lineTo(width, height - bottomRight);\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n        if (pointerDirection === DOWN) {\n            context.lineTo((width + pointerWidth) / 2, height);\n            context.lineTo(width / 2, height + pointerHeight);\n            context.lineTo((width - pointerWidth) / 2, height);\n        }\n        context.lineTo(bottomLeft, height);\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n        if (pointerDirection === LEFT) {\n            context.lineTo(0, (height + pointerHeight) / 2);\n            context.lineTo(-1 * pointerWidth, height / 2);\n            context.lineTo(0, (height - pointerHeight) / 2);\n        }\n        context.lineTo(0, topLeft);\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getSelfRect() {\n        var x = 0, y = 0, pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), direction = this.pointerDirection(), width = this.width(), height = this.height();\n        if (direction === UP) {\n            y -= pointerHeight;\n            height += pointerHeight;\n        }\n        else if (direction === DOWN) {\n            height += pointerHeight;\n        }\n        else if (direction === LEFT) {\n            x -= pointerWidth * 1.5;\n            width += pointerWidth;\n        }\n        else if (direction === RIGHT) {\n            width += pointerWidth * 1.5;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n        };\n    }\n}\nexports.Tag = Tag;\nTag.prototype.className = 'Tag';\n(0, Global_1._registerNode)(Tag);\nFactory_1.Factory.addGetterSetter(Tag, 'pointerDirection', NONE);\nFactory_1.Factory.addGetterSetter(Tag, 'pointerWidth', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Tag, 'pointerHeight', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Tag, 'cornerRadius', 0, (0, Validators_1.getNumberOrArrayOfNumbersValidator)(4));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}