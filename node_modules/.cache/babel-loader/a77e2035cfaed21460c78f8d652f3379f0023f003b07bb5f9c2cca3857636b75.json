{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/mdj-scene/MdjScene.jsx\";\nimport mc from \"./mdj-scene.module.scss\";\n//images//\nimport mdjImg from \"../../../images/Mdj.png\";\nimport { mdjWelcomeString1 } from \"../../../constants/mdj\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MdjScene = _ref => {\n  let {\n    player1,\n    player2,\n    attacker,\n    defender,\n    string,\n    attackHit\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: mc.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: attackHit === \"hit\" ? `${mc.mdj_position} adaptive-img-contain ${mc.mdj_position_laugh}` : attackHit === \"fail\" ? `${mc.mdj_position} adaptive-img-contain ${mc.mdj_position_angry}` : `${mc.mdj_position} adaptive-img-contain`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: mdjImg,\n          alt: \"Image du ma\\xEEtre de jeu\",\n          draggable: \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mc.mdj_dialogs,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: string.split(\" \").map((el, i) => {\n          if (el === \"${player1}\") {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: mc.player,\n              style: {\n                animationDelay: `${i * 0.1}s`,\n                \"--classColor\": `${player1.playerClass.color}`\n              },\n              children: player1.pseudo.toUpperCase()\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this);\n          } else if (el === \"${player2}\") {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: mc.player,\n              style: {\n                animationDelay: `${i * 0.1}s`,\n                \"--classColor\": `${player2.playerClass.color}`\n              },\n              children: player2.pseudo.toUpperCase()\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this);\n          } else if (el === \"${attacker}\") {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: mc.player,\n              style: {\n                animationDelay: `${i * 0.1}s`,\n                \"--classColor\": `${attacker.playerClass.color}`\n              },\n              children: attacker.pseudo.toUpperCase()\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this);\n          } else if (el === \"${defender}\") {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: mc.player,\n              style: {\n                animationDelay: `${i * 0.1}s`,\n                \"--classColor\": `${defender.playerClass.color}`\n              },\n              children: defender.pseudo.toUpperCase()\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                animationDelay: `${i * 0.1}s`\n              },\n              children: el\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = MdjScene;\nexport default MdjScene;\nvar _c;\n$RefreshReg$(_c, \"MdjScene\");","map":{"version":3,"names":["mc","mdjImg","mdjWelcomeString1","MdjScene","player1","player2","attacker","defender","string","attackHit","container","mdj_position","mdj_position_laugh","mdj_position_angry","mdj_dialogs","split","map","el","i","player","animationDelay","playerClass","color","pseudo","toUpperCase"],"sources":["/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/mdj-scene/MdjScene.jsx"],"sourcesContent":["import mc from \"./mdj-scene.module.scss\";\n//images//\nimport mdjImg from \"../../../images/Mdj.png\";\nimport { mdjWelcomeString1 } from \"../../../constants/mdj\";\n\nconst MdjScene = ({\n  player1,\n  player2,\n  attacker,\n  defender,\n  string,\n  attackHit,\n}) => {\n  return (\n    <div className={mc.container}>\n      <div\n        className={\n          attackHit === \"hit\"\n            ? `${mc.mdj_position} adaptive-img-contain ${mc.mdj_position_laugh}`\n            : attackHit === \"fail\"\n            ? `${mc.mdj_position} adaptive-img-contain ${mc.mdj_position_angry}`\n            : `${mc.mdj_position} adaptive-img-contain`\n        }\n      >\n        <span>\n          <img src={mdjImg} alt=\"Image du maÃ®tre de jeu\" draggable=\"false\" />\n        </span>\n      </div>\n\n      <div className={mc.mdj_dialogs}>\n        <p>\n          {string.split(\" \").map((el, i) => {\n            if (el === \"${player1}\") {\n              return (\n                <span\n                  className={mc.player}\n                  key={i}\n                  style={{\n                    animationDelay: `${i * 0.1}s`,\n                    \"--classColor\": `${player1.playerClass.color}`,\n                  }}\n                >\n                  {player1.pseudo.toUpperCase()}\n                </span>\n              );\n            } else if (el === \"${player2}\") {\n              return (\n                <span\n                  className={mc.player}\n                  key={i}\n                  style={{\n                    animationDelay: `${i * 0.1}s`,\n                    \"--classColor\": `${player2.playerClass.color}`,\n                  }}\n                >\n                  {player2.pseudo.toUpperCase()}\n                </span>\n              );\n            } else if (el === \"${attacker}\") {\n              return (\n                <span\n                  className={mc.player}\n                  key={i}\n                  style={{\n                    animationDelay: `${i * 0.1}s`,\n                    \"--classColor\": `${attacker.playerClass.color}`,\n                  }}\n                >\n                  {attacker.pseudo.toUpperCase()}\n                </span>\n              );\n            } else if (el === \"${defender}\") {\n              return (\n                <span\n                  className={mc.player}\n                  key={i}\n                  style={{\n                    animationDelay: `${i * 0.1}s`,\n                    \"--classColor\": `${defender.playerClass.color}`,\n                  }}\n                >\n                  {defender.pseudo.toUpperCase()}\n                </span>\n              );\n            } else {\n              return (\n                <span\n                  key={i}\n                  style={{\n                    animationDelay: `${i * 0.1}s`,\n                  }}\n                >\n                  {el}\n                </span>\n              );\n            }\n          })}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default MdjScene;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}