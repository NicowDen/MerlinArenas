{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Animation = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nvar now = function () {\n  if (Global_1.glob.performance && Global_1.glob.performance.now) {\n    return function () {\n      return Global_1.glob.performance.now();\n    };\n  }\n  return function () {\n    return new Date().getTime();\n  };\n}();\nclass Animation {\n  constructor(func, layers) {\n    this.id = Animation.animIdCounter++;\n    this.frame = {\n      time: 0,\n      timeDiff: 0,\n      lastTime: now(),\n      frameRate: 0\n    };\n    this.func = func;\n    this.setLayers(layers);\n  }\n  setLayers(layers) {\n    var lays = [];\n    if (!layers) {\n      lays = [];\n    } else if (layers.length > 0) {\n      lays = layers;\n    } else {\n      lays = [layers];\n    }\n    this.layers = lays;\n    return this;\n  }\n  getLayers() {\n    return this.layers;\n  }\n  addLayer(layer) {\n    var layers = this.layers,\n      len = layers.length,\n      n;\n    for (n = 0; n < len; n++) {\n      if (layers[n]._id === layer._id) {\n        return false;\n      }\n    }\n    this.layers.push(layer);\n    return true;\n  }\n  isRunning() {\n    var a = Animation,\n      animations = a.animations,\n      len = animations.length,\n      n;\n    for (n = 0; n < len; n++) {\n      if (animations[n].id === this.id) {\n        return true;\n      }\n    }\n    return false;\n  }\n  start() {\n    this.stop();\n    this.frame.timeDiff = 0;\n    this.frame.lastTime = now();\n    Animation._addAnimation(this);\n    return this;\n  }\n  stop() {\n    Animation._removeAnimation(this);\n    return this;\n  }\n  _updateFrameObject(time) {\n    this.frame.timeDiff = time - this.frame.lastTime;\n    this.frame.lastTime = time;\n    this.frame.time += this.frame.timeDiff;\n    this.frame.frameRate = 1000 / this.frame.timeDiff;\n  }\n  static _addAnimation(anim) {\n    this.animations.push(anim);\n    this._handleAnimation();\n  }\n  static _removeAnimation(anim) {\n    var id = anim.id,\n      animations = this.animations,\n      len = animations.length,\n      n;\n    for (n = 0; n < len; n++) {\n      if (animations[n].id === id) {\n        this.animations.splice(n, 1);\n        break;\n      }\n    }\n  }\n  static _runFrames() {\n    var layerHash = {},\n      animations = this.animations,\n      anim,\n      layers,\n      func,\n      n,\n      i,\n      layersLen,\n      layer,\n      key,\n      needRedraw;\n    for (n = 0; n < animations.length; n++) {\n      anim = animations[n];\n      layers = anim.layers;\n      func = anim.func;\n      anim._updateFrameObject(now());\n      layersLen = layers.length;\n      if (func) {\n        needRedraw = func.call(anim, anim.frame) !== false;\n      } else {\n        needRedraw = true;\n      }\n      if (!needRedraw) {\n        continue;\n      }\n      for (i = 0; i < layersLen; i++) {\n        layer = layers[i];\n        if (layer._id !== undefined) {\n          layerHash[layer._id] = layer;\n        }\n      }\n    }\n    for (key in layerHash) {\n      if (!layerHash.hasOwnProperty(key)) {\n        continue;\n      }\n      layerHash[key].batchDraw();\n    }\n  }\n  static _animationLoop() {\n    var Anim = Animation;\n    if (Anim.animations.length) {\n      Anim._runFrames();\n      Util_1.Util.requestAnimFrame(Anim._animationLoop);\n    } else {\n      Anim.animRunning = false;\n    }\n  }\n  static _handleAnimation() {\n    if (!this.animRunning) {\n      this.animRunning = true;\n      Util_1.Util.requestAnimFrame(this._animationLoop);\n    }\n  }\n}\nexports.Animation = Animation;\nAnimation.animations = [];\nAnimation.animIdCounter = 0;\nAnimation.animRunning = false;","map":{"version":3,"names":["Object","defineProperty","exports","value","Animation","Global_1","require","Util_1","now","glob","performance","Date","getTime","constructor","func","layers","id","animIdCounter","frame","time","timeDiff","lastTime","frameRate","setLayers","lays","length","getLayers","addLayer","layer","len","n","_id","push","isRunning","a","animations","start","stop","_addAnimation","_removeAnimation","_updateFrameObject","anim","_handleAnimation","splice","_runFrames","layerHash","i","layersLen","key","needRedraw","call","undefined","hasOwnProperty","batchDraw","_animationLoop","Anim","Util","requestAnimFrame","animRunning"],"sources":["/Users/nicolasgrenier/Documents/Code/fighting_RPG/node_modules/konva/lib/Animation.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Animation = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nvar now = (function () {\n    if (Global_1.glob.performance && Global_1.glob.performance.now) {\n        return function () {\n            return Global_1.glob.performance.now();\n        };\n    }\n    return function () {\n        return new Date().getTime();\n    };\n})();\nclass Animation {\n    constructor(func, layers) {\n        this.id = Animation.animIdCounter++;\n        this.frame = {\n            time: 0,\n            timeDiff: 0,\n            lastTime: now(),\n            frameRate: 0,\n        };\n        this.func = func;\n        this.setLayers(layers);\n    }\n    setLayers(layers) {\n        var lays = [];\n        if (!layers) {\n            lays = [];\n        }\n        else if (layers.length > 0) {\n            lays = layers;\n        }\n        else {\n            lays = [layers];\n        }\n        this.layers = lays;\n        return this;\n    }\n    getLayers() {\n        return this.layers;\n    }\n    addLayer(layer) {\n        var layers = this.layers, len = layers.length, n;\n        for (n = 0; n < len; n++) {\n            if (layers[n]._id === layer._id) {\n                return false;\n            }\n        }\n        this.layers.push(layer);\n        return true;\n    }\n    isRunning() {\n        var a = Animation, animations = a.animations, len = animations.length, n;\n        for (n = 0; n < len; n++) {\n            if (animations[n].id === this.id) {\n                return true;\n            }\n        }\n        return false;\n    }\n    start() {\n        this.stop();\n        this.frame.timeDiff = 0;\n        this.frame.lastTime = now();\n        Animation._addAnimation(this);\n        return this;\n    }\n    stop() {\n        Animation._removeAnimation(this);\n        return this;\n    }\n    _updateFrameObject(time) {\n        this.frame.timeDiff = time - this.frame.lastTime;\n        this.frame.lastTime = time;\n        this.frame.time += this.frame.timeDiff;\n        this.frame.frameRate = 1000 / this.frame.timeDiff;\n    }\n    static _addAnimation(anim) {\n        this.animations.push(anim);\n        this._handleAnimation();\n    }\n    static _removeAnimation(anim) {\n        var id = anim.id, animations = this.animations, len = animations.length, n;\n        for (n = 0; n < len; n++) {\n            if (animations[n].id === id) {\n                this.animations.splice(n, 1);\n                break;\n            }\n        }\n    }\n    static _runFrames() {\n        var layerHash = {}, animations = this.animations, anim, layers, func, n, i, layersLen, layer, key, needRedraw;\n        for (n = 0; n < animations.length; n++) {\n            anim = animations[n];\n            layers = anim.layers;\n            func = anim.func;\n            anim._updateFrameObject(now());\n            layersLen = layers.length;\n            if (func) {\n                needRedraw = func.call(anim, anim.frame) !== false;\n            }\n            else {\n                needRedraw = true;\n            }\n            if (!needRedraw) {\n                continue;\n            }\n            for (i = 0; i < layersLen; i++) {\n                layer = layers[i];\n                if (layer._id !== undefined) {\n                    layerHash[layer._id] = layer;\n                }\n            }\n        }\n        for (key in layerHash) {\n            if (!layerHash.hasOwnProperty(key)) {\n                continue;\n            }\n            layerHash[key].batchDraw();\n        }\n    }\n    static _animationLoop() {\n        var Anim = Animation;\n        if (Anim.animations.length) {\n            Anim._runFrames();\n            Util_1.Util.requestAnimFrame(Anim._animationLoop);\n        }\n        else {\n            Anim.animRunning = false;\n        }\n    }\n    static _handleAnimation() {\n        if (!this.animRunning) {\n            this.animRunning = true;\n            Util_1.Util.requestAnimFrame(this._animationLoop);\n        }\n    }\n}\nexports.Animation = Animation;\nAnimation.animations = [];\nAnimation.animIdCounter = 0;\nAnimation.animRunning = false;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}