{"ast":null,"code":"const INITIAL_STATE = {\n  player1: {\n    pseudo: \"\",\n    playerClass: {\n      className: \"\",\n      hp: null,\n      atk: null,\n      int: null,\n      spd: null,\n      agi: null,\n      armor: null,\n      color: \"\",\n      icon: \"\",\n      potions: null\n    }\n  },\n  player2: {\n    pseudo: \"\",\n    playerClass: {\n      className: \"\",\n      hp: null,\n      atk: null,\n      int: null,\n      spd: null,\n      agi: null,\n      armor: null,\n      color: \"\",\n      icon: \"\",\n      potions: null\n    }\n  }\n};\nconst playersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"PLAYER_PSEUDO\":\n      {\n        return {\n          ...state,\n          [action.payload.player]: {\n            ...state[action.payload.player],\n            pseudo: action.payload.pseudo\n          }\n        };\n      }\n    case \"UPDATE_PLAYER_CLASS\":\n      {\n        return {\n          ...state,\n          [action.payload.player]: {\n            ...state[action.payload.player],\n            playerClass: action.payload.playerClass\n          }\n        };\n      }\n\n    // case \"PLAYER_TAKE_DMG\": {\n    //   const { player, hitValue } = action.payload;\n    //   return {\n    //     ...state,\n    //     [action.payload.player]: {\n    //       ...state[player],\n    //       playerClass: {\n    //         ...state.playerClass,\n    //         hp: state.hp - hitValue,\n    //       },\n    //     },\n    //   };\n    // }\n\n    case \"PLAYER_TAKE_DMG\":\n      {\n        if (state[action.payload.player] && state[action.payload.player].playerClass && state[action.payload.player].playerClass.hp) {\n          const newHP = action.payload.player.playerClass.hp - action.payload.hitValue;\n          return {\n            ...state,\n            [action.payload.player]: {\n              ...state[action.payload.player],\n              playerClass: {\n                ...state[action.payload.player].playerClass,\n                hp: newHP\n              }\n            }\n          };\n        }\n      }\n    // case \"PLAYER_POTION_HEAL\": {\n    //   const { player, hitValue } = action.payload;\n    //   const playerData = state[player];\n\n    //   if (playerData && playerData.playerClass && playerData.playerClass.hp) {\n    //     // Vérifiez si playerData et playerData.playerClass existent\n    //     // avant d'accéder à la propriété hp\n    //     const newHP = playerData.playerClass.hp - action.payload.hitValue;\n\n    //     return {\n    //       ...state,\n    //       [player]: {\n    //         ...state[player],\n    //         playerClass: {\n    //           ...state[player].playerClass,\n    //           hp: newHP,\n    //         },\n    //       },\n    //     };\n    //   }\n    // }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport default playersReducer;","map":{"version":3,"names":["INITIAL_STATE","player1","pseudo","playerClass","className","hp","atk","int","spd","agi","armor","color","icon","potions","player2","playersReducer","state","action","type","payload","player","newHP","hitValue"],"sources":["/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/reducers/players.js"],"sourcesContent":["const INITIAL_STATE = {\n  player1: {\n    pseudo: \"\",\n    playerClass: {\n      className: \"\",\n      hp: null,\n      atk: null,\n      int: null,\n      spd: null,\n      agi: null,\n      armor: null,\n      color: \"\",\n      icon: \"\",\n      potions: null,\n    },\n  },\n  player2: {\n    pseudo: \"\",\n    playerClass: {\n      className: \"\",\n      hp: null,\n      atk: null,\n      int: null,\n      spd: null,\n      agi: null,\n      armor: null,\n      color: \"\",\n      icon: \"\",\n      potions: null,\n    },\n  },\n};\n\nconst playersReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"PLAYER_PSEUDO\": {\n      return {\n        ...state,\n        [action.payload.player]: {\n          ...state[action.payload.player],\n          pseudo: action.payload.pseudo,\n        },\n      };\n    }\n\n    case \"UPDATE_PLAYER_CLASS\": {\n      return {\n        ...state,\n        [action.payload.player]: {\n          ...state[action.payload.player],\n          playerClass: action.payload.playerClass,\n        },\n      };\n    }\n\n    // case \"PLAYER_TAKE_DMG\": {\n    //   const { player, hitValue } = action.payload;\n    //   return {\n    //     ...state,\n    //     [action.payload.player]: {\n    //       ...state[player],\n    //       playerClass: {\n    //         ...state.playerClass,\n    //         hp: state.hp - hitValue,\n    //       },\n    //     },\n    //   };\n    // }\n\n    case \"PLAYER_TAKE_DMG\": {\n      if (\n        state[action.payload.player] &&\n        state[action.payload.player].playerClass &&\n        state[action.payload.player].playerClass.hp\n      ) {\n        const newHP =\n          action.payload.player.playerClass.hp - action.payload.hitValue;\n\n        return {\n          ...state,\n          [action.payload.player]: {\n            ...state[action.payload.player],\n            playerClass: {\n              ...state[action.payload.player].playerClass,\n              hp: newHP,\n            },\n          },\n        };\n      }\n    }\n    // case \"PLAYER_POTION_HEAL\": {\n    //   const { player, hitValue } = action.payload;\n    //   const playerData = state[player];\n\n    //   if (playerData && playerData.playerClass && playerData.playerClass.hp) {\n    //     // Vérifiez si playerData et playerData.playerClass existent\n    //     // avant d'accéder à la propriété hp\n    //     const newHP = playerData.playerClass.hp - action.payload.hitValue;\n\n    //     return {\n    //       ...state,\n    //       [player]: {\n    //         ...state[player],\n    //         playerClass: {\n    //           ...state[player].playerClass,\n    //           hp: newHP,\n    //         },\n    //       },\n    //     };\n    //   }\n    // }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default playersReducer;\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG;EACpBC,OAAO,EAAE;IACPC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE;MACXC,SAAS,EAAE,EAAE;MACbC,EAAE,EAAE,IAAI;MACRC,GAAG,EAAE,IAAI;MACTC,GAAG,EAAE,IAAI;MACTC,GAAG,EAAE,IAAI;MACTC,GAAG,EAAE,IAAI;MACTC,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACPZ,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE;MACXC,SAAS,EAAE,EAAE;MACbC,EAAE,EAAE,IAAI;MACRC,GAAG,EAAE,IAAI;MACTC,GAAG,EAAE,IAAI;MACTC,GAAG,EAAE,IAAI;MACTC,GAAG,EAAE,IAAI;MACTC,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE;IACX;EACF;AACF,CAAC;AAED,MAAME,cAAc,GAAG,YAAmC;EAAA,IAAlCC,KAAK,uEAAGhB,aAAa;EAAA,IAAEiB,MAAM;EACnD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,eAAe;MAAE;QACpB,OAAO;UACL,GAAGF,KAAK;UACR,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,GAAG;YACvB,GAAGJ,KAAK,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC;YAC/BlB,MAAM,EAAEe,MAAM,CAACE,OAAO,CAACjB;UACzB;QACF,CAAC;MACH;IAEA,KAAK,qBAAqB;MAAE;QAC1B,OAAO;UACL,GAAGc,KAAK;UACR,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,GAAG;YACvB,GAAGJ,KAAK,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC;YAC/BjB,WAAW,EAAEc,MAAM,CAACE,OAAO,CAAChB;UAC9B;QACF,CAAC;MACH;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,KAAK,iBAAiB;MAAE;QACtB,IACEa,KAAK,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC,IAC5BJ,KAAK,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC,CAACjB,WAAW,IACxCa,KAAK,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC,CAACjB,WAAW,CAACE,EAAE,EAC3C;UACA,MAAMgB,KAAK,GACTJ,MAAM,CAACE,OAAO,CAACC,MAAM,CAACjB,WAAW,CAACE,EAAE,GAAGY,MAAM,CAACE,OAAO,CAACG,QAAQ;UAEhE,OAAO;YACL,GAAGN,KAAK;YACR,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,GAAG;cACvB,GAAGJ,KAAK,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC;cAC/BjB,WAAW,EAAE;gBACX,GAAGa,KAAK,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC,CAACjB,WAAW;gBAC3CE,EAAE,EAAEgB;cACN;YACF;UACF,CAAC;QACH;MACF;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;MAAS;QACP,OAAOL,KAAK;MACd;EAAC;AAEL,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}