{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/players-menus-sub-menu/pseudoInputs/PseudoInputs.jsx\";\nimport mc from \"./pseudo-inputs.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PseudoInputs = _ref => {\n  let {\n    inputValue,\n    player,\n    enterValidation,\n    pseudoInTitle,\n    inputValidationError,\n    updatePseudo\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: mc.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: mc.h3,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"CHOISIS TON PSEUDO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: mc.player1_2,\n        children: pseudoInTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mc.container_input,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: !inputValidationError ? mc.input : `${mc.input} input_empty`,\n        required: true,\n        type: \"text\",\n        name: \"pseudo\",\n        autoComplete: \"off\",\n        value: inputValue,\n        onChange: e => updatePseudo(player, e.target.value),\n        onKeyDown: enterValidation\n        //     // onAnimationEnd={() => handleAnimationEnd(setP1IsHidden)}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Ton  pseudo\".split(\"\").map((el, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            transitionDelay: `${i * 30}ms`\n          },\n          children: el\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = PseudoInputs;\nexport default PseudoInputs;\nvar _c;\n$RefreshReg$(_c, \"PseudoInputs\");","map":{"version":3,"names":["mc","PseudoInputs","inputValue","player","enterValidation","pseudoInTitle","inputValidationError","updatePseudo","container","h3","player1_2","container_input","input","e","target","value","split","map","el","i","transitionDelay"],"sources":["/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/players-menus-sub-menu/pseudoInputs/PseudoInputs.jsx"],"sourcesContent":["import mc from \"./pseudo-inputs.module.scss\";\n\nconst PseudoInputs = ({\n  inputValue,\n  player,\n  enterValidation,\n  pseudoInTitle,\n  inputValidationError,\n  updatePseudo,\n}) => {\n  return (\n    <div className={mc.container}>\n      <div className={mc.h3}>\n        <h3>CHOISIS TON PSEUDO</h3>\n        <span className={mc.player1_2}>{pseudoInTitle}</span>\n      </div>\n\n      <div className={mc.container_input}>\n        <input\n          className={\n            !inputValidationError ? mc.input : `${mc.input} input_empty`\n          }\n          required={true}\n          type=\"text\"\n          name=\"pseudo\"\n          autoComplete=\"off\"\n          value={inputValue}\n          onChange={(e) => updatePseudo(player, e.target.value)}\n          onKeyDown={enterValidation}\n          //     // onAnimationEnd={() => handleAnimationEnd(setP1IsHidden)}\n        />\n        <label>\n          {\"Ton  pseudo\".split(\"\").map((el, i) => (\n            <span key={i} style={{ transitionDelay: `${i * 30}ms` }}>\n              {el}\n            </span>\n          ))}\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default PseudoInputs;\n"],"mappings":";AAAA,OAAOA,EAAE,MAAM,6BAA6B;AAAC;AAE7C,MAAMC,YAAY,GAAG,QAOf;EAAA,IAPgB;IACpBC,UAAU;IACVC,MAAM;IACNC,eAAe;IACfC,aAAa;IACbC,oBAAoB;IACpBC;EACF,CAAC;EACC,oBACE;IAAK,SAAS,EAAEP,EAAE,CAACQ,SAAU;IAAA,wBAC3B;MAAK,SAAS,EAAER,EAAE,CAACS,EAAG;MAAA,wBACpB;QAAA,UAAI;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAK,eAC3B;QAAM,SAAS,EAAET,EAAE,CAACU,SAAU;QAAA,UAAEL;MAAa;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACjD,eAEN;MAAK,SAAS,EAAEL,EAAE,CAACW,eAAgB;MAAA,wBACjC;QACE,SAAS,EACP,CAACL,oBAAoB,GAAGN,EAAE,CAACY,KAAK,GAAI,GAAEZ,EAAE,CAACY,KAAM,cAChD;QACD,QAAQ,EAAE,IAAK;QACf,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,QAAQ;QACb,YAAY,EAAC,KAAK;QAClB,KAAK,EAAEV,UAAW;QAClB,QAAQ,EAAGW,CAAC,IAAKN,YAAY,CAACJ,MAAM,EAAEU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QACtD,SAAS,EAAEX;QACX;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACF;QAAA,UACG,aAAa,CAACY,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,EAAE,EAAEC,CAAC,kBACjC;UAAc,KAAK,EAAE;YAAEC,eAAe,EAAG,GAAED,CAAC,GAAG,EAAG;UAAI,CAAE;UAAA,UACrDD;QAAE,GADMC,CAAC;UAAA;UAAA;UAAA;QAAA,QAGb;MAAC;QAAA;QAAA;QAAA;MAAA,QACI;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,KAvCIlB,YAAY;AAyClB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}