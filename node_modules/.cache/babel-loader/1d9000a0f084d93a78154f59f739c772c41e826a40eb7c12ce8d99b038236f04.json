{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Layer = void 0;\nconst Util_1 = require(\"./Util\");\nconst Container_1 = require(\"./Container\");\nconst Node_1 = require(\"./Node\");\nconst Factory_1 = require(\"./Factory\");\nconst Canvas_1 = require(\"./Canvas\");\nconst Validators_1 = require(\"./Validators\");\nconst Shape_1 = require(\"./Shape\");\nconst Global_1 = require(\"./Global\");\nvar HASH = '#',\n  BEFORE_DRAW = 'beforeDraw',\n  DRAW = 'draw',\n  INTERSECTION_OFFSETS = [{\n    x: 0,\n    y: 0\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 1,\n    y: 1\n  }, {\n    x: -1,\n    y: 1\n  }],\n  INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nclass Layer extends Container_1.Container {\n  constructor(config) {\n    super(config);\n    this.canvas = new Canvas_1.SceneCanvas();\n    this.hitCanvas = new Canvas_1.HitCanvas({\n      pixelRatio: 1\n    });\n    this._waitingForDraw = false;\n    this.on('visibleChange.konva', this._checkVisibility);\n    this._checkVisibility();\n    this.on('imageSmoothingEnabledChange.konva', this._setSmoothEnabled);\n    this._setSmoothEnabled();\n  }\n  createPNGStream() {\n    const c = this.canvas._canvas;\n    return c.createPNGStream();\n  }\n  getCanvas() {\n    return this.canvas;\n  }\n  getNativeCanvasElement() {\n    return this.canvas._canvas;\n  }\n  getHitCanvas() {\n    return this.hitCanvas;\n  }\n  getContext() {\n    return this.getCanvas().getContext();\n  }\n  clear(bounds) {\n    this.getContext().clear(bounds);\n    this.getHitCanvas().getContext().clear(bounds);\n    return this;\n  }\n  setZIndex(index) {\n    super.setZIndex(index);\n    var stage = this.getStage();\n    if (stage && stage.content) {\n      stage.content.removeChild(this.getNativeCanvasElement());\n      if (index < stage.children.length - 1) {\n        stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n      } else {\n        stage.content.appendChild(this.getNativeCanvasElement());\n      }\n    }\n    return this;\n  }\n  moveToTop() {\n    Node_1.Node.prototype.moveToTop.call(this);\n    var stage = this.getStage();\n    if (stage && stage.content) {\n      stage.content.removeChild(this.getNativeCanvasElement());\n      stage.content.appendChild(this.getNativeCanvasElement());\n    }\n    return true;\n  }\n  moveUp() {\n    var moved = Node_1.Node.prototype.moveUp.call(this);\n    if (!moved) {\n      return false;\n    }\n    var stage = this.getStage();\n    if (!stage || !stage.content) {\n      return false;\n    }\n    stage.content.removeChild(this.getNativeCanvasElement());\n    if (this.index < stage.children.length - 1) {\n      stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n    } else {\n      stage.content.appendChild(this.getNativeCanvasElement());\n    }\n    return true;\n  }\n  moveDown() {\n    if (Node_1.Node.prototype.moveDown.call(this)) {\n      var stage = this.getStage();\n      if (stage) {\n        var children = stage.children;\n        if (stage.content) {\n          stage.content.removeChild(this.getNativeCanvasElement());\n          stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n  moveToBottom() {\n    if (Node_1.Node.prototype.moveToBottom.call(this)) {\n      var stage = this.getStage();\n      if (stage) {\n        var children = stage.children;\n        if (stage.content) {\n          stage.content.removeChild(this.getNativeCanvasElement());\n          stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n  getLayer() {\n    return this;\n  }\n  remove() {\n    var _canvas = this.getNativeCanvasElement();\n    Node_1.Node.prototype.remove.call(this);\n    if (_canvas && _canvas.parentNode && Util_1.Util._isInDocument(_canvas)) {\n      _canvas.parentNode.removeChild(_canvas);\n    }\n    return this;\n  }\n  getStage() {\n    return this.parent;\n  }\n  setSize(_ref) {\n    let {\n      width,\n      height\n    } = _ref;\n    this.canvas.setSize(width, height);\n    this.hitCanvas.setSize(width, height);\n    this._setSmoothEnabled();\n    return this;\n  }\n  _validateAdd(child) {\n    var type = child.getType();\n    if (type !== 'Group' && type !== 'Shape') {\n      Util_1.Util.throw('You may only add groups and shapes to a layer.');\n    }\n  }\n  _toKonvaCanvas(config) {\n    config = config || {};\n    config.width = config.width || this.getWidth();\n    config.height = config.height || this.getHeight();\n    config.x = config.x !== undefined ? config.x : this.x();\n    config.y = config.y !== undefined ? config.y : this.y();\n    return Node_1.Node.prototype._toKonvaCanvas.call(this, config);\n  }\n  _checkVisibility() {\n    const visible = this.visible();\n    if (visible) {\n      this.canvas._canvas.style.display = 'block';\n    } else {\n      this.canvas._canvas.style.display = 'none';\n    }\n  }\n  _setSmoothEnabled() {\n    this.getContext()._context.imageSmoothingEnabled = this.imageSmoothingEnabled();\n  }\n  getWidth() {\n    if (this.parent) {\n      return this.parent.width();\n    }\n  }\n  setWidth() {\n    Util_1.Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n  }\n  getHeight() {\n    if (this.parent) {\n      return this.parent.height();\n    }\n  }\n  setHeight() {\n    Util_1.Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n  }\n  batchDraw() {\n    if (!this._waitingForDraw) {\n      this._waitingForDraw = true;\n      Util_1.Util.requestAnimFrame(() => {\n        this.draw();\n        this._waitingForDraw = false;\n      });\n    }\n    return this;\n  }\n  getIntersection(pos) {\n    if (!this.isListening() || !this.isVisible()) {\n      return null;\n    }\n    var spiralSearchDistance = 1;\n    var continueSearch = false;\n    while (true) {\n      for (let i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n        const intersectionOffset = INTERSECTION_OFFSETS[i];\n        const obj = this._getIntersection({\n          x: pos.x + intersectionOffset.x * spiralSearchDistance,\n          y: pos.y + intersectionOffset.y * spiralSearchDistance\n        });\n        const shape = obj.shape;\n        if (shape) {\n          return shape;\n        }\n        continueSearch = !!obj.antialiased;\n        if (!obj.antialiased) {\n          break;\n        }\n      }\n      if (continueSearch) {\n        spiralSearchDistance += 1;\n      } else {\n        return null;\n      }\n    }\n  }\n  _getIntersection(pos) {\n    const ratio = this.hitCanvas.pixelRatio;\n    const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n    const p3 = p[3];\n    if (p3 === 255) {\n      const colorKey = Util_1.Util._rgbToHex(p[0], p[1], p[2]);\n      const shape = Shape_1.shapes[HASH + colorKey];\n      if (shape) {\n        return {\n          shape: shape\n        };\n      }\n      return {\n        antialiased: true\n      };\n    } else if (p3 > 0) {\n      return {\n        antialiased: true\n      };\n    }\n    return {};\n  }\n  drawScene(can, top) {\n    var layer = this.getLayer(),\n      canvas = can || layer && layer.getCanvas();\n    this._fire(BEFORE_DRAW, {\n      node: this\n    });\n    if (this.clearBeforeDraw()) {\n      canvas.getContext().clear();\n    }\n    Container_1.Container.prototype.drawScene.call(this, canvas, top);\n    this._fire(DRAW, {\n      node: this\n    });\n    return this;\n  }\n  drawHit(can, top) {\n    var layer = this.getLayer(),\n      canvas = can || layer && layer.hitCanvas;\n    if (layer && layer.clearBeforeDraw()) {\n      layer.getHitCanvas().getContext().clear();\n    }\n    Container_1.Container.prototype.drawHit.call(this, canvas, top);\n    return this;\n  }\n  enableHitGraph() {\n    this.hitGraphEnabled(true);\n    return this;\n  }\n  disableHitGraph() {\n    this.hitGraphEnabled(false);\n    return this;\n  }\n  setHitGraphEnabled(val) {\n    Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n    this.listening(val);\n  }\n  getHitGraphEnabled(val) {\n    Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n    return this.listening();\n  }\n  toggleHitCanvas() {\n    if (!this.parent || !this.parent['content']) {\n      return;\n    }\n    var parent = this.parent;\n    var added = !!this.hitCanvas._canvas.parentNode;\n    if (added) {\n      parent.content.removeChild(this.hitCanvas._canvas);\n    } else {\n      parent.content.appendChild(this.hitCanvas._canvas);\n    }\n  }\n  destroy() {\n    Util_1.Util.releaseCanvas(this.getNativeCanvasElement(), this.getHitCanvas()._canvas);\n    return super.destroy();\n  }\n}\nexports.Layer = Layer;\nLayer.prototype.nodeType = 'Layer';\n(0, Global_1._registerNode)(Layer);\nFactory_1.Factory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory_1.Factory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory_1.Factory.addGetterSetter(Layer, 'hitGraphEnabled', true, (0, Validators_1.getBooleanValidator)());","map":{"version":3,"names":["Object","defineProperty","exports","value","Layer","Util_1","require","Container_1","Node_1","Factory_1","Canvas_1","Validators_1","Shape_1","Global_1","HASH","BEFORE_DRAW","DRAW","INTERSECTION_OFFSETS","x","y","INTERSECTION_OFFSETS_LEN","length","Container","constructor","config","canvas","SceneCanvas","hitCanvas","HitCanvas","pixelRatio","_waitingForDraw","on","_checkVisibility","_setSmoothEnabled","createPNGStream","c","_canvas","getCanvas","getNativeCanvasElement","getHitCanvas","getContext","clear","bounds","setZIndex","index","stage","getStage","content","removeChild","children","insertBefore","appendChild","moveToTop","Node","prototype","call","moveUp","moved","moveDown","moveToBottom","getLayer","remove","parentNode","Util","_isInDocument","parent","setSize","width","height","_validateAdd","child","type","getType","throw","_toKonvaCanvas","getWidth","getHeight","undefined","visible","style","display","_context","imageSmoothingEnabled","setWidth","warn","setHeight","batchDraw","requestAnimFrame","draw","getIntersection","pos","isListening","isVisible","spiralSearchDistance","continueSearch","i","intersectionOffset","obj","_getIntersection","shape","antialiased","ratio","p","context","getImageData","Math","round","data","p3","colorKey","_rgbToHex","shapes","drawScene","can","top","layer","_fire","node","clearBeforeDraw","drawHit","enableHitGraph","hitGraphEnabled","disableHitGraph","setHitGraphEnabled","val","listening","getHitGraphEnabled","toggleHitCanvas","added","destroy","releaseCanvas","nodeType","_registerNode","Factory","addGetterSetter","getBooleanValidator"],"sources":["/Users/nicolasgrenier/Documents/Code/fighting_RPG/node_modules/konva/lib/Layer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Layer = void 0;\nconst Util_1 = require(\"./Util\");\nconst Container_1 = require(\"./Container\");\nconst Node_1 = require(\"./Node\");\nconst Factory_1 = require(\"./Factory\");\nconst Canvas_1 = require(\"./Canvas\");\nconst Validators_1 = require(\"./Validators\");\nconst Shape_1 = require(\"./Shape\");\nconst Global_1 = require(\"./Global\");\nvar HASH = '#', BEFORE_DRAW = 'beforeDraw', DRAW = 'draw', INTERSECTION_OFFSETS = [\n    { x: 0, y: 0 },\n    { x: -1, y: -1 },\n    { x: 1, y: -1 },\n    { x: 1, y: 1 },\n    { x: -1, y: 1 },\n], INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nclass Layer extends Container_1.Container {\n    constructor(config) {\n        super(config);\n        this.canvas = new Canvas_1.SceneCanvas();\n        this.hitCanvas = new Canvas_1.HitCanvas({\n            pixelRatio: 1,\n        });\n        this._waitingForDraw = false;\n        this.on('visibleChange.konva', this._checkVisibility);\n        this._checkVisibility();\n        this.on('imageSmoothingEnabledChange.konva', this._setSmoothEnabled);\n        this._setSmoothEnabled();\n    }\n    createPNGStream() {\n        const c = this.canvas._canvas;\n        return c.createPNGStream();\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    getNativeCanvasElement() {\n        return this.canvas._canvas;\n    }\n    getHitCanvas() {\n        return this.hitCanvas;\n    }\n    getContext() {\n        return this.getCanvas().getContext();\n    }\n    clear(bounds) {\n        this.getContext().clear(bounds);\n        this.getHitCanvas().getContext().clear(bounds);\n        return this;\n    }\n    setZIndex(index) {\n        super.setZIndex(index);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            if (index < stage.children.length - 1) {\n                stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n            }\n            else {\n                stage.content.appendChild(this.getNativeCanvasElement());\n            }\n        }\n        return this;\n    }\n    moveToTop() {\n        Node_1.Node.prototype.moveToTop.call(this);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveUp() {\n        var moved = Node_1.Node.prototype.moveUp.call(this);\n        if (!moved) {\n            return false;\n        }\n        var stage = this.getStage();\n        if (!stage || !stage.content) {\n            return false;\n        }\n        stage.content.removeChild(this.getNativeCanvasElement());\n        if (this.index < stage.children.length - 1) {\n            stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n        }\n        else {\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveDown() {\n        if (Node_1.Node.prototype.moveDown.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (Node_1.Node.prototype.moveToBottom.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    getLayer() {\n        return this;\n    }\n    remove() {\n        var _canvas = this.getNativeCanvasElement();\n        Node_1.Node.prototype.remove.call(this);\n        if (_canvas && _canvas.parentNode && Util_1.Util._isInDocument(_canvas)) {\n            _canvas.parentNode.removeChild(_canvas);\n        }\n        return this;\n    }\n    getStage() {\n        return this.parent;\n    }\n    setSize({ width, height }) {\n        this.canvas.setSize(width, height);\n        this.hitCanvas.setSize(width, height);\n        this._setSmoothEnabled();\n        return this;\n    }\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util_1.Util.throw('You may only add groups and shapes to a layer.');\n        }\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.width = config.width || this.getWidth();\n        config.height = config.height || this.getHeight();\n        config.x = config.x !== undefined ? config.x : this.x();\n        config.y = config.y !== undefined ? config.y : this.y();\n        return Node_1.Node.prototype._toKonvaCanvas.call(this, config);\n    }\n    _checkVisibility() {\n        const visible = this.visible();\n        if (visible) {\n            this.canvas._canvas.style.display = 'block';\n        }\n        else {\n            this.canvas._canvas.style.display = 'none';\n        }\n    }\n    _setSmoothEnabled() {\n        this.getContext()._context.imageSmoothingEnabled =\n            this.imageSmoothingEnabled();\n    }\n    getWidth() {\n        if (this.parent) {\n            return this.parent.width();\n        }\n    }\n    setWidth() {\n        Util_1.Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n    }\n    getHeight() {\n        if (this.parent) {\n            return this.parent.height();\n        }\n    }\n    setHeight() {\n        Util_1.Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n    }\n    batchDraw() {\n        if (!this._waitingForDraw) {\n            this._waitingForDraw = true;\n            Util_1.Util.requestAnimFrame(() => {\n                this.draw();\n                this._waitingForDraw = false;\n            });\n        }\n        return this;\n    }\n    getIntersection(pos) {\n        if (!this.isListening() || !this.isVisible()) {\n            return null;\n        }\n        var spiralSearchDistance = 1;\n        var continueSearch = false;\n        while (true) {\n            for (let i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n                const intersectionOffset = INTERSECTION_OFFSETS[i];\n                const obj = this._getIntersection({\n                    x: pos.x + intersectionOffset.x * spiralSearchDistance,\n                    y: pos.y + intersectionOffset.y * spiralSearchDistance,\n                });\n                const shape = obj.shape;\n                if (shape) {\n                    return shape;\n                }\n                continueSearch = !!obj.antialiased;\n                if (!obj.antialiased) {\n                    break;\n                }\n            }\n            if (continueSearch) {\n                spiralSearchDistance += 1;\n            }\n            else {\n                return null;\n            }\n        }\n    }\n    _getIntersection(pos) {\n        const ratio = this.hitCanvas.pixelRatio;\n        const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n        const p3 = p[3];\n        if (p3 === 255) {\n            const colorKey = Util_1.Util._rgbToHex(p[0], p[1], p[2]);\n            const shape = Shape_1.shapes[HASH + colorKey];\n            if (shape) {\n                return {\n                    shape: shape,\n                };\n            }\n            return {\n                antialiased: true,\n            };\n        }\n        else if (p3 > 0) {\n            return {\n                antialiased: true,\n            };\n        }\n        return {};\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n        this._fire(BEFORE_DRAW, {\n            node: this,\n        });\n        if (this.clearBeforeDraw()) {\n            canvas.getContext().clear();\n        }\n        Container_1.Container.prototype.drawScene.call(this, canvas, top);\n        this._fire(DRAW, {\n            node: this,\n        });\n        return this;\n    }\n    drawHit(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\n        if (layer && layer.clearBeforeDraw()) {\n            layer.getHitCanvas().getContext().clear();\n        }\n        Container_1.Container.prototype.drawHit.call(this, canvas, top);\n        return this;\n    }\n    enableHitGraph() {\n        this.hitGraphEnabled(true);\n        return this;\n    }\n    disableHitGraph() {\n        this.hitGraphEnabled(false);\n        return this;\n    }\n    setHitGraphEnabled(val) {\n        Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        this.listening(val);\n    }\n    getHitGraphEnabled(val) {\n        Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        return this.listening();\n    }\n    toggleHitCanvas() {\n        if (!this.parent || !this.parent['content']) {\n            return;\n        }\n        var parent = this.parent;\n        var added = !!this.hitCanvas._canvas.parentNode;\n        if (added) {\n            parent.content.removeChild(this.hitCanvas._canvas);\n        }\n        else {\n            parent.content.appendChild(this.hitCanvas._canvas);\n        }\n    }\n    destroy() {\n        Util_1.Util.releaseCanvas(this.getNativeCanvasElement(), this.getHitCanvas()._canvas);\n        return super.destroy();\n    }\n}\nexports.Layer = Layer;\nLayer.prototype.nodeType = 'Layer';\n(0, Global_1._registerNode)(Layer);\nFactory_1.Factory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory_1.Factory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory_1.Factory.addGetterSetter(Layer, 'hitGraphEnabled', true, (0, Validators_1.getBooleanValidator)());\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}