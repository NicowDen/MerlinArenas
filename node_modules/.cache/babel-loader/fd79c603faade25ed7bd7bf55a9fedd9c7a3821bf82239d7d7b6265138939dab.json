{"ast":null,"code":"const INITIAL_STATE = {\n  logs: []\n};\nconst fightReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"UPDATE_LOGS\":\n      {\n        return {\n          ...state,\n          logs: [...state.logs, action.payload.newlog]\n        };\n      }\n    case \"RESET_LOGS\":\n      {\n        return {\n          ...state,\n          logs: []\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport default fightReducer;","map":{"version":3,"names":["INITIAL_STATE","logs","fightReducer","state","action","type","payload","newlog"],"sources":["/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/reducers/fight.js"],"sourcesContent":["const INITIAL_STATE = {\n  logs: [],\n};\n\nconst fightReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"UPDATE_LOGS\": {\n      return { ...state, logs: [...state.logs, action.payload.newlog] };\n    }\n    case \"RESET_LOGS\": {\n      return { ...state, logs: [] };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default fightReducer;\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG;EACpBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,YAAY,GAAG,YAAmC;EAAA,IAAlCC,KAAK,uEAAGH,aAAa;EAAA,IAAEI,MAAM;EACjD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAAE;QAClB,OAAO;UAAE,GAAGF,KAAK;UAAEF,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAI,EAAEG,MAAM,CAACE,OAAO,CAACC,MAAM;QAAE,CAAC;MACnE;IACA,KAAK,YAAY;MAAE;QACjB,OAAO;UAAE,GAAGJ,KAAK;UAAEF,IAAI,EAAE;QAAG,CAAC;MAC/B;IAEA;MAAS;QACP,OAAOE,KAAK;MACd;EAAC;AAEL,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}