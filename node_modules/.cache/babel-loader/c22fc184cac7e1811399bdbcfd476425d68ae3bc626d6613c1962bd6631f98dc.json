{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene/FightScene.jsx\",\n  _s = $RefreshSig$();\nimport mc from \"./fight-scene.module.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n//components//\nimport LifeBar from \"../fight-scene-elements/life-bar/LifeBar\";\nimport MdjScene from \"../fight-scene-elements/mdj-scene/MdjScene\";\nimport Fight from \"../fight-scene-elements/fight/Fight\";\nimport Tv from \"../fight-scene-elements/tv/Tv\";\nimport Tutoriel from \"../fight-scene-elements/tutoriel/Tutoriel\";\n//utils//\nimport { getRandom } from \"../../utils/getRandom\";\nimport { mdjTauntAttacker, mdjWelcomeString1 } from \"../../constants/mdj\";\nimport { mdjTauntDefender } from \"../../constants/mdj\";\nimport { mdjWelcomeString } from \"../../constants/mdj\";\nimport { mdjFightWillStart } from \"../../constants/mdj\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FightScene = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    windowWidth,\n    player1,\n    player2,\n    tutoriel,\n    animationTutoriel,\n    logs,\n    playersClickOnstartGame,\n    startTv,\n    round,\n    dice,\n    attacker,\n    defender,\n    attackHit,\n    canPlay\n  } = useSelector(store => {\n    return {\n      player1: store.playersReducer.player1,\n      player2: store.playersReducer.player2,\n      windowWidth: store.windowSizeReducer.windowWidth,\n      tutoriel: store.fightReducer.tutoriel,\n      animationTutoriel: store.animationsReducer.animationTutoriel,\n      logs: store.fightReducer.logs,\n      playersClickOnstartGame: store.fightReducer.playersClickOnstartGame,\n      startTv: store.fightReducer.startTv,\n      round: store.fightReducer.round,\n      dice: store.fightReducer.dice,\n      attacker: store.fightReducer.attacker,\n      defender: store.fightReducer.defender,\n      attackHit: store.fightReducer.attackHit,\n      canPlay: store.fightReducer.canPlay\n    };\n  });\n\n  // console.log(getRandom(1, 6));\n\n  // const [mdjWelcomeStringRandomNumber, setMdjWelcomeStringRandomNumber] =\n  //   useState(null);\n  // const [mdjTauntDefenderRandomNumber, setMdjTauntDefenderRandomNumber] =\n  //   useState(null);\n  // const [mdjTauntAttackerRandomNumber, setMdjTauntAttackerRandomNumber] =\n  //   useState(null);\n\n  const [randomNWelcomeMdj, setRandomNWelcomeMdj] = useState(null);\n  const [randomNmdjTauntDefender, setRandomNmdjTauntDefender] = useState(null);\n  const [randomNmdjTauntAttacker, setRandomNmdjTauntAttacker] = useState(null);\n  const closeTutoriel = () => {\n    dispatch({\n      type: \"ANIMATION_CLOSE_TUTORIEL_START\"\n    });\n    setTimeout(() => {\n      dispatch({\n        type: \"CLOSE_TUTORIEL\"\n      });\n    }, 400);\n    setRandomNWelcomeMdj(getRandom(0, 1));\n  };\n  const newRound = nbRoundAdd => {\n    dispatch({\n      type: \"CANT_PLAY\"\n    });\n    setTimeout(() => {\n      dispatch({\n        type: \"UPDATE_ROUND\",\n        payload: {\n          round: round + nbRoundAdd\n        }\n      });\n      dispatch({\n        type: \"CAN_PLAY\"\n      });\n    }, 4000);\n  };\n  const newDice = () => {\n    dispatch({\n      type: \"UPDATE_DICE\",\n      payload: {\n        value: getRandom(1, 20)\n      }\n    });\n  };\n  const newLog = (string, attacker, defender) => {\n    dispatch({\n      type: \"UPDATE_LOGS\",\n      payload: {\n        newlog: attackHit ? `${attacker} inflige X points de dégâts à ${defender}` : `${defender} esquive`\n      }\n    });\n  };\n  const resetLogs = () => {\n    dispatch({\n      type: \"RESET_LOGS\"\n    });\n  };\n  // useEffect(() => {\n  //   dispatch({ type: \"RESET_LOGS\" });\n  // }, []);\n\n  //Fight end//\n  // const onEndFightButtonClick = () => {\n  //   dispatch({ type: `ANIMATION_FIGHT_START_CANCEL` });\n  //   setTimeout(() => {\n  //     dispatch({ type: `FIGHT_END` });\n  //   }, 300);\n  // };\n\n  const startGame = () => {\n    dispatch({\n      type: \"START_TV\"\n    });\n    setTimeout(() => {\n      dispatch({\n        type: \"LAUNCH_FIGHT\"\n      });\n      //get 1 or 2 and determine who play first and all the game long.\n      dispatch({\n        type: \"UPDATE_ROUND\",\n        payload: {\n          round: getRandom(1, 2)\n        }\n      });\n    }, 500);\n  };\n  const dodge = defender => {\n    return dice.value < defender.playerClass.agi ? true : false;\n  };\n\n  //skills rates//\n  const attackDamage = (attacker, defender, defenderDodge) => {\n    const dmg = attacker.playerClass.atk / 2 * attacker.playerClass.spd / 100 + attacker.playerClass.int / 9.5 + getRandom(1, 8);\n    if (dodge(defenderDodge)) {\n      dispatch({\n        type: \"PLAYER_TAKE_DMG\",\n        payload: {\n          player: defender,\n          hitValue: 0\n        }\n      });\n      dispatch({\n        type: \"ATTACK_MISS\"\n      });\n    } else {\n      dispatch({\n        type: \"PLAYER_TAKE_DMG\",\n        payload: {\n          player: defender,\n          hitValue: Math.round(dmg)\n        }\n      });\n      dispatch({\n        type: \"ATTACK_HIT\"\n      });\n    }\n  };\n  const attackerDefenderStrings = (attacker, defender) => {\n    dispatch({\n      type: \"UPDATE_ATTACKER\",\n      payload: {\n        attacker\n      }\n    });\n    dispatch({\n      type: \"UPDATE_DEFENDER\",\n      payload: {\n        defender\n      }\n    });\n  };\n\n  //round is even or odd, so modulo2 to determine who can play. If round is odd player 1, else player 2\n  //for each action we add 1 to round. No just change for 1 or 2. We need this way for capacities Cooldown.\n  //ATTACK SKILL//\n  const onAttackClickP1 = () => {\n    if (round % 2 === 1 && round > 0 && canPlay) {\n      newLog(\"player1 attaque\");\n      newRound(1);\n      newDice();\n      attackDamage(player1, \"player2\", player2);\n      attackerDefenderStrings(\"player1\", \"player2\");\n      setRandomNmdjTauntDefender(getRandom(0, 3));\n      setRandomNmdjTauntAttacker(0, 3);\n    }\n  };\n  const onAttackClickP2 = () => {\n    if (round % 2 === 0 && round > 0 && canPlay) {\n      newLog(\"player2 attaque\");\n      newRound(1);\n      newDice();\n      attackDamage(player2, \"player1\", player1);\n      attackerDefenderStrings(\"player2\", \"player1\");\n      setRandomNmdjTauntDefender(getRandom(0, 3));\n      setRandomNmdjTauntAttacker(0, 3);\n    }\n  };\n\n  //DEFENSE SKILL//\n  const onDefenseClickP1 = () => {\n    if (round % 2 === 1 && round > 0) {\n      newLog(\"player1 se met en position défensive\");\n      newRound(1);\n      newDice();\n    }\n  };\n  const onDefenseClickP2 = () => {\n    if (round % 2 === 0 && round > 0) {\n      newLog(\"player2 se met en position défensive\");\n      newRound(1);\n      newDice();\n    }\n  };\n\n  //ULTIM SKILL//\n  const onUltimClickP1 = () => {\n    if (round % 2 === 1 && round > 0) {\n      newLog(\"player1 utilise son ultime\");\n      newRound(1);\n      newDice();\n    }\n  };\n  const onUltimClickP2 = () => {\n    if (round % 2 === 0 && round > 0) {\n      newLog(\"player2 utilise son ultime\");\n      newRound(1);\n      newDice();\n    }\n  };\n\n  //POTION SKILL//\n  const onPotionClickP1 = () => {\n    if (round % 2 === 1 && round > 0) {\n      newLog(\"player1 prend une potion\");\n      newRound(1);\n      newDice();\n    }\n  };\n  const onPotionClickP2 = () => {\n    if (round % 2 === 0 && round > 0) {\n      newLog(\"player2 prend une potion\");\n      newRound(1);\n      newDice();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [tutoriel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mc.tutoriel,\n      children: /*#__PURE__*/_jsxDEV(Tutoriel, {\n        player1: player1,\n        player2: player2,\n        closeTutoriel: closeTutoriel,\n        animation: animationTutoriel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mc.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: mc.fightingZone_zone,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: mc.top_menu,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: mc.life_bars_player1,\n            children: /*#__PURE__*/_jsxDEV(LifeBar, {\n              windowWidth: windowWidth,\n              playerNumber: 1 //determine row-reverse for player1\n              ,\n              player: player1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: mc.top_tv,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startGame,\n              children: \"Clique ici pour commencer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: startTv ? `${mc.clean_tv} ${mc.clean_tv_on}` : mc.clean_tv\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), playersClickOnstartGame && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: mc.myTV,\n              children: /*#__PURE__*/_jsxDEV(Tv, {\n                round: round,\n                player1: player1,\n                player2: player2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: mc.life_bars_player2,\n            children: /*#__PURE__*/_jsxDEV(LifeBar, {\n              windowWidth: windowWidth,\n              playerNumber: 2 //determine row-reverse for player2\n              ,\n              player: player2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: mc.mdj_menu,\n          children: /*#__PURE__*/_jsxDEV(MdjScene, {\n            player1: player1,\n            player2: player2,\n            attacker: attacker === \"player1\" ? player1 : player2,\n            defender: defender === \"player1\" ? player1 : player2,\n            string: !playersClickOnstartGame && randomNWelcomeMdj !== null ? mdjWelcomeString[randomNWelcomeMdj] : playersClickOnstartGame && attackHit !== \"hit\" && attackHit !== \"fail\" ? mdjFightWillStart : playersClickOnstartGame && attackHit === \"hit\" ? mdjTauntDefender[randomNmdjTauntDefender] : attackHit === \"fail\" ? mdjTauntAttacker[randomNmdjTauntAttacker] : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: mc.fighting_menu,\n          children: /*#__PURE__*/_jsxDEV(Fight, {\n            windowWidth: windowWidth,\n            player1: player1,\n            player2: player2,\n            logs: logs,\n            onAttackClickP1: onAttackClickP1,\n            onDefenseClickP1: onDefenseClickP1,\n            onUltimClickP1: onUltimClickP1,\n            onPotionClickP1: onPotionClickP1,\n            onAttackClickP2: onAttackClickP2,\n            onDefenseClickP2: onDefenseClickP2,\n            onUltimClickP2: onUltimClickP2,\n            onPotionClickP2: onPotionClickP2,\n            round: round\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FightScene, \"qVPPFocxFB7WANUBNN1+bWi/CHM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = FightScene;\nexport default FightScene;\nvar _c;\n$RefreshReg$(_c, \"FightScene\");","map":{"version":3,"names":["mc","useDispatch","useSelector","useEffect","useState","LifeBar","MdjScene","Fight","Tv","Tutoriel","getRandom","mdjTauntAttacker","mdjWelcomeString1","mdjTauntDefender","mdjWelcomeString","mdjFightWillStart","FightScene","dispatch","windowWidth","player1","player2","tutoriel","animationTutoriel","logs","playersClickOnstartGame","startTv","round","dice","attacker","defender","attackHit","canPlay","store","playersReducer","windowSizeReducer","fightReducer","animationsReducer","randomNWelcomeMdj","setRandomNWelcomeMdj","randomNmdjTauntDefender","setRandomNmdjTauntDefender","randomNmdjTauntAttacker","setRandomNmdjTauntAttacker","closeTutoriel","type","setTimeout","newRound","nbRoundAdd","payload","newDice","value","newLog","string","newlog","resetLogs","startGame","dodge","playerClass","agi","attackDamage","defenderDodge","dmg","atk","spd","int","player","hitValue","Math","attackerDefenderStrings","onAttackClickP1","onAttackClickP2","onDefenseClickP1","onDefenseClickP2","onUltimClickP1","onUltimClickP2","onPotionClickP1","onPotionClickP2","container","fightingZone_zone","top_menu","life_bars_player1","top_tv","clean_tv","clean_tv_on","myTV","life_bars_player2","mdj_menu","fighting_menu"],"sources":["/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene/FightScene.jsx"],"sourcesContent":["import mc from \"./fight-scene.module.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n//components//\nimport LifeBar from \"../fight-scene-elements/life-bar/LifeBar\";\nimport MdjScene from \"../fight-scene-elements/mdj-scene/MdjScene\";\nimport Fight from \"../fight-scene-elements/fight/Fight\";\nimport Tv from \"../fight-scene-elements/tv/Tv\";\nimport Tutoriel from \"../fight-scene-elements/tutoriel/Tutoriel\";\n//utils//\nimport { getRandom } from \"../../utils/getRandom\";\nimport { mdjTauntAttacker, mdjWelcomeString1 } from \"../../constants/mdj\";\nimport { mdjTauntDefender } from \"../../constants/mdj\";\nimport { mdjWelcomeString } from \"../../constants/mdj\";\nimport { mdjFightWillStart } from \"../../constants/mdj\";\n\nconst FightScene = () => {\n  const dispatch = useDispatch();\n\n  const {\n    windowWidth,\n    player1,\n    player2,\n    tutoriel,\n    animationTutoriel,\n    logs,\n    playersClickOnstartGame,\n    startTv,\n    round,\n    dice,\n    attacker,\n    defender,\n    attackHit,\n    canPlay,\n  } = useSelector((store) => {\n    return {\n      player1: store.playersReducer.player1,\n      player2: store.playersReducer.player2,\n      windowWidth: store.windowSizeReducer.windowWidth,\n      tutoriel: store.fightReducer.tutoriel,\n      animationTutoriel: store.animationsReducer.animationTutoriel,\n      logs: store.fightReducer.logs,\n      playersClickOnstartGame: store.fightReducer.playersClickOnstartGame,\n      startTv: store.fightReducer.startTv,\n      round: store.fightReducer.round,\n      dice: store.fightReducer.dice,\n      attacker: store.fightReducer.attacker,\n      defender: store.fightReducer.defender,\n      attackHit: store.fightReducer.attackHit,\n      canPlay: store.fightReducer.canPlay,\n    };\n  });\n\n  // console.log(getRandom(1, 6));\n\n  // const [mdjWelcomeStringRandomNumber, setMdjWelcomeStringRandomNumber] =\n  //   useState(null);\n  // const [mdjTauntDefenderRandomNumber, setMdjTauntDefenderRandomNumber] =\n  //   useState(null);\n  // const [mdjTauntAttackerRandomNumber, setMdjTauntAttackerRandomNumber] =\n  //   useState(null);\n\n  const [randomNWelcomeMdj, setRandomNWelcomeMdj] = useState(null);\n  const [randomNmdjTauntDefender, setRandomNmdjTauntDefender] = useState(null);\n  const [randomNmdjTauntAttacker, setRandomNmdjTauntAttacker] = useState(null);\n\n  const closeTutoriel = () => {\n    dispatch({\n      type: \"ANIMATION_CLOSE_TUTORIEL_START\",\n    });\n    setTimeout(() => {\n      dispatch({ type: \"CLOSE_TUTORIEL\" });\n    }, 400);\n    setRandomNWelcomeMdj(getRandom(0, 1));\n  };\n\n  const newRound = (nbRoundAdd) => {\n    dispatch({ type: \"CANT_PLAY\" });\n    setTimeout(() => {\n      dispatch({\n        type: \"UPDATE_ROUND\",\n        payload: { round: round + nbRoundAdd },\n      });\n      dispatch({ type: \"CAN_PLAY\" });\n    }, 4000);\n  };\n\n  const newDice = () => {\n    dispatch({\n      type: \"UPDATE_DICE\",\n      payload: { value: getRandom(1, 20) },\n    });\n  };\n\n  const newLog = (string, attacker, defender) => {\n    dispatch({\n      type: \"UPDATE_LOGS\",\n      payload: {\n        newlog: attackHit\n          ? `${attacker} inflige X points de dégâts à ${defender}`\n          : `${defender} esquive`,\n      },\n    });\n  };\n\n  const resetLogs = () => {\n    dispatch({ type: \"RESET_LOGS\" });\n  };\n  // useEffect(() => {\n  //   dispatch({ type: \"RESET_LOGS\" });\n  // }, []);\n\n  //Fight end//\n  // const onEndFightButtonClick = () => {\n  //   dispatch({ type: `ANIMATION_FIGHT_START_CANCEL` });\n  //   setTimeout(() => {\n  //     dispatch({ type: `FIGHT_END` });\n  //   }, 300);\n  // };\n\n  const startGame = () => {\n    dispatch({ type: \"START_TV\" });\n    setTimeout(() => {\n      dispatch({ type: \"LAUNCH_FIGHT\" });\n      //get 1 or 2 and determine who play first and all the game long.\n      dispatch({\n        type: \"UPDATE_ROUND\",\n        payload: { round: getRandom(1, 2) },\n      });\n    }, 500);\n  };\n\n  const dodge = (defender) => {\n    return dice.value < defender.playerClass.agi ? true : false;\n  };\n\n  //skills rates//\n  const attackDamage = (attacker, defender, defenderDodge) => {\n    const dmg =\n      ((attacker.playerClass.atk / 2) * attacker.playerClass.spd) / 100 +\n      attacker.playerClass.int / 9.5 +\n      getRandom(1, 8);\n    if (dodge(defenderDodge)) {\n      dispatch({\n        type: \"PLAYER_TAKE_DMG\",\n        payload: { player: defender, hitValue: 0 },\n      });\n      dispatch({\n        type: \"ATTACK_MISS\",\n      });\n    } else {\n      dispatch({\n        type: \"PLAYER_TAKE_DMG\",\n        payload: { player: defender, hitValue: Math.round(dmg) },\n      });\n      dispatch({\n        type: \"ATTACK_HIT\",\n      });\n    }\n  };\n\n  const attackerDefenderStrings = (attacker, defender) => {\n    dispatch({\n      type: \"UPDATE_ATTACKER\",\n      payload: { attacker },\n    });\n    dispatch({\n      type: \"UPDATE_DEFENDER\",\n      payload: { defender },\n    });\n  };\n\n  //round is even or odd, so modulo2 to determine who can play. If round is odd player 1, else player 2\n  //for each action we add 1 to round. No just change for 1 or 2. We need this way for capacities Cooldown.\n  //ATTACK SKILL//\n  const onAttackClickP1 = () => {\n    if (round % 2 === 1 && round > 0 && canPlay) {\n      newLog(\"player1 attaque\");\n      newRound(1);\n      newDice();\n      attackDamage(player1, \"player2\", player2);\n      attackerDefenderStrings(\"player1\", \"player2\");\n      setRandomNmdjTauntDefender(getRandom(0, 3));\n      setRandomNmdjTauntAttacker(0, 3);\n    }\n  };\n  const onAttackClickP2 = () => {\n    if (round % 2 === 0 && round > 0 && canPlay) {\n      newLog(\"player2 attaque\");\n      newRound(1);\n      newDice();\n      attackDamage(player2, \"player1\", player1);\n      attackerDefenderStrings(\"player2\", \"player1\");\n      setRandomNmdjTauntDefender(getRandom(0, 3));\n      setRandomNmdjTauntAttacker(0, 3);\n    }\n  };\n\n  //DEFENSE SKILL//\n  const onDefenseClickP1 = () => {\n    if (round % 2 === 1 && round > 0) {\n      newLog(\"player1 se met en position défensive\");\n      newRound(1);\n      newDice();\n    }\n  };\n  const onDefenseClickP2 = () => {\n    if (round % 2 === 0 && round > 0) {\n      newLog(\"player2 se met en position défensive\");\n      newRound(1);\n      newDice();\n    }\n  };\n\n  //ULTIM SKILL//\n  const onUltimClickP1 = () => {\n    if (round % 2 === 1 && round > 0) {\n      newLog(\"player1 utilise son ultime\");\n      newRound(1);\n      newDice();\n    }\n  };\n  const onUltimClickP2 = () => {\n    if (round % 2 === 0 && round > 0) {\n      newLog(\"player2 utilise son ultime\");\n      newRound(1);\n      newDice();\n    }\n  };\n\n  //POTION SKILL//\n  const onPotionClickP1 = () => {\n    if (round % 2 === 1 && round > 0) {\n      newLog(\"player1 prend une potion\");\n      newRound(1);\n      newDice();\n    }\n  };\n  const onPotionClickP2 = () => {\n    if (round % 2 === 0 && round > 0) {\n      newLog(\"player2 prend une potion\");\n      newRound(1);\n      newDice();\n    }\n  };\n\n  return (\n    <>\n      {tutoriel && (\n        <div className={mc.tutoriel}>\n          <Tutoriel\n            player1={player1}\n            player2={player2}\n            closeTutoriel={closeTutoriel}\n            animation={animationTutoriel}\n          />\n        </div>\n      )}\n      <div className={mc.container}>\n        <div className={mc.fightingZone_zone}>\n          <div className={mc.top_menu}>\n            <div className={mc.life_bars_player1}>\n              <LifeBar\n                windowWidth={windowWidth}\n                playerNumber={1} //determine row-reverse for player1\n                player={player1}\n              />\n            </div>\n            <div className={mc.top_tv}>\n              <button onClick={startGame}>Clique ici pour commencer</button>\n              <div\n                className={\n                  startTv ? `${mc.clean_tv} ${mc.clean_tv_on}` : mc.clean_tv\n                }\n              ></div>\n              {playersClickOnstartGame && (\n                <div className={mc.myTV}>\n                  <Tv round={round} player1={player1} player2={player2} />\n                </div>\n              )}\n            </div>\n\n            <div className={mc.life_bars_player2}>\n              <LifeBar\n                windowWidth={windowWidth}\n                playerNumber={2} //determine row-reverse for player2\n                player={player2}\n              />\n            </div>\n          </div>\n          <div className={mc.mdj_menu}>\n            <MdjScene\n              player1={player1}\n              player2={player2}\n              attacker={attacker === \"player1\" ? player1 : player2}\n              defender={defender === \"player1\" ? player1 : player2}\n              string={\n                !playersClickOnstartGame && randomNWelcomeMdj !== null\n                  ? mdjWelcomeString[randomNWelcomeMdj]\n                  : playersClickOnstartGame &&\n                    attackHit !== \"hit\" &&\n                    attackHit !== \"fail\"\n                  ? mdjFightWillStart\n                  : playersClickOnstartGame && attackHit === \"hit\"\n                  ? mdjTauntDefender[randomNmdjTauntDefender]\n                  : attackHit === \"fail\"\n                  ? mdjTauntAttacker[randomNmdjTauntAttacker]\n                  : \"\"\n              }\n            />\n          </div>\n          <div className={mc.fighting_menu}>\n            <Fight\n              windowWidth={windowWidth}\n              player1={player1}\n              player2={player2}\n              logs={logs}\n              onAttackClickP1={onAttackClickP1}\n              onDefenseClickP1={onDefenseClickP1}\n              onUltimClickP1={onUltimClickP1}\n              onPotionClickP1={onPotionClickP1}\n              onAttackClickP2={onAttackClickP2}\n              onDefenseClickP2={onDefenseClickP2}\n              onUltimClickP2={onUltimClickP2}\n              onPotionClickP2={onPotionClickP2}\n              round={round}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FightScene;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}