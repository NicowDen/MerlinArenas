{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene/FightScene.jsx\",\n  _s = $RefreshSig$();\nimport mc from \"./fight-scene.module.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useRef } from \"react\";\n//sprites//\nimport zombie_player1 from \"../../images/zombie_player1.png\";\nimport zombie_player2 from \"../../images/zombie_player2.png\";\nimport knight_player1 from \"../../images/knight_player1.png\";\nimport knight_player2 from \"../../images/knight_player2.png\";\nimport ninja_player1 from \"../../images/ninja_player1.png\";\nimport ninja_player2 from \"../../images/ninja_player2.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FightScene = () => {\n  _s();\n  const dispatch = useDispatch();\n  const onEndFightButtonClick = () => {\n    dispatch({\n      type: `ANIMATION_FIGHT_START_CANCEL`\n    });\n    setTimeout(() => {\n      //setTimeout to match with transition on css and let animation finish before components switch\n      dispatch({\n        type: `FIGHT_END`\n      });\n    }, 300);\n  };\n\n  //   const canvasRef = useRef(null);\n\n  //   useEffect(() => {\n  //     const canvas = canvasRef.current;\n  //     const context = canvas.getContext(\"2d\");\n  //     context.fillStyle = \"black\";\n  //     context.fillRect(0, 0, canvas.width, canvas.height);\n  //   }, []);\n\n  //   useEffect(() => {\n  //     const x = 0; // Coordonnée X de l'image sur le canvas\n  //     const y = 0; // Coordonnée Y de l'image sur le canvas\n  //     const width = 100; // Largeur de l'image sur le canvas\n  //     const height = 100; // Hauteur de l'image sur le canvas\n  //     const canvas = canvasRef.current;\n  //     const context = canvas.getContext(\"2d\");\n  //     context.clearRect(0, 0, canvas.width, canvas.height); // Efface le canvas\n  //     context.fillStyle = \"black\";\n  //     context.fillRect(0, 0, canvas.width, canvas.height);\n  //     // Charge l'image\n  //     const image = new Image();\n  //     image.src = ninja_player1;\n\n  //     // Attend que l'image soit chargée avant de la dessiner\n  //     image.onload = () => {\n  //       // Dessine l'image sur le canvas\n  //       context.drawImage(image, x, y, width, height); // Remplacez x, y, width, height par les valeurs appropriées\n  //     };\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onEndFightButtonClick,\n    className: mc.container,\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: mc.canvas_game\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(FightScene, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = FightScene;\nexport default FightScene;\nvar _c;\n$RefreshReg$(_c, \"FightScene\");","map":{"version":3,"names":["mc","useSelector","useDispatch","useEffect","useRef","zombie_player1","zombie_player2","knight_player1","knight_player2","ninja_player1","ninja_player2","FightScene","dispatch","onEndFightButtonClick","type","setTimeout","container","canvasRef","canvas_game"],"sources":["/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene/FightScene.jsx"],"sourcesContent":["import mc from \"./fight-scene.module.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useRef } from \"react\";\n//sprites//\nimport zombie_player1 from \"../../images/zombie_player1.png\";\nimport zombie_player2 from \"../../images/zombie_player2.png\";\nimport knight_player1 from \"../../images/knight_player1.png\";\nimport knight_player2 from \"../../images/knight_player2.png\";\nimport ninja_player1 from \"../../images/ninja_player1.png\";\nimport ninja_player2 from \"../../images/ninja_player2.png\";\n\nconst FightScene = () => {\n  const dispatch = useDispatch();\n\n  const onEndFightButtonClick = () => {\n    dispatch({ type: `ANIMATION_FIGHT_START_CANCEL` });\n    setTimeout(() => {\n      //setTimeout to match with transition on css and let animation finish before components switch\n      dispatch({ type: `FIGHT_END` });\n    }, 300);\n  };\n\n  //   const canvasRef = useRef(null);\n\n  //   useEffect(() => {\n  //     const canvas = canvasRef.current;\n  //     const context = canvas.getContext(\"2d\");\n  //     context.fillStyle = \"black\";\n  //     context.fillRect(0, 0, canvas.width, canvas.height);\n  //   }, []);\n\n  //   useEffect(() => {\n  //     const x = 0; // Coordonnée X de l'image sur le canvas\n  //     const y = 0; // Coordonnée Y de l'image sur le canvas\n  //     const width = 100; // Largeur de l'image sur le canvas\n  //     const height = 100; // Hauteur de l'image sur le canvas\n  //     const canvas = canvasRef.current;\n  //     const context = canvas.getContext(\"2d\");\n  //     context.clearRect(0, 0, canvas.width, canvas.height); // Efface le canvas\n  //     context.fillStyle = \"black\";\n  //     context.fillRect(0, 0, canvas.width, canvas.height);\n  //     // Charge l'image\n  //     const image = new Image();\n  //     image.src = ninja_player1;\n\n  //     // Attend que l'image soit chargée avant de la dessiner\n  //     image.onload = () => {\n  //       // Dessine l'image sur le canvas\n  //       context.drawImage(image, x, y, width, height); // Remplacez x, y, width, height par les valeurs appropriées\n  //     };\n  //   }, []);\n\n  return (\n    <div onClick={onEndFightButtonClick} className={mc.container}>\n      <canvas ref={canvasRef} className={mc.canvas_game} />\n    </div>\n  );\n};\n\nexport default FightScene;\n"],"mappings":";;AAAA,OAAOA,EAAE,MAAM,2BAA2B;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC;AACA,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,aAAa,MAAM,gCAAgC;AAAC;AAE3D,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAE9B,MAAMW,qBAAqB,GAAG,MAAM;IAClCD,QAAQ,CAAC;MAAEE,IAAI,EAAG;IAA8B,CAAC,CAAC;IAClDC,UAAU,CAAC,MAAM;MACf;MACAH,QAAQ,CAAC;QAAEE,IAAI,EAAG;MAAW,CAAC,CAAC;IACjC,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;;EAED;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,OAAO,EAAED,qBAAsB;IAAC,SAAS,EAAEb,EAAE,CAACgB,SAAU;IAAA,uBAC3D;MAAQ,GAAG,EAAEC,SAAU;MAAC,SAAS,EAAEjB,EAAE,CAACkB;IAAY;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACjD;AAEV,CAAC;AAAC,GA9CIP,UAAU;EAAA,QACGT,WAAW;AAAA;AAAA,KADxBS,UAAU;AAgDhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}