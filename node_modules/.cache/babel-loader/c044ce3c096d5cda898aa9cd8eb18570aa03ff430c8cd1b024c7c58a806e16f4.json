{"ast":null,"code":"// // import mc from \"./fight-scene.module.scss\";\n// // import { useDispatch } from \"react-redux\";\n// // import { render } from \"react-dom\";\n// // import { Stage, Layer, Rect, Text } from \"react-konva\";\n// // import Konva from \"konva\";\n// // import { useState } from \"react\";\n// // //sprites//\n// // // import zombie_player1 from \"../../images/zombie_player1.png\";\n// // // import zombie_player2 from \"../../images/zombie_player2.png\";\n// // // import knight_player1 from \"../../images/knight_player1.png\";\n// // // import knight_player2 from \"../../images/knight_player2.png\";\n// // // import ninja_player1 from \"../../images/ninja_player1.png\";\n// // // import ninja_player2 from \"../../images/ninja_player2.png\";\n\n// // const FightScene = () => {\n// //   const dispatch = useDispatch();\n\n// //   const onEndFightButtonClick = () => {\n// //     dispatch({ type: `ANIMATION_FIGHT_START_CANCEL` });\n// //     setTimeout(() => {\n// //       //setTimeout to match with transition on css and let animation finish before components switch\n// //       dispatch({ type: `FIGHT_END` });\n// //     }, 300);\n// //   };\n\n// //   const ColoredRect = () => {\n// //     const [color, setColor] = useState(\"green\");\n// //     const handleClick = () => {\n// //       setColor(Konva.Util.getRandomColor());\n// //     };\n// //     return (\n// //       <Rect\n// //         x={50}\n// //         y={0}\n// //         width={100}\n// //         height={100}\n// //         fill={color}\n// //         shadowBlur={5}\n// //         onClick={handleClick}\n// //       />\n// //     );\n// //   };\n\n// //   return (\n// //     <div\n// //       // onClick={onEndFightButtonClick}\n// //       className={mc.container}\n// //     >\n// //       <div className={mc.canvas_game}>\n// //         <Stage width={100} height={100}>\n// //           <Layer>\n// //             <Text text=\"Try click on rect\" />\n// //             <ColoredRect />\n// //           </Layer>\n// //         </Stage>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default FightScene;\n\n// import mc from \"./fight-scene.module.scss\";\n// import { useDispatch } from \"react-redux\";\n// import { render } from \"react-dom\";\n// import { Stage, Layer, Rect, Text } from \"react-konva\";\n// import Konva from \"konva\";\n// import { useState } from \"react\";\n\n// const FightScene = () => {\n//   const dispatch = useDispatch();\n\n//   const onEndFightButtonClick = () => {\n//     dispatch({ type: `ANIMATION_FIGHT_START_CANCEL` });\n//     setTimeout(() => {\n//       dispatch({ type: `FIGHT_END` });\n//     }, 300);\n//   };\n\n//   const ColoredRect = () => {\n//     const [color, setColor] = useState(\"green\");\n//     const handleClick = () => {\n//       setColor(Konva.Util.getRandomColor());\n//     };\n//     return (\n//       <Rect\n//         x={50}\n//         y={0}\n//         width={100}\n//         height={100}\n//         fill={color}\n//         shadowBlur={5}\n//         onClick={handleClick}\n//       />\n//     );\n//   };\n\n//   return (\n//     <div\n//       // onClick={onEndFightButtonClick}\n//       className={mc.container}\n//     >\n//       <div className={mc.canvas_game}>\n//         {/* Use clientWidth to get the width of the container */}\n//         <Stage\n//           width={document.querySelector(`.${mc.container}`).clientWidth}\n//           height={100}\n//         >\n//           <Layer>\n//             <Text text=\"Try click on rect\" />\n//             <ColoredRect />\n//           </Layer>\n//         </Stage>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default FightScene;","map":{"version":3,"names":[],"sources":["/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene/FightScene.jsx"],"sourcesContent":["// // import mc from \"./fight-scene.module.scss\";\n// // import { useDispatch } from \"react-redux\";\n// // import { render } from \"react-dom\";\n// // import { Stage, Layer, Rect, Text } from \"react-konva\";\n// // import Konva from \"konva\";\n// // import { useState } from \"react\";\n// // //sprites//\n// // // import zombie_player1 from \"../../images/zombie_player1.png\";\n// // // import zombie_player2 from \"../../images/zombie_player2.png\";\n// // // import knight_player1 from \"../../images/knight_player1.png\";\n// // // import knight_player2 from \"../../images/knight_player2.png\";\n// // // import ninja_player1 from \"../../images/ninja_player1.png\";\n// // // import ninja_player2 from \"../../images/ninja_player2.png\";\n\n// // const FightScene = () => {\n// //   const dispatch = useDispatch();\n\n// //   const onEndFightButtonClick = () => {\n// //     dispatch({ type: `ANIMATION_FIGHT_START_CANCEL` });\n// //     setTimeout(() => {\n// //       //setTimeout to match with transition on css and let animation finish before components switch\n// //       dispatch({ type: `FIGHT_END` });\n// //     }, 300);\n// //   };\n\n// //   const ColoredRect = () => {\n// //     const [color, setColor] = useState(\"green\");\n// //     const handleClick = () => {\n// //       setColor(Konva.Util.getRandomColor());\n// //     };\n// //     return (\n// //       <Rect\n// //         x={50}\n// //         y={0}\n// //         width={100}\n// //         height={100}\n// //         fill={color}\n// //         shadowBlur={5}\n// //         onClick={handleClick}\n// //       />\n// //     );\n// //   };\n\n// //   return (\n// //     <div\n// //       // onClick={onEndFightButtonClick}\n// //       className={mc.container}\n// //     >\n// //       <div className={mc.canvas_game}>\n// //         <Stage width={100} height={100}>\n// //           <Layer>\n// //             <Text text=\"Try click on rect\" />\n// //             <ColoredRect />\n// //           </Layer>\n// //         </Stage>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default FightScene;\n\n// import mc from \"./fight-scene.module.scss\";\n// import { useDispatch } from \"react-redux\";\n// import { render } from \"react-dom\";\n// import { Stage, Layer, Rect, Text } from \"react-konva\";\n// import Konva from \"konva\";\n// import { useState } from \"react\";\n\n// const FightScene = () => {\n//   const dispatch = useDispatch();\n\n//   const onEndFightButtonClick = () => {\n//     dispatch({ type: `ANIMATION_FIGHT_START_CANCEL` });\n//     setTimeout(() => {\n//       dispatch({ type: `FIGHT_END` });\n//     }, 300);\n//   };\n\n//   const ColoredRect = () => {\n//     const [color, setColor] = useState(\"green\");\n//     const handleClick = () => {\n//       setColor(Konva.Util.getRandomColor());\n//     };\n//     return (\n//       <Rect\n//         x={50}\n//         y={0}\n//         width={100}\n//         height={100}\n//         fill={color}\n//         shadowBlur={5}\n//         onClick={handleClick}\n//       />\n//     );\n//   };\n\n//   return (\n//     <div\n//       // onClick={onEndFightButtonClick}\n//       className={mc.container}\n//     >\n//       <div className={mc.canvas_game}>\n//         {/* Use clientWidth to get the width of the container */}\n//         <Stage\n//           width={document.querySelector(`.${mc.container}`).clientWidth}\n//           height={100}\n//         >\n//           <Layer>\n//             <Text text=\"Try click on rect\" />\n//             <ColoredRect />\n//           </Layer>\n//         </Stage>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default FightScene;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}