{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Util = exports.Transform = void 0;\nconst Global_1 = require(\"./Global\");\nclass Transform {\n  constructor() {\n    let m = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [1, 0, 0, 1, 0, 0];\n    this.dirty = false;\n    this.m = m && m.slice() || [1, 0, 0, 1, 0, 0];\n  }\n  reset() {\n    this.m[0] = 1;\n    this.m[1] = 0;\n    this.m[2] = 0;\n    this.m[3] = 1;\n    this.m[4] = 0;\n    this.m[5] = 0;\n  }\n  copy() {\n    return new Transform(this.m);\n  }\n  copyInto(tr) {\n    tr.m[0] = this.m[0];\n    tr.m[1] = this.m[1];\n    tr.m[2] = this.m[2];\n    tr.m[3] = this.m[3];\n    tr.m[4] = this.m[4];\n    tr.m[5] = this.m[5];\n  }\n  point(point) {\n    var m = this.m;\n    return {\n      x: m[0] * point.x + m[2] * point.y + m[4],\n      y: m[1] * point.x + m[3] * point.y + m[5]\n    };\n  }\n  translate(x, y) {\n    this.m[4] += this.m[0] * x + this.m[2] * y;\n    this.m[5] += this.m[1] * x + this.m[3] * y;\n    return this;\n  }\n  scale(sx, sy) {\n    this.m[0] *= sx;\n    this.m[1] *= sx;\n    this.m[2] *= sy;\n    this.m[3] *= sy;\n    return this;\n  }\n  rotate(rad) {\n    var c = Math.cos(rad);\n    var s = Math.sin(rad);\n    var m11 = this.m[0] * c + this.m[2] * s;\n    var m12 = this.m[1] * c + this.m[3] * s;\n    var m21 = this.m[0] * -s + this.m[2] * c;\n    var m22 = this.m[1] * -s + this.m[3] * c;\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    return this;\n  }\n  getTranslation() {\n    return {\n      x: this.m[4],\n      y: this.m[5]\n    };\n  }\n  skew(sx, sy) {\n    var m11 = this.m[0] + this.m[2] * sy;\n    var m12 = this.m[1] + this.m[3] * sy;\n    var m21 = this.m[2] + this.m[0] * sx;\n    var m22 = this.m[3] + this.m[1] * sx;\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    return this;\n  }\n  multiply(matrix) {\n    var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n    var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n    var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n    var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n    var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n    var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    this.m[4] = dx;\n    this.m[5] = dy;\n    return this;\n  }\n  invert() {\n    var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n    var m0 = this.m[3] * d;\n    var m1 = -this.m[1] * d;\n    var m2 = -this.m[2] * d;\n    var m3 = this.m[0] * d;\n    var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n    var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n    this.m[0] = m0;\n    this.m[1] = m1;\n    this.m[2] = m2;\n    this.m[3] = m3;\n    this.m[4] = m4;\n    this.m[5] = m5;\n    return this;\n  }\n  getMatrix() {\n    return this.m;\n  }\n  decompose() {\n    var a = this.m[0];\n    var b = this.m[1];\n    var c = this.m[2];\n    var d = this.m[3];\n    var e = this.m[4];\n    var f = this.m[5];\n    var delta = a * d - b * c;\n    let result = {\n      x: e,\n      y: f,\n      rotation: 0,\n      scaleX: 0,\n      scaleY: 0,\n      skewX: 0,\n      skewY: 0\n    };\n    if (a != 0 || b != 0) {\n      var r = Math.sqrt(a * a + b * b);\n      result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\n      result.scaleX = r;\n      result.scaleY = delta / r;\n      result.skewX = (a * c + b * d) / delta;\n      result.skewY = 0;\n    } else if (c != 0 || d != 0) {\n      var s = Math.sqrt(c * c + d * d);\n      result.rotation = Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\n      result.scaleX = delta / s;\n      result.scaleY = s;\n      result.skewX = 0;\n      result.skewY = (a * c + b * d) / delta;\n    } else {}\n    result.rotation = exports.Util._getRotation(result.rotation);\n    return result;\n  }\n}\nexports.Transform = Transform;\nvar OBJECT_ARRAY = '[object Array]',\n  OBJECT_NUMBER = '[object Number]',\n  OBJECT_STRING = '[object String]',\n  OBJECT_BOOLEAN = '[object Boolean]',\n  PI_OVER_DEG180 = Math.PI / 180,\n  DEG180_OVER_PI = 180 / Math.PI,\n  HASH = '#',\n  EMPTY_STRING = '',\n  ZERO = '0',\n  KONVA_WARNING = 'Konva warning: ',\n  KONVA_ERROR = 'Konva error: ',\n  RGB_PAREN = 'rgb(',\n  COLORS = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 132, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 255, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 203],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [119, 128, 144],\n    slategrey: [119, 128, 144],\n    snow: [255, 255, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    transparent: [255, 255, 255, 0],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 5]\n  },\n  RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/,\n  animQueue = [];\nconst req = typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || function (f) {\n  setTimeout(f, 60);\n};\nexports.Util = {\n  _isElement(obj) {\n    return !!(obj && obj.nodeType == 1);\n  },\n  _isFunction(obj) {\n    return !!(obj && obj.constructor && obj.call && obj.apply);\n  },\n  _isPlainObject(obj) {\n    return !!obj && obj.constructor === Object;\n  },\n  _isArray(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n  },\n  _isNumber(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_NUMBER && !isNaN(obj) && isFinite(obj);\n  },\n  _isString(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_STRING;\n  },\n  _isBoolean(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\n  },\n  isObject(val) {\n    return val instanceof Object;\n  },\n  isValidSelector(selector) {\n    if (typeof selector !== 'string') {\n      return false;\n    }\n    var firstChar = selector[0];\n    return firstChar === '#' || firstChar === '.' || firstChar === firstChar.toUpperCase();\n  },\n  _sign(number) {\n    if (number === 0) {\n      return 1;\n    }\n    if (number > 0) {\n      return 1;\n    } else {\n      return -1;\n    }\n  },\n  requestAnimFrame(callback) {\n    animQueue.push(callback);\n    if (animQueue.length === 1) {\n      req(function () {\n        const queue = animQueue;\n        animQueue = [];\n        queue.forEach(function (cb) {\n          cb();\n        });\n      });\n    }\n  },\n  createCanvasElement() {\n    var canvas = document.createElement('canvas');\n    try {\n      canvas.style = canvas.style || {};\n    } catch (e) {}\n    return canvas;\n  },\n  createImageElement() {\n    return document.createElement('img');\n  },\n  _isInDocument(el) {\n    while (el = el.parentNode) {\n      if (el == document) {\n        return true;\n      }\n    }\n    return false;\n  },\n  _urlToImage(url, callback) {\n    var imageObj = exports.Util.createImageElement();\n    imageObj.onload = function () {\n      callback(imageObj);\n    };\n    imageObj.src = url;\n  },\n  _rgbToHex(r, g, b) {\n    return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n  },\n  _hexToRgb(hex) {\n    hex = hex.replace(HASH, EMPTY_STRING);\n    var bigint = parseInt(hex, 16);\n    return {\n      r: bigint >> 16 & 255,\n      g: bigint >> 8 & 255,\n      b: bigint & 255\n    };\n  },\n  getRandomColor() {\n    var randColor = (Math.random() * 0xffffff << 0).toString(16);\n    while (randColor.length < 6) {\n      randColor = ZERO + randColor;\n    }\n    return HASH + randColor;\n  },\n  getRGB(color) {\n    var rgb;\n    if (color in COLORS) {\n      rgb = COLORS[color];\n      return {\n        r: rgb[0],\n        g: rgb[1],\n        b: rgb[2]\n      };\n    } else if (color[0] === HASH) {\n      return this._hexToRgb(color.substring(1));\n    } else if (color.substr(0, 4) === RGB_PAREN) {\n      rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n      return {\n        r: parseInt(rgb[1], 10),\n        g: parseInt(rgb[2], 10),\n        b: parseInt(rgb[3], 10)\n      };\n    } else {\n      return {\n        r: 0,\n        g: 0,\n        b: 0\n      };\n    }\n  },\n  colorToRGBA(str) {\n    str = str || 'black';\n    return exports.Util._namedColorToRBA(str) || exports.Util._hex3ColorToRGBA(str) || exports.Util._hex4ColorToRGBA(str) || exports.Util._hex6ColorToRGBA(str) || exports.Util._hex8ColorToRGBA(str) || exports.Util._rgbColorToRGBA(str) || exports.Util._rgbaColorToRGBA(str) || exports.Util._hslColorToRGBA(str);\n  },\n  _namedColorToRBA(str) {\n    var c = COLORS[str.toLowerCase()];\n    if (!c) {\n      return null;\n    }\n    return {\n      r: c[0],\n      g: c[1],\n      b: c[2],\n      a: 1\n    };\n  },\n  _rgbColorToRGBA(str) {\n    if (str.indexOf('rgb(') === 0) {\n      str = str.match(/rgb\\(([^)]+)\\)/)[1];\n      var parts = str.split(/ *, */).map(Number);\n      return {\n        r: parts[0],\n        g: parts[1],\n        b: parts[2],\n        a: 1\n      };\n    }\n  },\n  _rgbaColorToRGBA(str) {\n    if (str.indexOf('rgba(') === 0) {\n      str = str.match(/rgba\\(([^)]+)\\)/)[1];\n      var parts = str.split(/ *, */).map((n, index) => {\n        if (n.slice(-1) === '%') {\n          return index === 3 ? parseInt(n) / 100 : parseInt(n) / 100 * 255;\n        }\n        return Number(n);\n      });\n      return {\n        r: parts[0],\n        g: parts[1],\n        b: parts[2],\n        a: parts[3]\n      };\n    }\n  },\n  _hex8ColorToRGBA(str) {\n    if (str[0] === '#' && str.length === 9) {\n      return {\n        r: parseInt(str.slice(1, 3), 16),\n        g: parseInt(str.slice(3, 5), 16),\n        b: parseInt(str.slice(5, 7), 16),\n        a: parseInt(str.slice(7, 9), 16) / 0xff\n      };\n    }\n  },\n  _hex6ColorToRGBA(str) {\n    if (str[0] === '#' && str.length === 7) {\n      return {\n        r: parseInt(str.slice(1, 3), 16),\n        g: parseInt(str.slice(3, 5), 16),\n        b: parseInt(str.slice(5, 7), 16),\n        a: 1\n      };\n    }\n  },\n  _hex4ColorToRGBA(str) {\n    if (str[0] === '#' && str.length === 5) {\n      return {\n        r: parseInt(str[1] + str[1], 16),\n        g: parseInt(str[2] + str[2], 16),\n        b: parseInt(str[3] + str[3], 16),\n        a: parseInt(str[4] + str[4], 16) / 0xff\n      };\n    }\n  },\n  _hex3ColorToRGBA(str) {\n    if (str[0] === '#' && str.length === 4) {\n      return {\n        r: parseInt(str[1] + str[1], 16),\n        g: parseInt(str[2] + str[2], 16),\n        b: parseInt(str[3] + str[3], 16),\n        a: 1\n      };\n    }\n  },\n  _hslColorToRGBA(str) {\n    if (/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.test(str)) {\n      const [_, ...hsl] = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(str);\n      const h = Number(hsl[0]) / 360;\n      const s = Number(hsl[1]) / 100;\n      const l = Number(hsl[2]) / 100;\n      let t2;\n      let t3;\n      let val;\n      if (s === 0) {\n        val = l * 255;\n        return {\n          r: Math.round(val),\n          g: Math.round(val),\n          b: Math.round(val),\n          a: 1\n        };\n      }\n      if (l < 0.5) {\n        t2 = l * (1 + s);\n      } else {\n        t2 = l + s - l * s;\n      }\n      const t1 = 2 * l - t2;\n      const rgb = [0, 0, 0];\n      for (let i = 0; i < 3; i++) {\n        t3 = h + 1 / 3 * -(i - 1);\n        if (t3 < 0) {\n          t3++;\n        }\n        if (t3 > 1) {\n          t3--;\n        }\n        if (6 * t3 < 1) {\n          val = t1 + (t2 - t1) * 6 * t3;\n        } else if (2 * t3 < 1) {\n          val = t2;\n        } else if (3 * t3 < 2) {\n          val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n        } else {\n          val = t1;\n        }\n        rgb[i] = val * 255;\n      }\n      return {\n        r: Math.round(rgb[0]),\n        g: Math.round(rgb[1]),\n        b: Math.round(rgb[2]),\n        a: 1\n      };\n    }\n  },\n  haveIntersection(r1, r2) {\n    return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n  },\n  cloneObject(obj) {\n    var retObj = {};\n    for (var key in obj) {\n      if (this._isPlainObject(obj[key])) {\n        retObj[key] = this.cloneObject(obj[key]);\n      } else if (this._isArray(obj[key])) {\n        retObj[key] = this.cloneArray(obj[key]);\n      } else {\n        retObj[key] = obj[key];\n      }\n    }\n    return retObj;\n  },\n  cloneArray(arr) {\n    return arr.slice(0);\n  },\n  degToRad(deg) {\n    return deg * PI_OVER_DEG180;\n  },\n  radToDeg(rad) {\n    return rad * DEG180_OVER_PI;\n  },\n  _degToRad(deg) {\n    exports.Util.warn('Util._degToRad is removed. Please use public Util.degToRad instead.');\n    return exports.Util.degToRad(deg);\n  },\n  _radToDeg(rad) {\n    exports.Util.warn('Util._radToDeg is removed. Please use public Util.radToDeg instead.');\n    return exports.Util.radToDeg(rad);\n  },\n  _getRotation(radians) {\n    return Global_1.Konva.angleDeg ? exports.Util.radToDeg(radians) : radians;\n  },\n  _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n  throw(str) {\n    throw new Error(KONVA_ERROR + str);\n  },\n  error(str) {\n    console.error(KONVA_ERROR + str);\n  },\n  warn(str) {\n    if (!Global_1.Konva.showWarnings) {\n      return;\n    }\n    console.warn(KONVA_WARNING + str);\n  },\n  each(obj, func) {\n    for (var key in obj) {\n      func(key, obj[key]);\n    }\n  },\n  _inRange(val, left, right) {\n    return left <= val && val < right;\n  },\n  _getProjectionToSegment(x1, y1, x2, y2, x3, y3) {\n    var x, y, dist;\n    var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    if (pd2 == 0) {\n      x = x1;\n      y = y1;\n      dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n    } else {\n      var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n      if (u < 0) {\n        x = x1;\n        y = y1;\n        dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n      } else if (u > 1.0) {\n        x = x2;\n        y = y2;\n        dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n      } else {\n        x = x1 + u * (x2 - x1);\n        y = y1 + u * (y2 - y1);\n        dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n      }\n    }\n    return [x, y, dist];\n  },\n  _getProjectionToLine(pt, line, isClosed) {\n    var pc = exports.Util.cloneObject(pt);\n    var dist = Number.MAX_VALUE;\n    line.forEach(function (p1, i) {\n      if (!isClosed && i === line.length - 1) {\n        return;\n      }\n      var p2 = line[(i + 1) % line.length];\n      var proj = exports.Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\n      var px = proj[0],\n        py = proj[1],\n        pdist = proj[2];\n      if (pdist < dist) {\n        pc.x = px;\n        pc.y = py;\n        dist = pdist;\n      }\n    });\n    return pc;\n  },\n  _prepareArrayForTween(startArray, endArray, isClosed) {\n    var n,\n      start = [],\n      end = [];\n    if (startArray.length > endArray.length) {\n      var temp = endArray;\n      endArray = startArray;\n      startArray = temp;\n    }\n    for (n = 0; n < startArray.length; n += 2) {\n      start.push({\n        x: startArray[n],\n        y: startArray[n + 1]\n      });\n    }\n    for (n = 0; n < endArray.length; n += 2) {\n      end.push({\n        x: endArray[n],\n        y: endArray[n + 1]\n      });\n    }\n    var newStart = [];\n    end.forEach(function (point) {\n      var pr = exports.Util._getProjectionToLine(point, start, isClosed);\n      newStart.push(pr.x);\n      newStart.push(pr.y);\n    });\n    return newStart;\n  },\n  _prepareToStringify(obj) {\n    var desc;\n    obj.visitedByCircularReferenceRemoval = true;\n    for (var key in obj) {\n      if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')) {\n        continue;\n      }\n      desc = Object.getOwnPropertyDescriptor(obj, key);\n      if (obj[key].visitedByCircularReferenceRemoval || exports.Util._isElement(obj[key])) {\n        if (desc.configurable) {\n          delete obj[key];\n        } else {\n          return null;\n        }\n      } else if (exports.Util._prepareToStringify(obj[key]) === null) {\n        if (desc.configurable) {\n          delete obj[key];\n        } else {\n          return null;\n        }\n      }\n    }\n    delete obj.visitedByCircularReferenceRemoval;\n    return obj;\n  },\n  _assign(target, source) {\n    for (var key in source) {\n      target[key] = source[key];\n    }\n    return target;\n  },\n  _getFirstPointerId(evt) {\n    if (!evt.touches) {\n      return evt.pointerId || 999;\n    } else {\n      return evt.changedTouches[0].identifier;\n    }\n  },\n  releaseCanvas() {\n    if (!Global_1.Konva.releaseCanvasOnDestroy) return;\n    for (var _len = arguments.length, canvases = new Array(_len), _key = 0; _key < _len; _key++) {\n      canvases[_key] = arguments[_key];\n    }\n    canvases.forEach(c => {\n      c.width = 0;\n      c.height = 0;\n    });\n  },\n  drawRoundedRectPath(context, width, height, cornerRadius) {\n    let topLeft = 0;\n    let topRight = 0;\n    let bottomLeft = 0;\n    let bottomRight = 0;\n    if (typeof cornerRadius === 'number') {\n      topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n    } else {\n      topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n      topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n      bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n      bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n    }\n    context.moveTo(topLeft, 0);\n    context.lineTo(width - topRight, 0);\n    context.arc(width - topRight, topRight, topRight, Math.PI * 3 / 2, 0, false);\n    context.lineTo(width, height - bottomRight);\n    context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n    context.lineTo(bottomLeft, height);\n    context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n    context.lineTo(0, topLeft);\n    context.arc(topLeft, topLeft, topLeft, Math.PI, Math.PI * 3 / 2, false);\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","Util","Transform","Global_1","require","constructor","m","dirty","slice","reset","copy","copyInto","tr","point","x","y","translate","scale","sx","sy","rotate","rad","c","Math","cos","s","sin","m11","m12","m21","m22","getTranslation","skew","multiply","matrix","dx","dy","invert","d","m0","m1","m2","m3","m4","m5","getMatrix","decompose","a","b","e","f","delta","result","rotation","scaleX","scaleY","skewX","skewY","r","sqrt","acos","PI","_getRotation","OBJECT_ARRAY","OBJECT_NUMBER","OBJECT_STRING","OBJECT_BOOLEAN","PI_OVER_DEG180","DEG180_OVER_PI","HASH","EMPTY_STRING","ZERO","KONVA_WARNING","KONVA_ERROR","RGB_PAREN","COLORS","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","transparent","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","RGB_REGEX","animQueue","req","requestAnimationFrame","setTimeout","_isElement","obj","nodeType","_isFunction","call","apply","_isPlainObject","_isArray","prototype","toString","_isNumber","isNaN","isFinite","_isString","_isBoolean","isObject","val","isValidSelector","selector","firstChar","toUpperCase","_sign","number","requestAnimFrame","callback","push","length","queue","forEach","cb","createCanvasElement","canvas","document","createElement","style","createImageElement","_isInDocument","el","parentNode","_urlToImage","url","imageObj","onload","src","_rgbToHex","g","_hexToRgb","hex","replace","bigint","parseInt","getRandomColor","randColor","random","getRGB","color","rgb","substring","substr","exec","colorToRGBA","str","_namedColorToRBA","_hex3ColorToRGBA","_hex4ColorToRGBA","_hex6ColorToRGBA","_hex8ColorToRGBA","_rgbColorToRGBA","_rgbaColorToRGBA","_hslColorToRGBA","toLowerCase","indexOf","match","parts","split","map","Number","n","index","test","_","hsl","h","l","t2","t3","round","t1","i","haveIntersection","r1","r2","width","height","cloneObject","retObj","key","cloneArray","arr","degToRad","deg","radToDeg","_degToRad","warn","_radToDeg","radians","Konva","angleDeg","_capitalize","charAt","throw","Error","error","console","showWarnings","each","func","_inRange","left","right","_getProjectionToSegment","x1","y1","x2","y2","x3","y3","dist","pd2","u","_getProjectionToLine","pt","line","isClosed","pc","MAX_VALUE","p1","p2","proj","px","py","pdist","_prepareArrayForTween","startArray","endArray","start","end","temp","newStart","pr","_prepareToStringify","desc","visitedByCircularReferenceRemoval","hasOwnProperty","getOwnPropertyDescriptor","configurable","_assign","target","source","_getFirstPointerId","evt","touches","pointerId","changedTouches","identifier","releaseCanvas","releaseCanvasOnDestroy","canvases","drawRoundedRectPath","context","cornerRadius","topLeft","topRight","bottomLeft","bottomRight","min","moveTo","lineTo","arc"],"sources":["/Users/nicolasgrenier/Documents/Code/fighting_RPG/node_modules/konva/lib/Util.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Util = exports.Transform = void 0;\nconst Global_1 = require(\"./Global\");\nclass Transform {\n    constructor(m = [1, 0, 0, 1, 0, 0]) {\n        this.dirty = false;\n        this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\n    }\n    reset() {\n        this.m[0] = 1;\n        this.m[1] = 0;\n        this.m[2] = 0;\n        this.m[3] = 1;\n        this.m[4] = 0;\n        this.m[5] = 0;\n    }\n    copy() {\n        return new Transform(this.m);\n    }\n    copyInto(tr) {\n        tr.m[0] = this.m[0];\n        tr.m[1] = this.m[1];\n        tr.m[2] = this.m[2];\n        tr.m[3] = this.m[3];\n        tr.m[4] = this.m[4];\n        tr.m[5] = this.m[5];\n    }\n    point(point) {\n        var m = this.m;\n        return {\n            x: m[0] * point.x + m[2] * point.y + m[4],\n            y: m[1] * point.x + m[3] * point.y + m[5],\n        };\n    }\n    translate(x, y) {\n        this.m[4] += this.m[0] * x + this.m[2] * y;\n        this.m[5] += this.m[1] * x + this.m[3] * y;\n        return this;\n    }\n    scale(sx, sy) {\n        this.m[0] *= sx;\n        this.m[1] *= sx;\n        this.m[2] *= sy;\n        this.m[3] *= sy;\n        return this;\n    }\n    rotate(rad) {\n        var c = Math.cos(rad);\n        var s = Math.sin(rad);\n        var m11 = this.m[0] * c + this.m[2] * s;\n        var m12 = this.m[1] * c + this.m[3] * s;\n        var m21 = this.m[0] * -s + this.m[2] * c;\n        var m22 = this.m[1] * -s + this.m[3] * c;\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        return this;\n    }\n    getTranslation() {\n        return {\n            x: this.m[4],\n            y: this.m[5],\n        };\n    }\n    skew(sx, sy) {\n        var m11 = this.m[0] + this.m[2] * sy;\n        var m12 = this.m[1] + this.m[3] * sy;\n        var m21 = this.m[2] + this.m[0] * sx;\n        var m22 = this.m[3] + this.m[1] * sx;\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        return this;\n    }\n    multiply(matrix) {\n        var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n        var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n        var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n        var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n        var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n        var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        this.m[4] = dx;\n        this.m[5] = dy;\n        return this;\n    }\n    invert() {\n        var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n        var m0 = this.m[3] * d;\n        var m1 = -this.m[1] * d;\n        var m2 = -this.m[2] * d;\n        var m3 = this.m[0] * d;\n        var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n        var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n        this.m[0] = m0;\n        this.m[1] = m1;\n        this.m[2] = m2;\n        this.m[3] = m3;\n        this.m[4] = m4;\n        this.m[5] = m5;\n        return this;\n    }\n    getMatrix() {\n        return this.m;\n    }\n    decompose() {\n        var a = this.m[0];\n        var b = this.m[1];\n        var c = this.m[2];\n        var d = this.m[3];\n        var e = this.m[4];\n        var f = this.m[5];\n        var delta = a * d - b * c;\n        let result = {\n            x: e,\n            y: f,\n            rotation: 0,\n            scaleX: 0,\n            scaleY: 0,\n            skewX: 0,\n            skewY: 0,\n        };\n        if (a != 0 || b != 0) {\n            var r = Math.sqrt(a * a + b * b);\n            result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\n            result.scaleX = r;\n            result.scaleY = delta / r;\n            result.skewX = (a * c + b * d) / delta;\n            result.skewY = 0;\n        }\n        else if (c != 0 || d != 0) {\n            var s = Math.sqrt(c * c + d * d);\n            result.rotation =\n                Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\n            result.scaleX = delta / s;\n            result.scaleY = s;\n            result.skewX = 0;\n            result.skewY = (a * c + b * d) / delta;\n        }\n        else {\n        }\n        result.rotation = exports.Util._getRotation(result.rotation);\n        return result;\n    }\n}\nexports.Transform = Transform;\nvar OBJECT_ARRAY = '[object Array]', OBJECT_NUMBER = '[object Number]', OBJECT_STRING = '[object String]', OBJECT_BOOLEAN = '[object Boolean]', PI_OVER_DEG180 = Math.PI / 180, DEG180_OVER_PI = 180 / Math.PI, HASH = '#', EMPTY_STRING = '', ZERO = '0', KONVA_WARNING = 'Konva warning: ', KONVA_ERROR = 'Konva error: ', RGB_PAREN = 'rgb(', COLORS = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 132, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 255, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 203],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [119, 128, 144],\n    slategrey: [119, 128, 144],\n    snow: [255, 255, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    transparent: [255, 255, 255, 0],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 5],\n}, RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/, animQueue = [];\nconst req = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame) ||\n    function (f) {\n        setTimeout(f, 60);\n    };\nexports.Util = {\n    _isElement(obj) {\n        return !!(obj && obj.nodeType == 1);\n    },\n    _isFunction(obj) {\n        return !!(obj && obj.constructor && obj.call && obj.apply);\n    },\n    _isPlainObject(obj) {\n        return !!obj && obj.constructor === Object;\n    },\n    _isArray(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n    },\n    _isNumber(obj) {\n        return (Object.prototype.toString.call(obj) === OBJECT_NUMBER &&\n            !isNaN(obj) &&\n            isFinite(obj));\n    },\n    _isString(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_STRING;\n    },\n    _isBoolean(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\n    },\n    isObject(val) {\n        return val instanceof Object;\n    },\n    isValidSelector(selector) {\n        if (typeof selector !== 'string') {\n            return false;\n        }\n        var firstChar = selector[0];\n        return (firstChar === '#' ||\n            firstChar === '.' ||\n            firstChar === firstChar.toUpperCase());\n    },\n    _sign(number) {\n        if (number === 0) {\n            return 1;\n        }\n        if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    },\n    requestAnimFrame(callback) {\n        animQueue.push(callback);\n        if (animQueue.length === 1) {\n            req(function () {\n                const queue = animQueue;\n                animQueue = [];\n                queue.forEach(function (cb) {\n                    cb();\n                });\n            });\n        }\n    },\n    createCanvasElement() {\n        var canvas = document.createElement('canvas');\n        try {\n            canvas.style = canvas.style || {};\n        }\n        catch (e) { }\n        return canvas;\n    },\n    createImageElement() {\n        return document.createElement('img');\n    },\n    _isInDocument(el) {\n        while ((el = el.parentNode)) {\n            if (el == document) {\n                return true;\n            }\n        }\n        return false;\n    },\n    _urlToImage(url, callback) {\n        var imageObj = exports.Util.createImageElement();\n        imageObj.onload = function () {\n            callback(imageObj);\n        };\n        imageObj.src = url;\n    },\n    _rgbToHex(r, g, b) {\n        return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n    },\n    _hexToRgb(hex) {\n        hex = hex.replace(HASH, EMPTY_STRING);\n        var bigint = parseInt(hex, 16);\n        return {\n            r: (bigint >> 16) & 255,\n            g: (bigint >> 8) & 255,\n            b: bigint & 255,\n        };\n    },\n    getRandomColor() {\n        var randColor = ((Math.random() * 0xffffff) << 0).toString(16);\n        while (randColor.length < 6) {\n            randColor = ZERO + randColor;\n        }\n        return HASH + randColor;\n    },\n    getRGB(color) {\n        var rgb;\n        if (color in COLORS) {\n            rgb = COLORS[color];\n            return {\n                r: rgb[0],\n                g: rgb[1],\n                b: rgb[2],\n            };\n        }\n        else if (color[0] === HASH) {\n            return this._hexToRgb(color.substring(1));\n        }\n        else if (color.substr(0, 4) === RGB_PAREN) {\n            rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n            return {\n                r: parseInt(rgb[1], 10),\n                g: parseInt(rgb[2], 10),\n                b: parseInt(rgb[3], 10),\n            };\n        }\n        else {\n            return {\n                r: 0,\n                g: 0,\n                b: 0,\n            };\n        }\n    },\n    colorToRGBA(str) {\n        str = str || 'black';\n        return (exports.Util._namedColorToRBA(str) ||\n            exports.Util._hex3ColorToRGBA(str) ||\n            exports.Util._hex4ColorToRGBA(str) ||\n            exports.Util._hex6ColorToRGBA(str) ||\n            exports.Util._hex8ColorToRGBA(str) ||\n            exports.Util._rgbColorToRGBA(str) ||\n            exports.Util._rgbaColorToRGBA(str) ||\n            exports.Util._hslColorToRGBA(str));\n    },\n    _namedColorToRBA(str) {\n        var c = COLORS[str.toLowerCase()];\n        if (!c) {\n            return null;\n        }\n        return {\n            r: c[0],\n            g: c[1],\n            b: c[2],\n            a: 1,\n        };\n    },\n    _rgbColorToRGBA(str) {\n        if (str.indexOf('rgb(') === 0) {\n            str = str.match(/rgb\\(([^)]+)\\)/)[1];\n            var parts = str.split(/ *, */).map(Number);\n            return {\n                r: parts[0],\n                g: parts[1],\n                b: parts[2],\n                a: 1,\n            };\n        }\n    },\n    _rgbaColorToRGBA(str) {\n        if (str.indexOf('rgba(') === 0) {\n            str = str.match(/rgba\\(([^)]+)\\)/)[1];\n            var parts = str.split(/ *, */).map((n, index) => {\n                if (n.slice(-1) === '%') {\n                    return index === 3 ? parseInt(n) / 100 : (parseInt(n) / 100) * 255;\n                }\n                return Number(n);\n            });\n            return {\n                r: parts[0],\n                g: parts[1],\n                b: parts[2],\n                a: parts[3],\n            };\n        }\n    },\n    _hex8ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 9) {\n            return {\n                r: parseInt(str.slice(1, 3), 16),\n                g: parseInt(str.slice(3, 5), 16),\n                b: parseInt(str.slice(5, 7), 16),\n                a: parseInt(str.slice(7, 9), 16) / 0xff,\n            };\n        }\n    },\n    _hex6ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 7) {\n            return {\n                r: parseInt(str.slice(1, 3), 16),\n                g: parseInt(str.slice(3, 5), 16),\n                b: parseInt(str.slice(5, 7), 16),\n                a: 1,\n            };\n        }\n    },\n    _hex4ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 5) {\n            return {\n                r: parseInt(str[1] + str[1], 16),\n                g: parseInt(str[2] + str[2], 16),\n                b: parseInt(str[3] + str[3], 16),\n                a: parseInt(str[4] + str[4], 16) / 0xff,\n            };\n        }\n    },\n    _hex3ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 4) {\n            return {\n                r: parseInt(str[1] + str[1], 16),\n                g: parseInt(str[2] + str[2], 16),\n                b: parseInt(str[3] + str[3], 16),\n                a: 1,\n            };\n        }\n    },\n    _hslColorToRGBA(str) {\n        if (/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.test(str)) {\n            const [_, ...hsl] = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(str);\n            const h = Number(hsl[0]) / 360;\n            const s = Number(hsl[1]) / 100;\n            const l = Number(hsl[2]) / 100;\n            let t2;\n            let t3;\n            let val;\n            if (s === 0) {\n                val = l * 255;\n                return {\n                    r: Math.round(val),\n                    g: Math.round(val),\n                    b: Math.round(val),\n                    a: 1,\n                };\n            }\n            if (l < 0.5) {\n                t2 = l * (1 + s);\n            }\n            else {\n                t2 = l + s - l * s;\n            }\n            const t1 = 2 * l - t2;\n            const rgb = [0, 0, 0];\n            for (let i = 0; i < 3; i++) {\n                t3 = h + (1 / 3) * -(i - 1);\n                if (t3 < 0) {\n                    t3++;\n                }\n                if (t3 > 1) {\n                    t3--;\n                }\n                if (6 * t3 < 1) {\n                    val = t1 + (t2 - t1) * 6 * t3;\n                }\n                else if (2 * t3 < 1) {\n                    val = t2;\n                }\n                else if (3 * t3 < 2) {\n                    val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n                }\n                else {\n                    val = t1;\n                }\n                rgb[i] = val * 255;\n            }\n            return {\n                r: Math.round(rgb[0]),\n                g: Math.round(rgb[1]),\n                b: Math.round(rgb[2]),\n                a: 1,\n            };\n        }\n    },\n    haveIntersection(r1, r2) {\n        return !(r2.x > r1.x + r1.width ||\n            r2.x + r2.width < r1.x ||\n            r2.y > r1.y + r1.height ||\n            r2.y + r2.height < r1.y);\n    },\n    cloneObject(obj) {\n        var retObj = {};\n        for (var key in obj) {\n            if (this._isPlainObject(obj[key])) {\n                retObj[key] = this.cloneObject(obj[key]);\n            }\n            else if (this._isArray(obj[key])) {\n                retObj[key] = this.cloneArray(obj[key]);\n            }\n            else {\n                retObj[key] = obj[key];\n            }\n        }\n        return retObj;\n    },\n    cloneArray(arr) {\n        return arr.slice(0);\n    },\n    degToRad(deg) {\n        return deg * PI_OVER_DEG180;\n    },\n    radToDeg(rad) {\n        return rad * DEG180_OVER_PI;\n    },\n    _degToRad(deg) {\n        exports.Util.warn('Util._degToRad is removed. Please use public Util.degToRad instead.');\n        return exports.Util.degToRad(deg);\n    },\n    _radToDeg(rad) {\n        exports.Util.warn('Util._radToDeg is removed. Please use public Util.radToDeg instead.');\n        return exports.Util.radToDeg(rad);\n    },\n    _getRotation(radians) {\n        return Global_1.Konva.angleDeg ? exports.Util.radToDeg(radians) : radians;\n    },\n    _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    throw(str) {\n        throw new Error(KONVA_ERROR + str);\n    },\n    error(str) {\n        console.error(KONVA_ERROR + str);\n    },\n    warn(str) {\n        if (!Global_1.Konva.showWarnings) {\n            return;\n        }\n        console.warn(KONVA_WARNING + str);\n    },\n    each(obj, func) {\n        for (var key in obj) {\n            func(key, obj[key]);\n        }\n    },\n    _inRange(val, left, right) {\n        return left <= val && val < right;\n    },\n    _getProjectionToSegment(x1, y1, x2, y2, x3, y3) {\n        var x, y, dist;\n        var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n        if (pd2 == 0) {\n            x = x1;\n            y = y1;\n            dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n        }\n        else {\n            var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n            if (u < 0) {\n                x = x1;\n                y = y1;\n                dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n            }\n            else if (u > 1.0) {\n                x = x2;\n                y = y2;\n                dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n            }\n            else {\n                x = x1 + u * (x2 - x1);\n                y = y1 + u * (y2 - y1);\n                dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n            }\n        }\n        return [x, y, dist];\n    },\n    _getProjectionToLine(pt, line, isClosed) {\n        var pc = exports.Util.cloneObject(pt);\n        var dist = Number.MAX_VALUE;\n        line.forEach(function (p1, i) {\n            if (!isClosed && i === line.length - 1) {\n                return;\n            }\n            var p2 = line[(i + 1) % line.length];\n            var proj = exports.Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\n            var px = proj[0], py = proj[1], pdist = proj[2];\n            if (pdist < dist) {\n                pc.x = px;\n                pc.y = py;\n                dist = pdist;\n            }\n        });\n        return pc;\n    },\n    _prepareArrayForTween(startArray, endArray, isClosed) {\n        var n, start = [], end = [];\n        if (startArray.length > endArray.length) {\n            var temp = endArray;\n            endArray = startArray;\n            startArray = temp;\n        }\n        for (n = 0; n < startArray.length; n += 2) {\n            start.push({\n                x: startArray[n],\n                y: startArray[n + 1],\n            });\n        }\n        for (n = 0; n < endArray.length; n += 2) {\n            end.push({\n                x: endArray[n],\n                y: endArray[n + 1],\n            });\n        }\n        var newStart = [];\n        end.forEach(function (point) {\n            var pr = exports.Util._getProjectionToLine(point, start, isClosed);\n            newStart.push(pr.x);\n            newStart.push(pr.y);\n        });\n        return newStart;\n    },\n    _prepareToStringify(obj) {\n        var desc;\n        obj.visitedByCircularReferenceRemoval = true;\n        for (var key in obj) {\n            if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')) {\n                continue;\n            }\n            desc = Object.getOwnPropertyDescriptor(obj, key);\n            if (obj[key].visitedByCircularReferenceRemoval ||\n                exports.Util._isElement(obj[key])) {\n                if (desc.configurable) {\n                    delete obj[key];\n                }\n                else {\n                    return null;\n                }\n            }\n            else if (exports.Util._prepareToStringify(obj[key]) === null) {\n                if (desc.configurable) {\n                    delete obj[key];\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        delete obj.visitedByCircularReferenceRemoval;\n        return obj;\n    },\n    _assign(target, source) {\n        for (var key in source) {\n            target[key] = source[key];\n        }\n        return target;\n    },\n    _getFirstPointerId(evt) {\n        if (!evt.touches) {\n            return evt.pointerId || 999;\n        }\n        else {\n            return evt.changedTouches[0].identifier;\n        }\n    },\n    releaseCanvas(...canvases) {\n        if (!Global_1.Konva.releaseCanvasOnDestroy)\n            return;\n        canvases.forEach(c => {\n            c.width = 0;\n            c.height = 0;\n        });\n    },\n    drawRoundedRectPath(context, width, height, cornerRadius) {\n        let topLeft = 0;\n        let topRight = 0;\n        let bottomLeft = 0;\n        let bottomRight = 0;\n        if (typeof cornerRadius === 'number') {\n            topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n        }\n        else {\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n        }\n        context.moveTo(topLeft, 0);\n        context.lineTo(width - topRight, 0);\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n        context.lineTo(width, height - bottomRight);\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n        context.lineTo(bottomLeft, height);\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n        context.lineTo(0, topLeft);\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}