{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene/FightScene.jsx\",\n  _s = $RefreshSig$();\nimport mc from \"./fight-scene.module.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\n//components//\nimport LifeBar from \"../fight-scene-elements/life-bar/LifeBar\";\nimport MdjScene from \"../fight-scene-elements/mdj-scene/MdjScene\";\nimport Fight from \"../fight-scene-elements/fight/Fight\";\nimport Tv from \"../fight-scene-elements/tv/Tv\";\n//utils//\nimport { getRandom } from \"../../utils/getRandom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FightScene = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    windowWidth,\n    player1,\n    player2,\n    logs,\n    playersClickOnstartGame,\n    startTv,\n    round\n  } = useSelector(store => {\n    return {\n      player1: store.playersReducer.player1,\n      player2: store.playersReducer.player2,\n      windowWidth: store.windowSizeReducer.windowWidth,\n      logs: store.logsReducer.logs,\n      playersClickOnstartGame: store.fightReducer.playersClickOnstartGame,\n      startTv: store.fightReducer.startTv,\n      round: store.fightReducer.round\n    };\n  });\n  useEffect(() => {\n    dispatch({\n      type: \"test_debug\"\n    });\n  }, []);\n  const startGame = () => {\n    dispatch({\n      type: \"START_TV\"\n    });\n    setTimeout(() => {\n      dispatch({\n        type: \"LAUNCH_FIGHT\"\n      });\n      //get 1 or 2 and determine who play first and all the game long.\n      dispatch({\n        type: \"ROUND\",\n        payload: {\n          round: getRandom(1, 2)\n        }\n      });\n    }, 500);\n  };\n  console.log(round);\n\n  //logs menu things//\n\n  useEffect(() => {\n    dispatch({\n      type: \"UPDATE_LOGS\",\n      payload: {\n        newlog: \"salix\"\n      }\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   dispatch({\n  //     type: \"RESET_LOGS\",\n  //     payload: { newlog: <li>test</li> },\n  //   });\n  // }, []);\n\n  //Fight end//\n  // const onEndFightButtonClick = () => {\n  //   dispatch({ type: `ANIMATION_FIGHT_START_CANCEL` });\n  //   setTimeout(() => {\n  //     dispatch({ type: `FIGHT_END` });\n  //   }, 300);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: mc.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mc.fightingZone_zone,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: mc.top_menu,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: mc.life_bars_player1,\n          children: /*#__PURE__*/_jsxDEV(LifeBar, {\n            windowWidth: windowWidth,\n            playerNumber: 1 //determine row-reverse for player1\n            ,\n            player: player1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: mc.top_tv,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startGame,\n            children: \"clique sur l'\\xE9cran pour commencer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: startTv ? `${mc.clean_tv} ${mc.clean_tv_on}` : mc.clean_tv\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), playersClickOnstartGame && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: mc.myTV,\n            children: /*#__PURE__*/_jsxDEV(Tv, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: mc.life_bars_player2,\n          children: /*#__PURE__*/_jsxDEV(LifeBar, {\n            windowWidth: windowWidth,\n            playerNumber: 2 //determine row-reverse for player2\n            ,\n            player: player2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: mc.mdj_menu,\n        children: /*#__PURE__*/_jsxDEV(MdjScene, {\n          player1: player1,\n          player2: player2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: mc.fighting_menu,\n        children: /*#__PURE__*/_jsxDEV(Fight, {\n          windowWidth: windowWidth,\n          player1: player1,\n          player2: player2,\n          logs: logs,\n          onAttackClick: onAttackClick,\n          onDefenseClick: onDefenseClick,\n          onUltimClick: onUltimClick,\n          onPotionClick: onPotionClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(FightScene, \"lWnxSrawKTiAcHAWXK89UQX8TgI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = FightScene;\nexport default FightScene;\nvar _c;\n$RefreshReg$(_c, \"FightScene\");","map":{"version":3,"names":["mc","useDispatch","useSelector","useEffect","LifeBar","MdjScene","Fight","Tv","getRandom","FightScene","dispatch","windowWidth","player1","player2","logs","playersClickOnstartGame","startTv","round","store","playersReducer","windowSizeReducer","logsReducer","fightReducer","type","startGame","setTimeout","payload","console","log","newlog","container","fightingZone_zone","top_menu","life_bars_player1","top_tv","clean_tv","clean_tv_on","myTV","life_bars_player2","mdj_menu","fighting_menu","onAttackClick","onDefenseClick","onUltimClick","onPotionClick"],"sources":["/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene/FightScene.jsx"],"sourcesContent":["import mc from \"./fight-scene.module.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\n//components//\nimport LifeBar from \"../fight-scene-elements/life-bar/LifeBar\";\nimport MdjScene from \"../fight-scene-elements/mdj-scene/MdjScene\";\nimport Fight from \"../fight-scene-elements/fight/Fight\";\nimport Tv from \"../fight-scene-elements/tv/Tv\";\n//utils//\nimport { getRandom } from \"../../utils/getRandom\";\n\nconst FightScene = () => {\n  const dispatch = useDispatch();\n\n  const {\n    windowWidth,\n    player1,\n    player2,\n    logs,\n    playersClickOnstartGame,\n    startTv,\n    round,\n  } = useSelector((store) => {\n    return {\n      player1: store.playersReducer.player1,\n      player2: store.playersReducer.player2,\n      windowWidth: store.windowSizeReducer.windowWidth,\n      logs: store.logsReducer.logs,\n      playersClickOnstartGame: store.fightReducer.playersClickOnstartGame,\n      startTv: store.fightReducer.startTv,\n      round: store.fightReducer.round,\n    };\n  });\n\n  useEffect(() => {\n    dispatch({ type: \"test_debug\" });\n  }, []);\n\n  const startGame = () => {\n    dispatch({ type: \"START_TV\" });\n    setTimeout(() => {\n      dispatch({ type: \"LAUNCH_FIGHT\" });\n      //get 1 or 2 and determine who play first and all the game long.\n      dispatch({\n        type: \"ROUND\",\n        payload: { round: getRandom(1, 2) },\n      });\n    }, 500);\n  };\n\n  console.log(round);\n\n  //logs menu things//\n\n  useEffect(() => {\n    dispatch({\n      type: \"UPDATE_LOGS\",\n      payload: { newlog: \"salix\" },\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   dispatch({\n  //     type: \"RESET_LOGS\",\n  //     payload: { newlog: <li>test</li> },\n  //   });\n  // }, []);\n\n  //Fight end//\n  // const onEndFightButtonClick = () => {\n  //   dispatch({ type: `ANIMATION_FIGHT_START_CANCEL` });\n  //   setTimeout(() => {\n  //     dispatch({ type: `FIGHT_END` });\n  //   }, 300);\n  // };\n\n  return (\n    <div className={mc.container}>\n      <div className={mc.fightingZone_zone}>\n        <div className={mc.top_menu}>\n          <div className={mc.life_bars_player1}>\n            <LifeBar\n              windowWidth={windowWidth}\n              playerNumber={1} //determine row-reverse for player1\n              player={player1}\n            />\n          </div>\n          <div className={mc.top_tv}>\n            <button onClick={startGame}>\n              clique sur l'Ã©cran pour commencer\n            </button>\n            <div\n              className={\n                startTv ? `${mc.clean_tv} ${mc.clean_tv_on}` : mc.clean_tv\n              }\n            ></div>\n            {playersClickOnstartGame && (\n              <div className={mc.myTV}>\n                <Tv />\n              </div>\n            )}\n          </div>\n\n          <div className={mc.life_bars_player2}>\n            <LifeBar\n              windowWidth={windowWidth}\n              playerNumber={2} //determine row-reverse for player2\n              player={player2}\n            />\n          </div>\n        </div>\n        <div className={mc.mdj_menu}>\n          <MdjScene player1={player1} player2={player2} />\n        </div>\n        <div className={mc.fighting_menu}>\n          <Fight\n            windowWidth={windowWidth}\n            player1={player1}\n            player2={player2}\n            logs={logs}\n            onAttackClick={onAttackClick}\n            onDefenseClick={onDefenseClick}\n            onUltimClick={onUltimClick}\n            onPotionClick={onPotionClick}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FightScene;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}