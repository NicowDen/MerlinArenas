{"ast":null,"code":"const INITIAL_STATE = {\n  tutoriel: false,\n  playersClickOnstartGame: false,\n  startTv: false,\n  round: 0,\n  canPlay: true,\n  dice: {\n    isOn: false,\n    value: null\n  },\n  logs: [],\n  attacker: \"\",\n  defender: \"\",\n  attack: \"\",\n  fightEnd: false\n};\nconst fightReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"OPEN_TUTORIEL\":\n      {\n        return {\n          ...state,\n          tutoriel: true\n        };\n      }\n    case \"CLOSE_TUTORIEL\":\n      {\n        return {\n          ...state,\n          tutoriel: false\n        };\n      }\n    case \"LAUNCH_TUTORIEL\":\n      {\n        return {\n          ...state,\n          tutoriel: true\n        };\n      }\n    case \"LAUNCH_FIGHT\":\n      {\n        return {\n          ...state,\n          playersClickOnstartGame: true\n        };\n      }\n    case \"START_TV\":\n      {\n        return {\n          ...state,\n          startTv: true\n        };\n      }\n    case \"UPDATE_ROUND\":\n      {\n        return {\n          ...state,\n          round: action.payload.round\n        };\n      }\n    case \"CAN_PLAY\":\n      {\n        return {\n          ...state,\n          canPlay: true\n        };\n      }\n    case \"CANT_PLAY\":\n      {\n        return {\n          ...state,\n          canPlay: false\n        };\n      }\n    case \"UPDATE_DICE\":\n      {\n        return {\n          ...state,\n          dice: {\n            ...state.dice,\n            value: action.payload.value\n          }\n        };\n      }\n    case \"DICE_SHOW_HIDE\":\n      {\n        return {\n          ...state,\n          dice: {\n            ...state.dice,\n            isOn: !state.isOn\n          }\n        };\n      }\n    case \"UPDATE_LOGS\":\n      {\n        return {\n          ...state,\n          logs: [...state.logs, action.payload.newlog]\n        };\n      }\n    case \"RESET_LOGS\":\n      {\n        return {\n          ...state,\n          logs: []\n        };\n      }\n    case \"UPDATE_ATTACKER\":\n      {\n        return {\n          ...state,\n          attacker: action.payload.attacker\n        };\n      }\n    case \"UPDATE_DEFENDER\":\n      {\n        return {\n          ...state,\n          defender: action.payload.defender\n        };\n      }\n    case \"ATTACK_HIT\":\n      {\n        return {\n          ...state,\n          attackHit: \"hit\"\n        };\n      }\n    case \"ATTACK_MISS\":\n      {\n        return {\n          ...state,\n          attackHit: \"fail\"\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport default fightReducer;","map":{"version":3,"names":["INITIAL_STATE","tutoriel","playersClickOnstartGame","startTv","round","canPlay","dice","isOn","value","logs","attacker","defender","attack","fightEnd","fightReducer","state","action","type","payload","newlog","attackHit"],"sources":["/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/reducers/fight.js"],"sourcesContent":["const INITIAL_STATE = {\n  tutoriel: false,\n  playersClickOnstartGame: false,\n  startTv: false,\n  round: 0,\n  canPlay: true,\n  dice: {\n    isOn: false,\n    value: null,\n  },\n  logs: [],\n  attacker: \"\",\n  defender: \"\",\n  attack: \"\",\n  fightEnd: false,\n};\n\nconst fightReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"OPEN_TUTORIEL\": {\n      return { ...state, tutoriel: true };\n    }\n    case \"CLOSE_TUTORIEL\": {\n      return { ...state, tutoriel: false };\n    }\n    case \"LAUNCH_TUTORIEL\": {\n      return { ...state, tutoriel: true };\n    }\n\n    case \"LAUNCH_FIGHT\": {\n      return { ...state, playersClickOnstartGame: true };\n    }\n    case \"START_TV\": {\n      return { ...state, startTv: true };\n    }\n    case \"UPDATE_ROUND\": {\n      return { ...state, round: action.payload.round };\n    }\n    case \"CAN_PLAY\": {\n      return { ...state, canPlay: true };\n    }\n    case \"CANT_PLAY\": {\n      return { ...state, canPlay: false };\n    }\n    case \"UPDATE_DICE\": {\n      return {\n        ...state,\n        dice: {\n          ...state.dice,\n          value: action.payload.value,\n        },\n      };\n    }\n    case \"DICE_SHOW_HIDE\": {\n      return {\n        ...state,\n        dice: {\n          ...state.dice,\n          isOn: !state.isOn,\n        },\n      };\n    }\n    case \"UPDATE_LOGS\": {\n      return { ...state, logs: [...state.logs, action.payload.newlog] };\n    }\n    case \"RESET_LOGS\": {\n      return { ...state, logs: [] };\n    }\n    case \"UPDATE_ATTACKER\": {\n      return { ...state, attacker: action.payload.attacker };\n    }\n    case \"UPDATE_DEFENDER\": {\n      return { ...state, defender: action.payload.defender };\n    }\n    case \"ATTACK_HIT\": {\n      return { ...state, attackHit: \"hit\" };\n    }\n    case \"ATTACK_MISS\": {\n      return { ...state, attackHit: \"fail\" };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default fightReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}