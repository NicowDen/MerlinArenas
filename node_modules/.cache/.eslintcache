[{"/Users/nicolasgrenier/Documents/Code/Page personelle/MaPage/src/index.js":"1","/Users/nicolasgrenier/Documents/Code/Page personelle/MaPage/src/components/app/App.jsx":"2","/Users/nicolasgrenier/Documents/Code/Page personelle/MaPage/src/redux/middlewares/size-middleware.js":"3","/Users/nicolasgrenier/Documents/Code/Page personelle/MaPage/src/redux/reducers/index.js":"4","/Users/nicolasgrenier/Documents/Code/Page personelle/MaPage/src/redux/reducers/modificators-reducers.js":"5","/Users/nicolasgrenier/Documents/Code/Page personelle/MaPage/src/utils/storage.utils.js":"6","/Users/nicolasgrenier/Documents/template-react/src/index.js":"7","/Users/nicolasgrenier/Documents/template-react/src/components/app/App.jsx":"8","/Users/nicolasgrenier/Documents/template-react/src/redux/middlewares/size-middleware.js":"9","/Users/nicolasgrenier/Documents/template-react/src/redux/reducers/index.js":"10","/Users/nicolasgrenier/Documents/template-react/src/redux/reducers/modificators-reducers.js":"11","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/index.js":"12","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/app/App.jsx":"13","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/middlewares/size-middleware.js":"14","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/reducers/index.js":"15","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/home/Home.jsx":"16","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/nav-bar/NavBar.jsx":"17","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/main/Main.jsx":"18","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/reducers/players.js":"19","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/reducers/modificators.js":"20","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/constants/classes.js":"21","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/utils/firstLetterCapital.js":"22","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/reducers/animations.js":"23","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene/FightScene.jsx":"24","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/players-menus-sub-menu/pseudoInputs/PseudoInputs.jsx":"25","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/players-menus-sub-menu/class-selection/ClassSelection.jsx":"26","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/life-bar/LifeBar.jsx":"27","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/players-menus-fighting-button/FightingButton.jsx":"28","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/players-menus/PlayersMenus.jsx":"29","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/reducers/windowSize.js":"30","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/mdj-scene/MdjScene.jsx":"31","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/fight-player-menu/FightPlayerMenu.jsx":"32","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/fight/Fight.jsx":"33","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/logsMenu/LogsMenu.jsx":"34","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/reducers/fight.js":"35","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/tv/Tv.jsx":"36","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/constants/mdj.js":"37","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/utils/getRandom.js":"38","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/tutoriel/Tutoriel.jsx":"39","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/constants/tutoriel.js":"40","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/winner/Winner.jsx":"41"},{"size":773,"mtime":1672916268014,"results":"42","hashOfConfig":"43"},{"size":4,"mtime":1673888794233,"results":"44","hashOfConfig":"43"},{"size":385,"mtime":1672916072283,"results":"45","hashOfConfig":"43"},{"size":323,"mtime":1673718486066,"results":"46","hashOfConfig":"43"},{"size":520,"mtime":1673720466494,"results":"47","hashOfConfig":"43"},{"size":241,"mtime":1672916325679,"results":"48","hashOfConfig":"43"},{"size":773,"mtime":1672916268014,"results":"49","hashOfConfig":"50"},{"size":492,"mtime":1679992983762,"results":"51","hashOfConfig":"50"},{"size":385,"mtime":1672916072283,"results":"52","hashOfConfig":"50"},{"size":197,"mtime":1673889902353,"results":"53","hashOfConfig":"50"},{"size":520,"mtime":1673889948495,"results":"54","hashOfConfig":"50"},{"size":773,"mtime":1672916268014,"results":"55","hashOfConfig":"56"},{"size":1477,"mtime":1693516819004,"results":"57","hashOfConfig":"56"},{"size":385,"mtime":1672916072283,"results":"58","hashOfConfig":"56"},{"size":432,"mtime":1693773213836,"results":"59","hashOfConfig":"56"},{"size":723,"mtime":1693858429128,"results":"60","hashOfConfig":"56"},{"size":250,"mtime":1694065184909,"results":"61","hashOfConfig":"56"},{"size":869,"mtime":1694060520886,"results":"62","hashOfConfig":"56"},{"size":4711,"mtime":1694168202646,"results":"63","hashOfConfig":"56"},{"size":2164,"mtime":1694065082080,"results":"64","hashOfConfig":"56"},{"size":694,"mtime":1694157151276,"results":"65","hashOfConfig":"56"},{"size":317,"mtime":1693549468422,"results":"66","hashOfConfig":"56"},{"size":2414,"mtime":1694008219552,"results":"67","hashOfConfig":"56"},{"size":18708,"mtime":1694167977876,"results":"68","hashOfConfig":"56"},{"size":1046,"mtime":1693503383219,"results":"69","hashOfConfig":"56"},{"size":2102,"mtime":1694044235122,"results":"70","hashOfConfig":"56"},{"size":2087,"mtime":1693864179273,"results":"71","hashOfConfig":"56"},{"size":267,"mtime":1693436773710,"results":"72","hashOfConfig":"56"},{"size":9807,"mtime":1694053696793,"results":"73","hashOfConfig":"56"},{"size":442,"mtime":1693515144025,"results":"74","hashOfConfig":"56"},{"size":3316,"mtime":1694145797694,"results":"75","hashOfConfig":"56"},{"size":6982,"mtime":1694148879480,"results":"76","hashOfConfig":"56"},{"size":3341,"mtime":1694149116619,"results":"77","hashOfConfig":"56"},{"size":405,"mtime":1694029883156,"results":"78","hashOfConfig":"56"},{"size":3366,"mtime":1694151849934,"results":"79","hashOfConfig":"56"},{"size":1090,"mtime":1693858367900,"results":"80","hashOfConfig":"56"},{"size":4109,"mtime":1694151821266,"results":"81","hashOfConfig":"56"},{"size":153,"mtime":1693669991177,"results":"82","hashOfConfig":"56"},{"size":10587,"mtime":1694045737768,"results":"83","hashOfConfig":"56"},{"size":1191,"mtime":1694168289980,"results":"84","hashOfConfig":"56"},{"size":466,"mtime":1694064365111,"results":"85","hashOfConfig":"56"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pcu7yz",{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cxtl8r",{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1jh1ygj",{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nicolasgrenier/Documents/Code/Page personelle/MaPage/src/index.js",[],[],"/Users/nicolasgrenier/Documents/Code/Page personelle/MaPage/src/components/app/App.jsx",["222","223"],[],"rsc\n","/Users/nicolasgrenier/Documents/Code/Page personelle/MaPage/src/redux/middlewares/size-middleware.js",["224"],[],"const sizeMiddleware = (store) => (next) => (action) => {\n  const state = store.getState();\n\n  if (action.type === \"SELECT_WORD\") {\n    next({ type: \"TOGGLE\" });\n  }\n\n  // if (\n  //   action.type === \"TOGGLE\" &&\n  //   action.payload.element.className.includes(\"green-block\")\n  // ) {\n  //   return next({ type: \"\" });\n  // }\n\n  return next(action);\n};\n\nexport default sizeMiddleware;\n","/Users/nicolasgrenier/Documents/Code/Page personelle/MaPage/src/redux/reducers/index.js",[],[],"/Users/nicolasgrenier/Documents/Code/Page personelle/MaPage/src/redux/reducers/modificators-reducers.js",[],[],"/Users/nicolasgrenier/Documents/Code/Page personelle/MaPage/src/utils/storage.utils.js",[],[],"/Users/nicolasgrenier/Documents/template-react/src/index.js",[],[],"/Users/nicolasgrenier/Documents/template-react/src/components/app/App.jsx",["225"],[],"/Users/nicolasgrenier/Documents/template-react/src/redux/middlewares/size-middleware.js",["226"],[],"/Users/nicolasgrenier/Documents/template-react/src/redux/reducers/index.js",[],[],"/Users/nicolasgrenier/Documents/template-react/src/redux/reducers/modificators-reducers.js",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/index.js",[],[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/app/App.jsx",["227","228","229","230"],[],"import { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\n//components\nimport Home from \"../home/Home\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  //==get window width==/\n  useEffect(() => {\n    const windowSize = window.innerWidth;\n    dispatch({\n      type: \"GET_WINDOW_WIDTH\",\n      payload: { wWidth: windowSize },\n    });\n  }, []);\n\n  const getScreenSize = () => {\n    const windowSize = window.innerWidth;\n\n    dispatch({\n      type: \"GET_WINDOW_WIDTH\",\n      payload: { wWidth: windowSize },\n    });\n  };\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      getScreenSize();\n    };\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowResize);\n    };\n  }, []);\n\n  //==get window height==/\n  useEffect(() => {\n    const windowHeight = window.innerHeight;\n    dispatch({\n      type: \"GET_WINDOW_HEIGHT\",\n      payload: { wHeight: windowHeight },\n    });\n  }, []);\n\n  const getScreenHeight = () => {\n    const windowHeight = window.innerHeight;\n\n    dispatch({\n      type: \"GET_WINDOW_HEIGHT\",\n      payload: { wHeight: windowHeight },\n    });\n  };\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      getScreenHeight();\n    };\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowResize);\n    };\n  }, []);\n\n  return <Home />;\n};\n\nexport default App;\n","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/middlewares/size-middleware.js",["231"],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/reducers/index.js",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/home/Home.jsx",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/nav-bar/NavBar.jsx",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/main/Main.jsx",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/reducers/players.js",["232"],[],"const INITIAL_STATE = {\n  player1: {\n    pseudo: \"\",\n    playerClass: {\n      className: \"\",\n      hp: null,\n      atk: null,\n      int: null,\n      spd: null,\n      agi: null,\n      armor: null,\n      color: \"\",\n      icon: \"\",\n      potions: null,\n      onDef: false,\n      ultimUp: true,\n    },\n  },\n  player2: {\n    pseudo: \"\",\n    playerClass: {\n      className: \"\",\n      hp: null,\n      atk: null,\n      int: null,\n      spd: null,\n      agi: null,\n      armor: null,\n      color: \"\",\n      icon: \"\",\n      potions: null,\n      onDef: false,\n      ultimUp: true,\n    },\n  },\n};\n\nconst playersReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"PLAYER_PSEUDO\": {\n      return {\n        ...state,\n        [action.payload.player]: {\n          ...state[action.payload.player],\n          pseudo: action.payload.pseudo,\n        },\n      };\n    }\n\n    case \"UPDATE_PLAYER_CLASS\": {\n      return {\n        ...state,\n        [action.payload.player]: {\n          ...state[action.payload.player],\n          playerClass: action.payload.playerClass,\n        },\n      };\n    }\n\n    case \"PLAYER_TAKE_DMG\": {\n      const { player, hitValue } = action.payload;\n      const playerData = state[player];\n\n      if (playerData && playerData.playerClass && playerData.playerClass.hp) {\n        const newHP = playerData.playerClass.hp - hitValue;\n\n        return {\n          ...state,\n          [player]: {\n            ...state[player],\n            playerClass: {\n              ...state[player].playerClass,\n              hp: newHP,\n            },\n          },\n        };\n      }\n    }\n    case \"PLAYER_DEFENSE_UP\": {\n      return {\n        ...state,\n        [action.payload.player]: {\n          ...state[action.payload.player],\n          playerClass: {\n            ...state[action.payload.player].playerClass,\n            onDef: true,\n            agi: state[action.payload.player].playerClass.agi + 3,\n          },\n        },\n      };\n    }\n    case \"PLAYER_DEFENSE_DOWN\": {\n      return {\n        ...state,\n        [action.payload.player]: {\n          ...state[action.payload.player],\n          playerClass: {\n            ...state[action.payload.player].playerClass,\n            onDef: false,\n            agi: state[action.payload.player].playerClass.agi - 3,\n          },\n        },\n      };\n    }\n\n    case \"PLAYER_ULTIM_DOWN\": {\n      return {\n        ...state,\n        [action.payload.player]: {\n          ...state[action.payload.player],\n          playerClass: {\n            ...state[action.payload.player].playerClass,\n            ultimUp: false,\n          },\n        },\n      };\n    }\n\n    case \"PLAYER_POTION_MODIFICATION\": {\n      const { attacker, defender } = action.payload;\n      const attackerData = state[attacker];\n      const newAttackerPotions = attackerData.playerClass.potions + 1;\n      const defenderData = state[defender];\n      const newDefenderPotions = Math.max(\n        0,\n        defenderData.playerClass.potions - 1\n      );\n      return {\n        ...state,\n        [attacker]: {\n          ...state[attacker],\n          playerClass: {\n            ...state[attacker].playerClass,\n            potions: newAttackerPotions,\n          },\n        },\n        [defender]: {\n          ...state[defender],\n          playerClass: {\n            ...state[defender].playerClass,\n            potions: newDefenderPotions,\n          },\n        },\n      };\n    }\n\n    case \"PLAYER_POTION_HEAL\": {\n      const { player } = action.payload;\n      const playerData = state[player];\n      const minHealPercentage = 10;\n      const maxHealPercentage = 20;\n      const baseHP = 300; // MAXHP\n      if (\n        playerData &&\n        playerData.playerClass &&\n        playerData.playerClass.hp &&\n        playerData.playerClass.potions > 0\n      ) {\n        const minHeal = (minHealPercentage / 100) * baseHP;\n        const maxHeal = (maxHealPercentage / 100) * baseHP;\n        const randomHeal = Math.floor(\n          Math.random() * (maxHeal - minHeal + 1) + minHeal\n        );\n        const newHP = Math.min(baseHP, playerData.playerClass.hp + randomHeal);\n\n        const newPotions =\n          playerData.playerClass.potions > 0\n            ? playerData.playerClass.potions - 1\n            : playerData.playerClass.potions;\n\n        return {\n          ...state,\n          [player]: {\n            ...state[player],\n            playerClass: {\n              ...state[player].playerClass,\n              hp: newHP,\n              potions: newPotions,\n            },\n          },\n        };\n      } else {\n        return state;\n      }\n    }\n\n    case \"RESET_PLAYERS_REDUCER\": {\n      return INITIAL_STATE;\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default playersReducer;\n","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/reducers/modificators.js",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/constants/classes.js",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/utils/firstLetterCapital.js",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/reducers/animations.js",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene/FightScene.jsx",["233"],[],"import mc from \"./fight-scene.module.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n//components//\nimport LifeBar from \"../fight-scene-elements/life-bar/LifeBar\";\nimport MdjScene from \"../fight-scene-elements/mdj-scene/MdjScene\";\nimport Fight from \"../fight-scene-elements/fight/Fight\";\nimport Tv from \"../fight-scene-elements/tv/Tv\";\nimport Tutoriel from \"../fight-scene-elements/tutoriel/Tutoriel\";\nimport Winner from \"../fight-scene-elements/winner/Winner\";\n//backgrouns images//\nimport arena1 from \"../../images/arena1.jpeg\";\nimport arena2 from \"../../images/arena2.jpeg\";\nimport arena3 from \"../../images/arena3.jpeg\";\nimport arena4 from \"../../images/arena4.jpeg\";\nimport arena5 from \"../../images/arena4.jpeg\";\nimport arena6 from \"../../images/arena6.avif\";\nimport arena7 from \"../../images/arena7.jpeg\";\n//utils//\nimport { getRandom } from \"../../utils/getRandom\";\n//MDJ dialogs//\nimport {\n  mdjWelcome,\n  mdjTauntAttacker,\n  mdjTauntDefender,\n  mdjFightWillStart,\n  mdjPotionOk,\n  mdjPotionNok,\n  mdjNoMorePotion,\n  mdjDefense,\n  mdjAlreadyDef,\n  mdjCounterAttack,\n  mdjStun,\n  mdjTheft,\n  mdjNothingToSteal,\n} from \"../../constants/mdj\";\n\nconst FightScene = () => {\n  const dispatch = useDispatch();\n\n  const {\n    bckRandom,\n    windowWidth,\n    player1,\n    player2,\n    tutoriel,\n    animationTutoriel,\n    logs,\n    playersClickOnstartGame,\n    startTv,\n    round,\n    dice,\n    attacker,\n    defender,\n    playerActionStatus,\n    canPlay,\n    winner,\n  } = useSelector((store) => {\n    return {\n      bckRandom: store.modificatorsReducer.bckRandom,\n      player1: store.playersReducer.player1,\n      player2: store.playersReducer.player2,\n      windowWidth: store.windowSizeReducer.windowWidth,\n      tutoriel: store.fightReducer.tutoriel,\n      animationTutoriel: store.animationsReducer.animationTutoriel,\n      logs: store.fightReducer.logs,\n      playersClickOnstartGame: store.fightReducer.playersClickOnstartGame,\n      startTv: store.fightReducer.startTv,\n      round: store.fightReducer.round,\n      dice: store.fightReducer.dice,\n      attacker: store.fightReducer.attacker,\n      defender: store.fightReducer.defender,\n      playerActionStatus: store.fightReducer.playerActionStatus,\n      canPlay: store.fightReducer.canPlay,\n      winner: store.fightReducer.winner,\n    };\n  });\n\n  const arenaImages = [arena1, arena2, arena3, arena4, arena5, arena6, arena7];\n  //mdj dialogs state rdm//\n  const [random, setRandom] = useState(null);\n\n  useEffect(() => {\n    if (player1.playerClass.hp <= 0 || player2.playerClass.hp <= 0) {\n      dispatch({ type: \"OPEN_WINNER\" });\n    }\n  }, [player1, player2]);\n\n  // Fight end TimeOut to let switch components animation\n  const onEndFightButtonClick = () => {\n    dispatch({ type: `ANIMATION_FIGHT_START_CANCEL` });\n    setRandom(getRandom(0, mdjWelcome.length - 1)); //to prepare next fight welcome MDJ message\n    setTimeout(() => {\n      dispatch({ type: \"RESET_PLAYERS_REDUCER\" });\n      dispatch({ type: \"RESET_ANIMATIONS_REDUCER\" });\n      dispatch({ type: `FIGHT_END` });\n      dispatch({ type: \"RESET_MODIFICATORS_REDUCER\" });\n    }, 500);\n  };\n\n  const closeTutoriel = () => {\n    setRandom(getRandom(0, mdjWelcome.length - 1)); //mdjWelcome array length = 2\n    dispatch({\n      type: \"ANIMATION_CLOSE_TUTORIEL_START\",\n    });\n    setTimeout(() => {\n      dispatch({ type: \"CLOSE_TUTORIEL\" });\n    }, 400);\n  };\n\n  //DICE 20 value change//\n  const newDice = () => {\n    dispatch({\n      type: \"UPDATE_DICE\",\n      payload: { value: getRandom(1, 20) },\n    });\n  };\n\n  const startGame = () => {\n    dispatch({ type: \"START_TV\" });\n    dispatch({ type: \"PLAYER_ACTION_STATUS_FIGHTSTART\" });\n    setTimeout(() => {\n      dispatch({ type: \"LAUNCH_FIGHT\" });\n      dispatch({\n        type: \"FIRST_ROUND\",\n      });\n      newDice();\n    }, 500);\n  };\n\n  //in combat log on the bottom of the screen//\n  const newLog = (string) => {\n    dispatch({\n      type: \"UPDATE_LOGS\",\n      payload: {\n        newlog: string,\n      },\n    });\n  };\n\n  //to define attacker and defender variables for some conditions =\"player1\" or \"player2\"  //\n  const attackerDefenderStrings = (attacker, defender) => {\n    dispatch({\n      type: \"UPDATE_ATTACKER\",\n      payload: { attacker },\n    });\n    dispatch({\n      type: \"UPDATE_DEFENDER\",\n      payload: { defender },\n    });\n  };\n\n  //defender dodge chance//\n  const dodge = (defender) => {\n    return dice.value <= defender.playerClass.agi ? true : false;\n  };\n\n  //after each players action round change//\n  const newRound = (nbRoundAdd) => {\n    dispatch({ type: \"CANT_PLAY\" });\n    setTimeout(() => {\n      dispatch({\n        type: \"UPDATE_ROUND\",\n        payload: { round: round + nbRoundAdd },\n      });\n      dispatch({ type: \"CAN_PLAY\" });\n      newDice();\n    }, 2500);\n  };\n\n  //round is even or odd, so modulo2 to determine who can play. If round is odd player 1, else player 2\n  //for each action we add 1 to round. No just change for 1 or 2. We need this way for capacities Cooldown.\n\n  //===SKILLS====//\n  //ATTACK SKILL//\n  const onAttackClick = (\n    attacker,\n    defender,\n    attackerTostring,\n    defenderTostring\n  ) => {\n    const dmg = Math.round(\n      ((attacker.playerClass.atk / 2) * attacker.playerClass.spd) / 100 +\n        attacker.playerClass.int / 9.5 +\n        getRandom(1, 8) +\n        getRandom(1, 8) -\n        defender.playerClass.armor / 2\n    );\n    const counterAttack = Math.round(\n      ((defender.playerClass.atk / 2) * defender.playerClass.spd) / 100 +\n        defender.playerClass.int / 9.5 +\n        getRandom(1, 8) +\n        getRandom(1, 8) +\n        getRandom(1, 8) -\n        attacker.playerClass.armor / 2\n    );\n    if (dodge(defender) && !defender.playerClass.onDef) {\n      setRandom(getRandom(0, mdjTauntAttacker.length - 1));\n      dispatch({\n        type: \"PLAYER_TAKE_DMG\",\n        payload: { player: defenderTostring, hitValue: 0 },\n      });\n      dispatch({ type: \"PLAYER_ACTION_STATUS_FAIL\" });\n      newLog(`${defender.pseudo.toUpperCase()} esquive`);\n      newRound(1);\n    } else if (dodge(defender) && defender.playerClass.onDef) {\n      setRandom(getRandom(0, mdjCounterAttack.length - 1));\n      dispatch({\n        type: \"PLAYER_TAKE_DMG\",\n        payload: { player: attackerTostring, hitValue: counterAttack },\n      });\n      dispatch({\n        type: \"PLAYER_DEFENSE_DOWN\",\n        payload: { player: defenderTostring },\n      });\n      dispatch({ type: \"PLAYER_ACTION_STATUS_COUNTER_ATTACK\" });\n      newLog(\n        `${defender.pseudo.toUpperCase()} contre attaque et inflie ${counterAttack} dommages`\n      );\n      newRound(1);\n    } else {\n      setRandom(getRandom(0, mdjTauntDefender.length - 1));\n      if (defender.playerClass.onDef) {\n        dispatch({\n          type: \"PLAYER_DEFENSE_DOWN\",\n          payload: { player: defenderTostring },\n        });\n      }\n      dispatch({\n        type: \"PLAYER_TAKE_DMG\",\n        payload: { player: defenderTostring, hitValue: dmg },\n      });\n\n      dispatch({ type: \"PLAYER_ACTION_STATUS_HIT\" });\n      newLog(\n        `${attacker.pseudo.toUpperCase()} inflige ${dmg} points de dégâts à ${defender.pseudo.toUpperCase()}`\n      );\n      newRound(1);\n    }\n  };\n\n  const onAttackClickP1 = () => {\n    if (round % 2 === 1 && round > 0 && canPlay) {\n      attackerDefenderStrings(\"player1\", \"player2\");\n      onAttackClick(player1, player2, \"player1\", \"player2\");\n    }\n  };\n  const onAttackClickP2 = () => {\n    if (round % 2 === 0 && round > 0 && canPlay) {\n      attackerDefenderStrings(\"player2\", \"player1\");\n      onAttackClick(player2, player1, \"player2\", \"player1\");\n    }\n  };\n\n  //DEFENSE SKILL//\n  const onDefenseClick = (attacker, attackerToString) => {\n    if (!attacker.playerClass.onDef) {\n      setRandom(getRandom(0, mdjDefense.length - 1)); //mdjDefense array length = 3.\n      dispatch({\n        type: \"PLAYER_DEFENSE_UP\",\n        payload: { player: attackerToString },\n      });\n      dispatch({ type: \"PLAYER_ACTION_STATUS_DEFENSE\" });\n      newLog(`${attacker.pseudo.toUpperCase()} lève son bouclier`);\n      newRound(1);\n    } else {\n      setRandom(getRandom(0, mdjAlreadyDef.length - 1)); //mdjAlreadyDef array length = 3.\n      dispatch({ type: \"PLAYER_ACTION_STATUS_ALREADY_DEFENSE\" });\n    }\n  };\n\n  const onDefenseClickP1 = () => {\n    if (round % 2 === 1 && round > 0 && canPlay) {\n      attackerDefenderStrings(\"player1\", \"player2\");\n      onDefenseClick(player1, \"player1\");\n    }\n  };\n  const onDefenseClickP2 = () => {\n    if (round % 2 === 0 && round > 0 && canPlay) {\n      attackerDefenderStrings(\"player2\", \"player1\");\n      onDefenseClick(player2, \"player2\");\n    }\n  };\n\n  //ULTIM SKILL//\n  const onUltimClick = (\n    attacker,\n    defender,\n    attackerTostring,\n    defenderTostring\n  ) => {\n    const dmg = Math.round(\n      ((attacker.playerClass.atk / 2) * attacker.playerClass.spd) / 100 +\n        attacker.playerClass.int / 9.5 +\n        getRandom(1, 8) -\n        defender.playerClass.armor / 2\n    );\n    const counterAttack = Math.round(\n      ((defender.playerClass.atk / 2) * defender.playerClass.spd) / 100 +\n        defender.playerClass.int / 9.5 +\n        getRandom(1, 8) +\n        getRandom(1, 8) +\n        getRandom(1, 8) -\n        attacker.playerClass.armor / 2\n    );\n    if (dodge(defender) && !defender.playerClass.onDef) {\n      setRandom(getRandom(0, mdjTauntAttacker.length - 1));\n      dispatch({\n        type: \"PLAYER_TAKE_DMG\",\n        payload: { player: defenderTostring, hitValue: 0 },\n      });\n      dispatch({ type: \"PLAYER_ACTION_STATUS_FAIL\" });\n      newLog(`${defender.pseudo.toUpperCase()} esquive`);\n      newRound(1);\n    } else if (dodge(defender) && defender.playerClass.onDef) {\n      setRandom(getRandom(0, mdjCounterAttack.length - 1));\n      dispatch({\n        type: \"PLAYER_TAKE_DMG\",\n        payload: { player: attackerTostring, hitValue: counterAttack },\n      });\n      dispatch({\n        type: \"PLAYER_DEFENSE_DOWN\",\n        payload: { player: defenderTostring },\n      });\n      dispatch({ type: \"PLAYER_ACTION_STATUS_COUNTER_ATTACK\" });\n      newLog(\n        `${defender.pseudo.toUpperCase()} contre attaque et inflie ${counterAttack} dommages`\n      );\n      newRound(1);\n    } else {\n      if (\n        attacker.playerClass.className === \"mage\" ||\n        attacker.playerClass.className === \"guerrier\"\n      ) {\n        setRandom(getRandom(0, mdjStun.length - 1));\n        dispatch({\n          type: \"PLAYER_TAKE_DMG\",\n          payload: { player: defenderTostring, hitValue: dmg },\n        });\n        dispatch({ type: \"PLAYER_ACTION_STATUS_MAGE_WAR_ULTIM\" });\n        dispatch({\n          type: \"PLAYER_ULTIM_DOWN\",\n          payload: { player: attackerTostring },\n        });\n        newLog(\n          `${attacker.pseudo.toUpperCase()} assome ${attacker.pseudo.toUpperCase()} et lui inflige ${dmg} dégâts`\n        );\n        newRound(2);\n      } else if (\n        attacker.playerClass.className === \"voleur\" &&\n        defender.playerClass.potions > 0\n      ) {\n        setRandom(getRandom(0, mdjTheft.length - 1));\n        dispatch({\n          type: \"PLAYER_POTION_MODIFICATION\",\n          payload: { attacker: attackerTostring, defender: defenderTostring },\n        });\n        dispatch({ type: \"PLAYER_ACTION_STATUS_ROGUE_ULTIM\" });\n        dispatch({\n          type: \"PLAYER_ULTIM_DOWN\",\n          payload: { player: attackerTostring },\n        });\n        newLog(\n          `${attacker.pseudo.toUpperCase()} vole une potion à ${attacker.pseudo.toUpperCase()}`\n        );\n        newRound(1);\n      } else if (\n        attacker.playerClass.className === \"voleur\" &&\n        defender.playerClass.potions <= 0\n      ) {\n        setRandom(getRandom(0, mdjNothingToSteal.length - 1));\n        dispatch({ type: \"PLAYER_ACTION_STATUS_ROGUE_ULTIM_FAIL\" });\n        dispatch({\n          type: \"PLAYER_ULTIM_DOWN\",\n          payload: { player: attackerTostring },\n        });\n      }\n    }\n  };\n\n  const onUltimClickP1 = () => {\n    if (round % 2 === 1 && round > 0 && canPlay) {\n      if (!player1.playerClass.ultimUp) {\n        return;\n      } else {\n        attackerDefenderStrings(\"player1\", \"player2\");\n        onUltimClick(player1, player2, \"player1\", \"player2\");\n      }\n    }\n  };\n  const onUltimClickP2 = () => {\n    if (round % 2 === 0 && round > 0 && canPlay) {\n      if (!player2.playerClass.ultimUp) {\n        return;\n      } else {\n        attackerDefenderStrings(\"player2\", \"player1\");\n        onUltimClick(player2, player1, \"player2\", \"player1\");\n      }\n    }\n  };\n\n  //POTION SKILL//\n  const potionHeal = (attacker, attackerTostring) => {\n    if (attacker.playerClass.hp >= 300) {\n      dispatch({ type: \"PLAYER_ACTION_STATUS_POTION_NOK\" });\n      setRandom(getRandom(0, mdjPotionNok.length - 1)); //mdjPotionNok array length = 3\n    } else if (attacker.playerClass.potions <= 0) {\n      setRandom(getRandom(0, mdjNoMorePotion.length - 1)); //mdjNoMorePotion array length = 3\n      dispatch({ type: \"PLAYER_ACTION_STATUS_POTION_ZERO\" });\n    } else {\n      dispatch({\n        type: \"PLAYER_POTION_HEAL\",\n        payload: { player: attackerTostring },\n      });\n      dispatch({ type: \"PLAYER_ACTION_STATUS_POTION_OK\" });\n      setRandom(getRandom(0, mdjPotionOk.length - 1)); //mdjPotionOk array length = 3\n      newLog(`${attacker.pseudo.toUpperCase()} utilise une potion de soin`);\n      newRound(1);\n    }\n  };\n  const onPotionClickP1 = () => {\n    if (round % 2 === 1 && round > 0 && canPlay) {\n      attackerDefenderStrings(\"player1\", \"player2\");\n      potionHeal(player1, \"player1\");\n    }\n  };\n  const onPotionClickP2 = () => {\n    if (round % 2 === 0 && round > 0 && canPlay) {\n      attackerDefenderStrings(\"player2\", \"player1\");\n      potionHeal(player2, \"player2\");\n    }\n  };\n\n  return (\n    <>\n      {tutoriel && (\n        <div className={mc.tutoriel}>\n          <Tutoriel\n            player1={player1}\n            player2={player2}\n            closeTutoriel={closeTutoriel}\n            animation={animationTutoriel}\n          />\n        </div>\n      )}\n      {/* {winner && ( */}\n      <div\n        className={\n          winner\n            ? `${mc.winner} ${mc.winner_shown}`\n            : `${mc.winner} ${mc.winner_hidden}`\n        }\n        style={{ backgroundImage: `url(${arenaImages[bckRandom]})` }}\n      >\n        <Winner\n          player={player1.playerClass.hp <= 0 ? player2 : player1}\n          onEndFightButtonClick={onEndFightButtonClick}\n          bckImage={arenaImages[bckRandom]}\n        />\n      </div>\n      {/* )} */}\n      <div\n        className={\n          winner || tutoriel\n            ? `${mc.container} ${mc.container_low_opacity}`\n            : mc.container\n        }\n        style={{ backgroundImage: `url(${arenaImages[bckRandom]})` }}\n      >\n        <div className={mc.fightingZone}>\n          <div className={mc.top_menu}>\n            <div className={mc.life_bars_player1}>\n              <LifeBar\n                windowWidth={windowWidth}\n                playerNumber={1} //determine row-reverse for player1\n                player={player1}\n              />\n            </div>\n            <div\n              style={{ backgroundImage: `url(${arenaImages[bckRandom]})` }}\n              className={mc.top_tv}\n            >\n              <button onClick={startGame}>\n                <p>Clique ici pour commencer</p>\n              </button>\n              <div\n                className={\n                  startTv ? `${mc.clean_tv} ${mc.clean_tv_on}` : mc.clean_tv\n                }\n              ></div>\n              {playersClickOnstartGame && (\n                <div className={mc.myTV}>\n                  <Tv round={round} player1={player1} player2={player2} />\n                </div>\n              )}\n            </div>\n\n            <div className={mc.life_bars_player2}>\n              <LifeBar\n                windowWidth={windowWidth}\n                playerNumber={2} //determine row-reverse for player2\n                player={player2}\n              />\n            </div>\n          </div>\n          <div className={mc.mdj_menu}>\n            <MdjScene\n              player1={player1}\n              player2={player2}\n              attacker={attacker === \"player1\" ? player1 : player2}\n              defender={defender === \"player1\" ? player1 : player2}\n              string={\n                !playersClickOnstartGame && random !== null\n                  ? mdjWelcome[random]\n                  : playersClickOnstartGame &&\n                    playerActionStatus === \"fightStart\"\n                  ? mdjFightWillStart\n                  : playersClickOnstartGame && playerActionStatus === \"hit\"\n                  ? mdjTauntDefender[random]\n                  : playersClickOnstartGame && playerActionStatus === \"fail\"\n                  ? mdjTauntAttacker[random]\n                  : playersClickOnstartGame && playerActionStatus === \"potionOk\"\n                  ? mdjPotionOk[random]\n                  : playersClickOnstartGame &&\n                    playerActionStatus === \"potionNok\"\n                  ? mdjPotionNok[random]\n                  : playersClickOnstartGame &&\n                    playerActionStatus === \"potionZero\"\n                  ? mdjNoMorePotion[random]\n                  : playerActionStatus === \"defense\"\n                  ? mdjDefense[random]\n                  : playerActionStatus === \"alreadyDefense\"\n                  ? mdjAlreadyDef[random]\n                  : playerActionStatus === \"counterAttack\"\n                  ? mdjCounterAttack[random]\n                  : playerActionStatus === \"stun\"\n                  ? mdjStun[random]\n                  : playerActionStatus === \"theft\"\n                  ? mdjTheft[random]\n                  : playerActionStatus === \"nothingToSteal\"\n                  ? mdjNothingToSteal[random]\n                  : \"\"\n              }\n              playerActionStatus={playerActionStatus}\n            />\n          </div>\n          <div className={mc.fighting_menu}>\n            <Fight\n              windowWidth={windowWidth}\n              player1={player1}\n              player2={player2}\n              logs={logs}\n              onAttackClickP1={onAttackClickP1}\n              onDefenseClickP1={onDefenseClickP1}\n              onUltimClickP1={onUltimClickP1}\n              onPotionClickP1={onPotionClickP1}\n              onAttackClickP2={onAttackClickP2}\n              onDefenseClickP2={onDefenseClickP2}\n              onUltimClickP2={onUltimClickP2}\n              onPotionClickP2={onPotionClickP2}\n              round={round}\n              attacker={attacker}\n              playerActionStatus={playerActionStatus}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FightScene;\n","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/players-menus-sub-menu/pseudoInputs/PseudoInputs.jsx",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/players-menus-sub-menu/class-selection/ClassSelection.jsx",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/life-bar/LifeBar.jsx",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/players-menus-fighting-button/FightingButton.jsx",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/players-menus/PlayersMenus.jsx",["234"],[],"import mc from \"./players-menus.module.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\n//components//\nimport PseudoInputs from \"../players-menus-sub-menu/pseudoInputs/PseudoInputs\";\nimport ClassSelection from \"../players-menus-sub-menu/class-selection/ClassSelection\";\nimport FightingButton from \"../players-menus-fighting-button/FightingButton\";\nimport { useEffect } from \"react\";\n\nconst PlayersMenu = () => {\n  const dispatch = useDispatch();\n\n  const {\n    player1,\n    player2,\n    pseudoSelectedP1,\n    pseudoSelectedP2,\n    inputP1ValidationError,\n    inputP2ValidationError,\n    classSelectedP1,\n    classSelectedP2,\n    animationOnPseudoP1Validation,\n    animationOnPseudoP2Validation,\n    animationOnClassP1Validation,\n    animationOnClassP2Validation,\n    playersReady,\n    animationFightingButton,\n  } = useSelector((store) => {\n    return {\n      player1: store.playersReducer.player1,\n      player2: store.playersReducer.player2,\n      pseudoSelectedP1: store.modificatorsReducer.pseudoSelectedP1,\n      pseudoSelectedP2: store.modificatorsReducer.pseudoSelectedP2,\n      inputP1ValidationError: store.modificatorsReducer.inputP1ValidationError,\n      inputP2ValidationError: store.modificatorsReducer.inputP2ValidationError,\n      classSelectedP1: store.modificatorsReducer.classSelectedP1,\n      classSelectedP2: store.modificatorsReducer.classSelectedP2,\n      animationOnPseudoP1Validation:\n        store.animationsReducer.animationOnPseudoP1Validation,\n      animationOnPseudoP2Validation:\n        store.animationsReducer.animationOnPseudoP2Validation,\n      animationOnClassP1Validation:\n        store.animationsReducer.animationOnClassP1Validation,\n      animationOnClassP2Validation:\n        store.animationsReducer.animationOnClassP2Validation,\n      playersReady: store.modificatorsReducer.playersReady,\n      animationFightingButton: store.animationsReducer.animationFightingButton,\n    };\n  });\n\n  //change value on Pseudo Inputs and player1/2.pseudo\n  const updatePseudo = (player, pseudo) => {\n    dispatch({\n      type: \"PLAYER_PSEUDO\",\n      payload: { player, pseudo: pseudo.slice(0, 10) },\n    });\n  };\n\n  //confirm player pseudo validation or launch error on input if try to validate an empty pseudo\n  const pseudoValidate = (e, playerNumber) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value.trim() !== \"\") {\n        dispatch({ type: `ANIMATION_P${playerNumber}_PSEUDO_VALIDATION` });\n        dispatch({ type: `PLAYER${playerNumber}_PSEUDO_INPUT_ERROR_RESET` });\n        setTimeout(() => {\n          //setTimeout to match with transition on css and let animation finish before components switch\n          dispatch({ type: `PLAYER${playerNumber}_PSEUDO_VALIDATE` });\n        }, 200);\n      } else {\n        dispatch({ type: `PLAYER${playerNumber}_PSEUDO_INPUT_ERROR` });\n        setTimeout(() => {\n          //setTimeout to match with transition on css and let animation finish before components switch\n          dispatch({ type: `PLAYER${playerNumber}_PSEUDO_INPUT_ERROR_RESET` });\n        }, 1000);\n      }\n    }\n  };\n\n  //for let player change his pseudo\n  const onEditPseudoClick = (playerNumber) => {\n    dispatch({ type: `ANIMATION_P${playerNumber}_PSEUDO_VALIDATION_CANCEL` });\n    setTimeout(() => {\n      //setTimeout to match with transition on css and let animation finish before components switch\n      dispatch({\n        type: \"PLAYER_PSEUDO\",\n        payload: { player: `player${playerNumber}`, pseudo: \"\" },\n      });\n      dispatch({ type: `PLAYER${playerNumber}_PSEUDO_EDIT` });\n    }, 100);\n  };\n\n  //for let player change his class\n  const onEditClassClick = (playerNumber) => {\n    dispatch({ type: `PLAYER${playerNumber}_CLASS_EDIT` });\n    dispatch({\n      type: \"UPDATE_PLAYER_CLASS\",\n      payload: { player: `player${playerNumber}`, playerClass: {} },\n    });\n    setTimeout(() => {\n      //setTimeout to match with transition on css and let animation finish before components switch\n      dispatch({ type: `ANIMATION_P${playerNumber}_CLASS_VALIDATION_CANCEL` });\n    }, 200);\n  };\n\n  //confirm player class validation\n  const onClickplayerClassSelection = (playerNumber, playerClass) => {\n    dispatch({ type: `ANIMATION_P${playerNumber}_CLASS_VALIDATION` });\n    setTimeout(() => {\n      //setTimeout to match with transition on css and let animation finish before components switch\n      dispatch({\n        type: \"UPDATE_PLAYER_CLASS\",\n        payload: { player: `player${playerNumber}`, playerClass: playerClass },\n      });\n      dispatch({ type: `PLAYER${playerNumber}_CLASS_VALIDATE` });\n    }, 500);\n  };\n\n  useEffect(() => {\n    if (\n      classSelectedP1 &&\n      classSelectedP2 &&\n      pseudoSelectedP1 &&\n      pseudoSelectedP2\n    ) {\n      dispatch({ type: `PLAYERS_READY_TO_FIGHT` });\n      setTimeout(() => {\n        //setTimeout to match with transition on css and let animation finish before components switch\n        dispatch({ type: `ANIMATION_FIGHTING_BUTTON` });\n      }, 100);\n    } else {\n      dispatch({ type: `ANIMATION_FIGHTING_BUTTON_CANCEL` });\n\n      setTimeout(() => {\n        //setTimeout to match with transition on css and let animation finish before components switch\n        dispatch({ type: `PLAYERS_NOT_READY_TO_FIGHT` });\n      }, 300);\n    }\n  }, [\n    dispatch,\n    player1.playerClass.className,\n    player2.playerClass.className,\n    pseudoSelectedP1,\n    pseudoSelectedP2,\n  ]);\n\n  const onFightStartButtonClick = () => {\n    dispatch({ type: `ANIMATION_FIGHT_START` });\n    dispatch({\n      type: \"ANIMATION_CLOSE_TUTORIEL_CANCEL\",\n    });\n    dispatch({ type: \"RESET_FIGHT_REDUCER\" });\n    dispatch({ type: \"GET_RANDOM_BCK\" });\n    setTimeout(() => {\n      //setTimeout to match with transition on css and let animation finish before components switch\n      dispatch({ type: `FIGHT_START` });\n      dispatch({ type: `OPEN_TUTORIEL` });\n    }, 300);\n  };\n\n  return (\n    <div className={mc.container}>\n      <div className={mc.players_menu}>\n        <div className={mc.player1}>\n          {!pseudoSelectedP1 ? (\n            <div\n              className={\n                !animationOnPseudoP1Validation\n                  ? `${mc.player1_pseudo} ${mc.animate_fade_in}`\n                  : `${mc.player1_pseudo} ${mc.animate_opacity}`\n              }\n            >\n              <PseudoInputs\n                inputValue={player1.pseudo}\n                player=\"player1\"\n                pseudoInTitle=\"Joueur 1\"\n                enterValidation={(e) => pseudoValidate(e, 1)}\n                inputValidationError={inputP1ValidationError}\n                updatePseudo={updatePseudo}\n              />\n            </div>\n          ) : (\n            <div\n              className={\n                animationOnPseudoP1Validation\n                  ? `${mc.player1_class_selection} ${mc.animate_fade_in}`\n                  : `${mc.player1_class_selection} ${mc.animate_opacity}`\n              }\n            >\n              <ClassSelection\n                pseudo={player1.pseudo}\n                onEditPseudoClick={() => onEditPseudoClick(1)}\n                onEditClassClick={() => onEditClassClick(1)}\n                onClickplayerClassSelection={(selectedClass) =>\n                  onClickplayerClassSelection(1, selectedClass)\n                }\n                onClassButtonSelectionClick={classSelectedP1} //true switch the buttons classes list to a span class name\n                classPlayerChoice={player1.playerClass.className}\n                classColor={player1.playerClass.color}\n                animationOnClassValidation={animationOnClassP1Validation} //true launch the animation.\n              />\n            </div>\n          )}\n        </div>\n        {playersReady && (\n          <div\n            className={\n              !animationFightingButton\n                ? `${mc.fighting_button} ${mc.animate_opacity}`\n                : `${mc.fighting_button} ${mc.animate_fade_in}`\n            }\n          >\n            <FightingButton onFightStartButtonClick={onFightStartButtonClick} />\n          </div>\n        )}\n\n        <div className={mc.player2}>\n          {!pseudoSelectedP2 ? (\n            <div\n              className={\n                !animationOnPseudoP2Validation\n                  ? `${mc.player2_pseudo} ${mc.animate_fade_in}`\n                  : `${mc.player2_pseudo} ${mc.animate_opacity}`\n              }\n            >\n              <PseudoInputs\n                inputValue={player2.pseudo}\n                player=\"player2\"\n                pseudoInTitle=\"Joueur 2\"\n                enterValidation={(e) => pseudoValidate(e, 2)}\n                inputValidationError={inputP2ValidationError}\n                updatePseudo={updatePseudo}\n              />\n            </div>\n          ) : (\n            <div\n              className={\n                animationOnPseudoP2Validation\n                  ? `${mc.player2_class_selection} ${mc.animate_fade_in}`\n                  : `${mc.player2_class_selection} ${mc.animate_opacity}`\n              }\n            >\n              <ClassSelection\n                pseudo={player2.pseudo}\n                onEditPseudoClick={() => onEditPseudoClick(2)}\n                onEditClassClick={() => onEditClassClick(2)}\n                onClickplayerClassSelection={(selectedClass) =>\n                  onClickplayerClassSelection(2, selectedClass)\n                }\n                onClassButtonSelectionClick={classSelectedP2} //true switch the buttons classes list to a span class name\n                classPlayerChoice={player2.playerClass.className}\n                classColor={player2.playerClass.color}\n                animationOnClassValidation={animationOnClassP2Validation} //true launch the animation.\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayersMenu;\n","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/reducers/windowSize.js",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/mdj-scene/MdjScene.jsx",["235","236","237","238","239"],[],"import mc from \"./mdj-scene.module.scss\";\n//images//\nimport mdjImg from \"../../../images/Mdj.png\";\n\nconst MdjScene = ({\n  player1,\n  player2,\n  attacker,\n  defender,\n  string,\n  playerActionStatus,\n}) => {\n  return (\n    <div className={mc.container}>\n      <div\n        className={\n          playerActionStatus === \"hit\" ||\n          playerActionStatus === \"potionNok\" ||\n          playerActionStatus === \"potionOk\" ||\n          playerActionStatus === \"defense\" ||\n          playerActionStatus === \"counterAttack\" ||\n          playerActionStatus === \"stun\"\n            ? `${mc.mdj_position} adaptive-img-contain ${mc.mdj_position_laugh}`\n            : playerActionStatus === \"fail\" ||\n              playerActionStatus === \"potionZero\" ||\n              playerActionStatus === \"alreadyDefense\" ||\n              playerActionStatus === \"theft\"\n            ? `${mc.mdj_position} adaptive-img-contain ${mc.mdj_position_angry}`\n            : `${mc.mdj_position} adaptive-img-contain`\n        }\n      >\n        <span>\n          <img src={mdjImg} alt=\"Image du maître de jeu\" draggable=\"false\" />\n        </span>\n      </div>\n\n      <div className={mc.mdj_dialogs}>\n        <p>\n          {string.split(\" \").map((el, i) => {\n            if (el === \"${player1}\") {\n              return (\n                <span\n                  className={mc.player}\n                  key={i}\n                  style={{\n                    animationDelay: `${i * 0.1}s`,\n                    \"--classColor\": `${player1.playerClass.color}`,\n                  }}\n                >\n                  {player1.pseudo.toUpperCase()}\n                </span>\n              );\n            } else if (el === \"${player2}\") {\n              return (\n                <span\n                  className={mc.player}\n                  key={i}\n                  style={{\n                    animationDelay: `${i * 0.1}s`,\n                    \"--classColor\": `${player2.playerClass.color}`,\n                  }}\n                >\n                  {player2.pseudo.toUpperCase()}\n                </span>\n              );\n            } else if (el === \"${attacker}\") {\n              return (\n                <span\n                  className={mc.player}\n                  key={i}\n                  style={{\n                    animationDelay: `${i * 0.1}s`,\n                    \"--classColor\": `${attacker.playerClass.color}`,\n                  }}\n                >\n                  {attacker.pseudo.toUpperCase()}\n                </span>\n              );\n            } else if (el === \"${defender}\") {\n              return (\n                <span\n                  className={mc.player}\n                  key={i}\n                  style={{\n                    animationDelay: `${i * 0.1}s`,\n                    \"--classColor\": `${defender.playerClass.color}`,\n                  }}\n                >\n                  {defender.pseudo.toUpperCase()}\n                </span>\n              );\n            } else {\n              return (\n                <span\n                  key={i}\n                  style={{\n                    animationDelay: `${i * 0.1}s`,\n                  }}\n                >\n                  {el}\n                </span>\n              );\n            }\n          })}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default MdjScene;\n","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/fight-player-menu/FightPlayerMenu.jsx",["240","241","242","243","244","245"],[],"import mc from \"./fight-player-menu.module.scss\";\nimport { useEffect, useState } from \"react\";\n//images//\nimport rogueImgP1 from \"../../../images/rogueImgP1.png\";\nimport mageImgP1 from \"../../../images/mageImgP1.png\";\nimport warriorImgP1 from \"../../../images/warriorImgP1.png\";\nimport rogueImgP2 from \"../../../images/rogueImgP2.png\";\nimport mageImgP2 from \"../../../images/mageImgP2.png\";\nimport warriorImgP2 from \"../../../images/warriorImgP2.png\";\n//images fight icons//\n//attacks//\nimport mageAtk from \"../../../images/atks/mageAtk.jpeg\";\nimport rogueAtk from \"../../../images/atks/rogueAtk.jpeg\";\nimport warriorAtk from \"../../../images/atks/warriorAtk.jpeg\";\n//defense//\nimport shield from \"../../../images/atks/shield.jpeg\";\n//utltims//\nimport mageUltim from \"../../../images/atks/mageFreeze.jpeg\";\nimport rogueUltim from \"../../../images/atks/pickpocketRogue.jpeg\";\nimport warriorUltim from \"../../../images/atks/warriorStun.jpeg\";\n//potions//\nimport potion from \"../../../images/atks/potion.jpeg\";\n\nconst FightPlayerMenu = ({\n  windowWidth,\n  playerNumber,\n  player,\n  onAttackClick,\n  onDefenseClick,\n  onUltimClick,\n  onPotionClick,\n  round,\n  playerTakeDmg,\n  playerDodge,\n  playerTakePotion,\n  playerStunned,\n}) => {\n  const [img, setImg] = useState();\n\n  useEffect(() => {\n    if (playerNumber === 1) {\n      if (player.playerClass.className === \"voleur\") {\n        setImg(rogueImgP1);\n      } else if (player.playerClass.className === \"mage\") {\n        setImg(mageImgP1);\n      } else {\n        setImg(warriorImgP1);\n      }\n    } else if (playerNumber === 2) {\n      if (player.playerClass.className === \"voleur\") {\n        setImg(rogueImgP2);\n      } else if (player.playerClass.className === \"mage\") {\n        setImg(mageImgP2);\n      } else {\n        setImg(warriorImgP2);\n      }\n    }\n  }, [\n    playerNumber,\n    player,\n    rogueImgP1,\n    mageImgP1,\n    warriorImgP1,\n    rogueImgP2,\n    mageImgP2,\n    warriorImgP2,\n  ]);\n\n  return (\n    <div className={mc.container}>\n      <div className={mc.player_menu}>\n        <div>\n          <button\n            className={mc.attack}\n            onClick={() => onAttackClick(playerNumber)}\n          >\n            {windowWidth > 500 && (\n              <span className={mc.tooltip_content}>\n                Inflige des dégâts MODÉRÉS à votre adversaire\n              </span>\n            )}\n            <img\n              className={round ? \"\" : `${mc.low_opacity}`}\n              src={\n                player.playerClass.className === \"voleur\"\n                  ? rogueAtk\n                  : player.playerClass.className === \"mage\"\n                  ? mageAtk\n                  : warriorAtk\n              }\n              alt={`{image ${player.playerClass.className}`}\n              draggable=\"false\"\n            />\n          </button>\n\n          <button\n            className={\n              player.playerClass.onDef\n                ? `${mc.defense} ${mc.defense_low_opacity}`\n                : mc.defense\n            }\n            onClick={() => onDefenseClick(playerNumber)}\n          >\n            {windowWidth > 500 && (\n              <span className={mc.tooltip_content}>\n                Augmente vos chances d'ESQUIVER la prochaine attaque et une\n                FAIBLE chance de contre-attaquer en infligeant d'IMPORTANTS\n                dégâts. (DURÉE=1TOUR)\n              </span>\n            )}\n            <img\n              className={round ? \"\" : `${mc.low_opacity}`}\n              src={shield}\n              alt=\"image d'un bouclier\"\n              draggable=\"false\"\n            />\n          </button>\n\n          <button\n            className={\n              player.playerClass.ultimUp\n                ? mc.ultim\n                : `${mc.ultim} ${mc.ultim_low_opacity}`\n            }\n            onClick={() => onUltimClick(playerNumber)}\n          >\n            {player.playerClass.ultimUp && (\n              <span className={mc.tooltip_content}>\n                {`${\n                  player.playerClass.className === \"voleur\"\n                    ? player.playerClass.ultimUp\n                      ? \"A une grande chance de voler une POTION à votre adversaire (s'il en possède au moins 1) (1 CHARGE)\"\n                      : \"Indisponible\"\n                    : player.playerClass.className === \"mage\"\n                    ? player.playerClass.ultimUp\n                      ? \"A une grande chance de geler votre adversaire, d'infliger des dégâts FAIBLES et l'empêcher de jouer pendant 1 TOURS. (1 CHARGE)\"\n                      : \"Indisponible\"\n                    : player.playerClass.ultimUp\n                    ? \"A une grande chance d'assomer votre adversaire, d'infliger des dégâts FAIBLES et l'empêcher de jouer pendant 1 TOURS. (1 CHARGE)\"\n                    : \"Indisponible\"\n                }`}\n              </span>\n            )}\n\n            <img\n              className={round ? \"\" : `${mc.low_opacity}`}\n              src={\n                player.playerClass.className === \"voleur\"\n                  ? rogueUltim\n                  : player.playerClass.className === \"mage\"\n                  ? mageUltim\n                  : warriorUltim\n              }\n              alt=\"image d'une potion de soin\"\n              draggable=\"false\"\n            />\n          </button>\n\n          <button\n            className={mc.potion}\n            onClick={() => onPotionClick(playerNumber)}\n          >\n            {windowWidth > 500 && (\n              <span className={mc.tooltip_content}>\n                Rend entre 10% et 20% points de vies\n              </span>\n            )}\n            <img\n              className={round ? \"\" : `${mc.low_opacity}`}\n              src={potion}\n              alt=\"image d'une potion de soin\"\n              draggable=\"false\"\n            />\n\n            <span\n              className={\n                round\n                  ? `${mc.potions_counter}`\n                  : `${mc.potions_counter} ${mc.low_opacity} `\n              }\n            >\n              {player.playerClass.potions}\n            </span>\n          </button>\n        </div>\n      </div>\n\n      <div\n        className={\n          playerTakeDmg\n            ? `${mc.player_character} adaptive-img-contain ${mc.player_character_take_it}`\n            : playerDodge\n            ? playerNumber === 1\n              ? `${mc.player_character} adaptive-img-contain ${mc.player1_character_dodge}`\n              : `${mc.player_character} adaptive-img-contain ${mc.player2_character_dodge}`\n            : playerTakePotion\n            ? `${mc.player_character} adaptive-img-contain ${mc.player_character_take_potion}`\n            : `${mc.player_character} adaptive-img-contain`\n        }\n      >\n        <span>\n          <img\n            src={img}\n            alt={`{image ${player.playerClass.className}`}\n            draggable=\"false\"\n          />\n        </span>\n        {playerStunned && <div className={mc.sleeping}>ZzZzZ</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default FightPlayerMenu;\n","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/fight/Fight.jsx",["246"],[],"import mc from \"./fight.module.scss\";\n//components//\nimport FightPlayerMenu from \"../fight-player-menu/FightPlayerMenu\";\nimport LogsMenu from \"../logsMenu/LogsMenu\";\n\nconst Fight = ({\n  windowWidth,\n  player1,\n  player2,\n  logs,\n  onAttackClickP1,\n  onDefenseClickP1,\n  onUltimClickP1,\n  onPotionClickP1,\n  onAttackClickP2,\n  onDefenseClickP2,\n  onUltimClickP2,\n  onPotionClickP2,\n  round,\n  attacker,\n  playerActionStatus,\n}) => {\n  return (\n    <div className={mc.container}>\n      <div className={mc.player1}>\n        <FightPlayerMenu\n          windowWidth={windowWidth}\n          playerNumber={1}\n          player={player1}\n          onAttackClick={onAttackClickP1}\n          onDefenseClick={onDefenseClickP1}\n          onUltimClick={onUltimClickP1}\n          onPotionClick={onPotionClickP1}\n          round={round > 0 && round % 2 === 1}\n          playerTakeDmg={\n            (round > 0 &&\n              round % 2 === 0 &&\n              attacker === \"player2\" &&\n              (playerActionStatus === \"hit\" ||\n                playerActionStatus === \"stun\")) ||\n            (round > 0 &&\n              round % 2 === 1 &&\n              attacker === \"player1\" &&\n              playerActionStatus === \"counterAttack\")\n          }\n          playerDodge={\n            round > 0 &&\n            round % 2 === 0 &&\n            attacker === \"player2\" &&\n            (playerActionStatus === \"fail\" ||\n              playerActionStatus === \"counterAttack\")\n          }\n          playerStunned={\n            round > 0 &&\n            round % 2 === 0 &&\n            attacker === \"player2\" &&\n            playerActionStatus === \"stun\"\n          }\n          playerTakePotion={\n            round > 0 &&\n            round % 2 === 1 &&\n            attacker === \"player1\" &&\n            playerActionStatus === \"potionOk\"\n          }\n        />\n      </div>\n      {/* <div className={mc.logs}>\n        <LogsMenu logs={logs} player1={player1} player2={player2} />\n      </div> */}\n      <div className={mc.player2}>\n        <FightPlayerMenu\n          windowWidth={windowWidth}\n          playerNumber={2}\n          player={player2}\n          onAttackClick={onAttackClickP2}\n          onDefenseClick={onDefenseClickP2}\n          onUltimClick={onUltimClickP2}\n          onPotionClick={onPotionClickP2}\n          round={round > 0 && round % 2 === 0}\n          playerTakeDmg={\n            (round > 0 &&\n              round % 2 === 1 &&\n              attacker === \"player1\" &&\n              (playerActionStatus === \"hit\" ||\n                playerActionStatus === \"stun\")) ||\n            (round > 0 &&\n              round % 2 === 0 &&\n              attacker === \"player2\" &&\n              playerActionStatus === \"counterAttack\")\n          }\n          playerDodge={\n            round % 2 === 1 &&\n            attacker === \"player1\" &&\n            (playerActionStatus === \"fail\" ||\n              playerActionStatus === \"counterAttack\")\n          }\n          playerStunned={\n            round > 0 &&\n            round % 2 === 1 &&\n            attacker === \"player1\" &&\n            playerActionStatus === \"stun\"\n          }\n          playerTakePotion={\n            round > 0 &&\n            round % 2 === 0 &&\n            attacker === \"player2\" &&\n            playerActionStatus === \"potionOk\"\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Fight;\n","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/logsMenu/LogsMenu.jsx",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/redux/reducers/fight.js",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/tv/Tv.jsx",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/constants/mdj.js",["247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274"],[],"export const mdjWelcome = [\n  \"Bienvenue dans l'arène ${player1} et ${player2} ! Je m'apelle Merlin SIMPA. Comme mon nom vous l'indique, je serai votre sympathique guide lors de ce combat à mort ! Cliquez au dessus pour commencer.\",\n  \"Bienvenue dans l'arène ${player1} et ${player2} ! Je suis Merlin SIMPA. Je serai votre maître du jeu aujourd'hui. Comptez sur moi pour vous prodiguer conseils et encouragements ! Cliquez au dessus pour commencer.\",\n];\n\nexport const mdjFightWillStart = \"Que le combat commence !\";\n\nexport const mdjTauntAttacker = [\n  \"${attacker} rate sa cible, il devrait peut-être passer chez l'ophtalmo !\",\n  \"${attacker} manque sa cible, il manquerait une vache dans un tout petit couloir avec un énorme bazooka !\",\n  \"${attacker} rate sa cible, ${defender} est aussi agile qu'un chat ! Ou ${attacker} est vraiment mauvais, je vous laisse en juger.\",\n  \"${attacker} rate sa cible, ${attacker} devrait peut-être se repprocher un peu de sa cible, on aurait une chance de voir un vrai combat...\",\n];\n\nexport const mdjTauntDefender = [\n  \"Outch ! ${defender} encaisse ce coup. ${defender} est lent... Oui ${defender} tu es lent ! Cette appli est superbement bien optimisée, il n'y a aucun lags ici !!\",\n  \"L'attaque de ${attacker} était vraiment téléphonée, comment ${defender} peut ne pas esquiver ça...\",\n  \"${defender} prend ce coup de plein fouet ! Hey ${defender} on se réveille, même ma grand mère l'aurait esquivée celle là !!!\",\n  \"${defender} pare magnifiquement cette attaque ! ... avec sa tête ...\",\n];\n\nexport const mdjPotionOk = [\n  \"Hey ! Une potion?! C'est de la triche ça !!\",\n  \"Je crois bien que ${attacker} se dope...\",\n  \"Voilà que ${attacker} se soigne... Comme si ${defender} était pas assez mauvais !\",\n];\n\nexport const mdjPotionNok = [\n  \"Tu essayes de soigner quoi là? Ta bêtise? C'est pas le bon remède.\",\n  \"Je comprends maintenant pourquoi ${attacker} est un si mauvais combattant... Il est aveugle. TES POINTS DE VIE SONT COMPLETS !!!\",\n  \"300PV/300PV... hey ${attacker} faut arrêter d'enfoncer le coton tige quand tu sents que ça résiste !\",\n];\n\nexport const mdjNoMorePotion = [\n  \"C'est vide ! Vide ! Zéro ! NADA ! NICHTS ! NOTHING MOOOOOORE !!!\",\n  \"Plus de potion, c'est marqué dessus... Tu me fatigues ${attacker} ...\",\n  \"ZÉRO !! Y A MARQUÉ ZÉRO POTION !! Hey ${attacker} je comprends pourquoi t'en touches pas une !\",\n];\n\nexport const mdjDefense = [\n  \"${attacker} se met en garde... Comme si ${defender} représentait un réel danger ! AHAHAHA\",\n  \"Déjà que ${defender} en touche pas une, ça va pas s'améliorer...\",\n  \"Ce combat devient de plus en plus passionnant... ... BATTEZ VOUS OU JE ME BARRE !!\",\n];\n\nexport const mdjAlreadyDef = [\n  \"${attacker} t'as déjà du mal avec un, maintenant tu voudrais porter 2 bouclier ?\",\n  \"Et tu vas le mettre où ce deuxième bouclier ?... ... Je suis fatigué.\",\n  \"2 boucliers ?!! ET BIEN NON JE NE L'AUTORISE PAS, ce combat est déjà assez long comme ça, j'aimerai aller me vautrer dans mon canapé, alors attaque et vite !!!\",\n];\n\nexport const mdjCounterAttack = [\n  \"${defender} se rebiffe ! Tu l'as pas vu venir celle là ${attacker}\",\n  \"Hey ${defender} triche ! C'est pas son tour d'attaquer ! Appelez l'admin !!\",\n  \"Mais... C'était pas à ${attacker} d'attaquer? Je comprends plus rien à ce combat.\",\n  \"Il se contente de lever son bouclier maintenant, c'est vraiment un combat passionnant...\",\n];\n\nexport const mdjStun = [\n  \"Hey mais pourquoi ${attacker} joue deux fois d'affilés ?!!\",\n  \"Est ce que ${defender} dort? Il a loupé son tour !\",\n  \"${attacker} triche c'est pas à ton tour de jouer là !\",\n];\n\nexport const mdjTheft = [\n  \"AU VOLEUR !! Ah oui, c'est un voleur...\",\n  \"${attacker} vient de faire les poches à ${defender} non?!\",\n  \"Les potions c'est pour les faibles, battez vous !\",\n];\n\nexport const mdjNothingToSteal = [\n  \"Il a plus de potions... T'essayes de lui voler quoi là? Son talent?\",\n  \"${defender} n'a plus de potions, pas plus qu'il n'a de talent !\",\n  \"${attacker} essaye de voler.... RIEN ! Il a plus rien laisse tomber !\",\n];\n","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/utils/getRandom.js",[],[],"/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/tutoriel/Tutoriel.jsx",["275","276","277","278","279","280","281","282"],[],"import mc from \"./tutoriel.module.scss\";\nimport { useEffect, useState } from \"react\";\nimport { tutorielWelcome } from \"../../../constants/tutoriel\";\nimport { tutoriel1 } from \"../../../constants/tutoriel\";\nimport { tutoriel2Title } from \"../../../constants/tutoriel\";\nimport { tutoriel2_1 } from \"../../../constants/tutoriel\";\nimport { tutoriel2_2 } from \"../../../constants/tutoriel\";\nimport { tutoriel3Title } from \"../../../constants/tutoriel\";\nimport { tutoriel3_1 } from \"../../../constants/tutoriel\";\n\nconst Tutoriel = ({ player1, player2, closeTutoriel, animation }) => {\n  const [animTitle, setAnimTitle] = useState(false);\n  const [animTutoriel1, setAnimTutoriel1] = useState(false);\n  const [animTutoriel2Title, setAnimTutoriel2title] = useState(false);\n  const [animTutoriel2_1, setAnimTutoriel2_1] = useState(false);\n  const [animTutoriel2_2, setAnimTutoriel2_2] = useState(false);\n  const [animTutoriel3Title, setAnimTutoriel3title] = useState(false);\n  const [animTutoriel3_1, setAnimTutoriel3_1] = useState(false);\n  const [opacity, setOpacity] = useState(0);\n  const [transition, setTransiton] = useState(0.1);\n  const [swapTestButtonHide, setSwapTextButtonHide] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setAnimTitle(true);\n    }, 500);\n    setTimeout(() => {\n      setAnimTutoriel1(true);\n    }, 1000);\n    setTimeout(() => {\n      setAnimTutoriel2title(true);\n    }, 3800);\n    setTimeout(() => {\n      setAnimTutoriel2_1(true);\n    }, 4500);\n    setTimeout(() => {\n      setAnimTutoriel2_2(true);\n    }, 9000);\n    setTimeout(() => {\n      setAnimTutoriel3title(true);\n    }, 17000);\n    setTimeout(() => {\n      setAnimTutoriel3_1(true);\n    }, 13000);\n    setTimeout(() => {\n      setSwapTextButtonHide(true);\n    }, 17500);\n  }, []);\n\n  const stopTextDisplayAnimation = () => {\n    setOpacity(1);\n    setTransiton(0);\n    setAnimTutoriel1(true);\n    setAnimTutoriel2title(true);\n    setAnimTutoriel2_1(true);\n    setAnimTutoriel2_2(true);\n    setAnimTutoriel3title(true);\n    setAnimTutoriel3_1(true);\n    setSwapTextButtonHide(true);\n  };\n\n  return (\n    <div\n      className={\n        animation\n          ? `${mc.container} ${mc.container_hide}`\n          : `${mc.container} ${mc.container_show}`\n      }\n    >\n      {animTitle && (\n        <div className={mc.title}>\n          {tutorielWelcome.split(\" \").map((el, i) => {\n            if (el === \"${player1}\") {\n              return (\n                <h3 key={i}>\n                  <span\n                    style={{\n                      animationDelay: `${i * transition}s`,\n                      color: `${player1.playerClass.color}`,\n                      \"--opacity\": opacity,\n                    }}\n                  >\n                    {player1.pseudo.toUpperCase()}\n                  </span>\n                </h3>\n              );\n            } else if (el === \"${player2}\") {\n              return (\n                <h3 key={i}>\n                  <span\n                    style={{\n                      animationDelay: `${i * transition}s`,\n                      color: `${player2.playerClass.color}`,\n                      \"--opacity\": opacity,\n                    }}\n                  >\n                    {player2.pseudo.toUpperCase()}\n                  </span>\n                </h3>\n              );\n            } else {\n              return (\n                <h3 key={i}>\n                  <span\n                    style={{\n                      animationDelay: `${i * transition}s`,\n                      \"--opacity\": opacity,\n                    }}\n                  >\n                    {el}\n                  </span>\n                </h3>\n              );\n            }\n          })}\n        </div>\n      )}\n      <div className={mc.tutoriel_content}>\n        {animTutoriel1 && (\n          <div className={mc.tutoriel_intro}>\n            {tutoriel1.split(\" \").map((el, i) => {\n              return (\n                <p key={i}>\n                  <span\n                    style={{\n                      animationDelay: `${i * transition}s`,\n                      \"--opacity\": opacity,\n                    }}\n                  >\n                    {el}\n                  </span>\n                </p>\n              );\n            })}\n          </div>\n        )}\n        <div className={mc.tutoriel_dices}>\n          {animTutoriel2Title && (\n            <div className={mc.tutoriel_dices_title}>\n              {tutoriel2Title.split(\" \").map((el, i) => {\n                return (\n                  <h3 key={i}>\n                    <span\n                      style={{\n                        animationDelay: `${i * transition}s`,\n                        \"--opacity\": opacity,\n                      }}\n                    >\n                      {el}\n                    </span>\n                  </h3>\n                );\n              })}\n            </div>\n          )}\n          {animTutoriel2_1 && (\n            <div>\n              {tutoriel2_1.split(\" \").map((el, i) => {\n                return (\n                  <p key={i}>\n                    <span\n                      style={{\n                        animationDelay: `${i * transition}s`,\n                        \"--opacity\": opacity,\n                      }}\n                    >\n                      {el}\n                    </span>\n                  </p>\n                );\n              })}\n            </div>\n          )}\n          {animTutoriel2_2 && (\n            <div>\n              {tutoriel2_2.split(\" \").map((el, i) => {\n                if (el === \"${dés20}\") {\n                  return (\n                    <p key={i}>\n                      <span\n                        style={{\n                          animationDelay: `${i * transition}s`,\n                          \"--opacity\": opacity,\n                        }}\n                        className={mc.des}\n                      >\n                        {\"DÉS 20\"}\n                      </span>\n                    </p>\n                  );\n                } else if (el === \"${dés8}\") {\n                  return (\n                    <p key={i}>\n                      <span\n                        style={{\n                          animationDelay: `${i * transition}s`,\n                          \"--opacity\": opacity,\n                        }}\n                        className={mc.des}\n                      >\n                        {\"DÉS 8\"}\n                      </span>\n                    </p>\n                  );\n                } else {\n                  return (\n                    <p key={i}>\n                      <span\n                        style={{\n                          animationDelay: `${i * transition}s`,\n                          \"--opacity\": opacity,\n                        }}\n                      >\n                        {el}\n                      </span>\n                    </p>\n                  );\n                }\n              })}\n            </div>\n          )}\n        </div>\n        <div className={mc.tutoriel_actions}>\n          {animTutoriel3Title && (\n            <div className={mc.tutoriel_actions_title}>\n              {tutoriel3Title.split(\" \").map((el, i) => {\n                return (\n                  <h3 key={i}>\n                    <span\n                      style={{\n                        animationDelay: `${i * transition}s`,\n                        \"--opacity\": opacity,\n                      }}\n                    >\n                      {el}\n                    </span>\n                  </h3>\n                );\n              })}\n            </div>\n          )}\n          {animTutoriel3_1 && (\n            <div>\n              {tutoriel3_1.split(\" \").map((el, i) => {\n                if (el === \"${faibles},\") {\n                  return (\n                    <p key={i}>\n                      <span\n                        className={mc.faibles}\n                        style={{\n                          animationDelay: `${i * transition}s`,\n                          \"--opacity\": opacity,\n                        }}\n                      >\n                        faibles,\n                      </span>\n                    </p>\n                  );\n                } else if (el === \"${modérés}\") {\n                  return (\n                    <p key={i}>\n                      <span\n                        className={mc.moderes}\n                        style={{\n                          animationDelay: `${i * transition}s`,\n                          \"--opacity\": opacity,\n                        }}\n                      >\n                        modérés\n                      </span>\n                    </p>\n                  );\n                } else if (el === \"${importants}.\") {\n                  return (\n                    <p key={i}>\n                      <span\n                        className={mc.importants}\n                        style={{\n                          animationDelay: `${i * transition}s`,\n                          \"--opacity\": opacity,\n                        }}\n                      >\n                        importants.\n                      </span>\n                    </p>\n                  );\n                } else if (el === \"${dés8}\") {\n                  return (\n                    <p key={i}>\n                      <span\n                        className={mc.des}\n                        style={{\n                          animationDelay: `${i * transition}s`,\n                          \"--opacity\": opacity,\n                        }}\n                      >\n                        DÉS 8\n                      </span>\n                    </p>\n                  );\n                } else {\n                  return (\n                    <p key={i}>\n                      <span\n                        style={{\n                          animationDelay: `${i * transition}s`,\n                          \"--opacity\": opacity,\n                        }}\n                      >\n                        {el}\n                      </span>\n                    </p>\n                  );\n                }\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div\n        className={\n          !swapTestButtonHide\n            ? mc.stop_animation_button\n            : `${mc.stop_animation_button} ${mc.stop_animation_button_hidden}`\n        }\n      >\n        <button onClick={stopTextDisplayAnimation}>Passer</button>\n      </div>\n\n      <div className={mc.confirmation}>\n        <button onClick={closeTutoriel}>OK</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Tutoriel;\n","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/constants/tutoriel.js",["283","284","285"],[],"export const tutorielWelcome = \"Bienvenue ${player1} et ${player2}\";\nexport const tutoriel1 =\n  \"Le jeu fonctionne sur le même principe que les jeux de rôle papier. Chaque action que votre avatar effectuera dépendra de jets de dés.\";\nexport const tutoriel2Title = \"LES DÉS\";\nexport const tutoriel2_1 =\n  \"Dans un premier temps, lorsque vous sélectionnerez une action, un dés à 20 faces sera lancé, il déterminera la réussite ou l'échec de l'action en question. En cas d'échec, votre adversaire esquivera l'attaque. Le score à atteindre est masqué et dépend de l'agilité de votre adversaire.\";\nexport const tutoriel2_2 =\n  \"Dans un second temps, si le jet du ${dés20} est favorable, un jet de plusieurs ${dés8} (dont le nombre est masqué) déterminera le bonus de puissance ajouté à votre attaque.\";\nexport const tutoriel3Title = \"LES ACTIONS\";\nexport const tutoriel3_1 =\n  \"Il existe pour chaque classe, 4 types d'action. ATTAQUE, DÉFENSE, ULTIME et POTIONS. Pour chaque action le bonus de dégâts est indiqué comme suit, ${faibles}, ${modérés} ou ${importants}. C'est le nombre de ${dés8} lancés qui variera déterminant le bonus de dégâts supplémentaire.\";\n","/Users/nicolasgrenier/Documents/Code/fighting_RPG/src/components/fight-scene-elements/winner/Winner.jsx",[],[],{"ruleId":"286","severity":2,"message":"287","line":1,"column":1,"nodeType":"288","messageId":"289","endLine":1,"endColumn":4},{"ruleId":"290","severity":2,"message":"291","line":1,"column":1,"nodeType":"292","messageId":"293","endLine":1,"endColumn":4},{"ruleId":"294","severity":1,"message":"295","line":2,"column":9,"nodeType":"292","messageId":"296","endLine":2,"endColumn":14},{"ruleId":"294","severity":1,"message":"297","line":5,"column":12,"nodeType":"292","messageId":"296","endLine":5,"endColumn":27},{"ruleId":"294","severity":1,"message":"295","line":2,"column":9,"nodeType":"292","messageId":"296","endLine":2,"endColumn":14},{"ruleId":"298","severity":1,"message":"299","line":17,"column":6,"nodeType":"300","endLine":17,"endColumn":8,"suggestions":"301"},{"ruleId":"298","severity":1,"message":"302","line":36,"column":6,"nodeType":"300","endLine":36,"endColumn":8,"suggestions":"303"},{"ruleId":"298","severity":1,"message":"299","line":45,"column":6,"nodeType":"300","endLine":45,"endColumn":8,"suggestions":"304"},{"ruleId":"298","severity":1,"message":"305","line":64,"column":6,"nodeType":"300","endLine":64,"endColumn":8,"suggestions":"306"},{"ruleId":"294","severity":1,"message":"295","line":2,"column":9,"nodeType":"292","messageId":"296","endLine":2,"endColumn":14},{"ruleId":"307","severity":1,"message":"308","line":79,"column":5,"nodeType":"309","messageId":"310","endLine":91,"endColumn":6},{"ruleId":"298","severity":1,"message":"299","line":87,"column":6,"nodeType":"300","endLine":87,"endColumn":24,"suggestions":"311"},{"ruleId":"298","severity":1,"message":"312","line":137,"column":6,"nodeType":"300","endLine":143,"endColumn":4,"suggestions":"313"},{"ruleId":"314","severity":1,"message":"315","line":33,"column":11,"nodeType":"316","endLine":33,"endColumn":78},{"ruleId":"317","severity":1,"message":"318","line":40,"column":24,"nodeType":"319","messageId":"320","endLine":40,"endColumn":36},{"ruleId":"317","severity":1,"message":"318","line":53,"column":31,"nodeType":"319","messageId":"320","endLine":53,"endColumn":43},{"ruleId":"317","severity":1,"message":"318","line":66,"column":31,"nodeType":"319","messageId":"320","endLine":66,"endColumn":44},{"ruleId":"317","severity":1,"message":"318","line":79,"column":31,"nodeType":"319","messageId":"320","endLine":79,"endColumn":44},{"ruleId":"298","severity":1,"message":"321","line":58,"column":6,"nodeType":"300","endLine":67,"endColumn":4,"suggestions":"322"},{"ruleId":"314","severity":1,"message":"315","line":82,"column":13,"nodeType":"316","endLine":93,"endColumn":15},{"ruleId":"314","severity":1,"message":"315","line":111,"column":13,"nodeType":"316","endLine":116,"endColumn":15},{"ruleId":"314","severity":1,"message":"315","line":145,"column":13,"nodeType":"316","endLine":156,"endColumn":15},{"ruleId":"314","severity":1,"message":"315","line":168,"column":13,"nodeType":"316","endLine":173,"endColumn":15},{"ruleId":"314","severity":1,"message":"315","line":202,"column":11,"nodeType":"316","endLine":206,"endColumn":13},{"ruleId":"294","severity":1,"message":"323","line":4,"column":8,"nodeType":"292","messageId":"296","endLine":4,"endColumn":16},{"ruleId":"317","severity":1,"message":"318","line":2,"column":3,"nodeType":"319","messageId":"320","endLine":2,"endColumn":204},{"ruleId":"317","severity":1,"message":"318","line":3,"column":3,"nodeType":"319","messageId":"320","endLine":3,"endColumn":217},{"ruleId":"317","severity":1,"message":"318","line":9,"column":3,"nodeType":"319","messageId":"320","endLine":9,"endColumn":77},{"ruleId":"317","severity":1,"message":"318","line":10,"column":3,"nodeType":"319","messageId":"320","endLine":10,"endColumn":109},{"ruleId":"317","severity":1,"message":"318","line":11,"column":3,"nodeType":"319","messageId":"320","endLine":11,"endColumn":134},{"ruleId":"317","severity":1,"message":"318","line":12,"column":3,"nodeType":"319","messageId":"320","endLine":12,"endColumn":142},{"ruleId":"317","severity":1,"message":"318","line":16,"column":3,"nodeType":"319","messageId":"320","endLine":16,"endColumn":166},{"ruleId":"317","severity":1,"message":"318","line":17,"column":3,"nodeType":"319","messageId":"320","endLine":17,"endColumn":103},{"ruleId":"317","severity":1,"message":"318","line":18,"column":3,"nodeType":"319","messageId":"320","endLine":18,"endColumn":129},{"ruleId":"317","severity":1,"message":"318","line":19,"column":3,"nodeType":"319","messageId":"320","endLine":19,"endColumn":73},{"ruleId":"317","severity":1,"message":"318","line":24,"column":3,"nodeType":"319","messageId":"320","endLine":24,"endColumn":45},{"ruleId":"317","severity":1,"message":"318","line":25,"column":3,"nodeType":"319","messageId":"320","endLine":25,"endColumn":86},{"ruleId":"317","severity":1,"message":"318","line":30,"column":3,"nodeType":"319","messageId":"320","endLine":30,"endColumn":133},{"ruleId":"317","severity":1,"message":"318","line":31,"column":3,"nodeType":"319","messageId":"320","endLine":31,"endColumn":105},{"ruleId":"317","severity":1,"message":"318","line":36,"column":3,"nodeType":"319","messageId":"320","endLine":36,"endColumn":74},{"ruleId":"317","severity":1,"message":"318","line":37,"column":3,"nodeType":"319","messageId":"320","endLine":37,"endColumn":99},{"ruleId":"317","severity":1,"message":"318","line":41,"column":3,"nodeType":"319","messageId":"320","endLine":41,"endColumn":94},{"ruleId":"317","severity":1,"message":"318","line":42,"column":3,"nodeType":"319","messageId":"320","endLine":42,"endColumn":69},{"ruleId":"317","severity":1,"message":"318","line":47,"column":3,"nodeType":"319","messageId":"320","endLine":47,"endColumn":85},{"ruleId":"317","severity":1,"message":"318","line":53,"column":3,"nodeType":"319","messageId":"320","endLine":53,"endColumn":71},{"ruleId":"317","severity":1,"message":"318","line":54,"column":3,"nodeType":"319","messageId":"320","endLine":54,"endColumn":80},{"ruleId":"317","severity":1,"message":"318","line":55,"column":3,"nodeType":"319","messageId":"320","endLine":55,"endColumn":86},{"ruleId":"317","severity":1,"message":"318","line":60,"column":3,"nodeType":"319","messageId":"320","endLine":60,"endColumn":63},{"ruleId":"317","severity":1,"message":"318","line":61,"column":3,"nodeType":"319","messageId":"320","endLine":61,"endColumn":55},{"ruleId":"317","severity":1,"message":"318","line":62,"column":3,"nodeType":"319","messageId":"320","endLine":62,"endColumn":58},{"ruleId":"317","severity":1,"message":"318","line":67,"column":3,"nodeType":"319","messageId":"320","endLine":67,"endColumn":62},{"ruleId":"317","severity":1,"message":"318","line":73,"column":3,"nodeType":"319","messageId":"320","endLine":73,"endColumn":68},{"ruleId":"317","severity":1,"message":"318","line":74,"column":3,"nodeType":"319","messageId":"320","endLine":74,"endColumn":74},{"ruleId":"317","severity":1,"message":"318","line":73,"column":24,"nodeType":"319","messageId":"320","endLine":73,"endColumn":36},{"ruleId":"317","severity":1,"message":"318","line":87,"column":31,"nodeType":"319","messageId":"320","endLine":87,"endColumn":43},{"ruleId":"317","severity":1,"message":"318","line":177,"column":28,"nodeType":"319","messageId":"320","endLine":177,"endColumn":38},{"ruleId":"317","severity":1,"message":"318","line":191,"column":35,"nodeType":"319","messageId":"320","endLine":191,"endColumn":44},{"ruleId":"317","severity":1,"message":"318","line":245,"column":28,"nodeType":"319","messageId":"320","endLine":245,"endColumn":41},{"ruleId":"317","severity":1,"message":"318","line":259,"column":35,"nodeType":"319","messageId":"320","endLine":259,"endColumn":47},{"ruleId":"317","severity":1,"message":"318","line":273,"column":35,"nodeType":"319","messageId":"320","endLine":273,"endColumn":51},{"ruleId":"317","severity":1,"message":"318","line":287,"column":35,"nodeType":"319","messageId":"320","endLine":287,"endColumn":44},{"ruleId":"317","severity":1,"message":"318","line":1,"column":32,"nodeType":"319","messageId":"320","endLine":1,"endColumn":68},{"ruleId":"317","severity":1,"message":"318","line":8,"column":3,"nodeType":"319","messageId":"320","endLine":8,"endColumn":177},{"ruleId":"317","severity":1,"message":"318","line":11,"column":3,"nodeType":"319","messageId":"320","endLine":11,"endColumn":285},"no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-undef","'rsc' is not defined.","Identifier","undef","no-unused-vars","'state' is assigned a value but never used.","unusedVar","'addQuestionMark' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["324"],"React Hook useEffect has a missing dependency: 'getScreenSize'. Either include it or remove the dependency array.",["325"],["326"],"React Hook useEffect has a missing dependency: 'getScreenHeight'. Either include it or remove the dependency array.",["327"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case",["328"],"React Hook useEffect has missing dependencies: 'classSelectedP1' and 'classSelectedP2'. Either include them or remove the dependency array.",["329"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","React Hook useEffect has unnecessary dependencies: 'mageImgP1', 'mageImgP2', 'rogueImgP1', 'rogueImgP2', 'warriorImgP1', and 'warriorImgP2'. Either exclude them or remove the dependency array. Outer scope values like 'rogueImgP1' aren't valid dependencies because mutating them doesn't re-render the component.",["330"],"'LogsMenu' is defined but never used.",{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"331","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},"Update the dependencies array to be: [dispatch]",{"range":"344","text":"345"},"Update the dependencies array to be: [getScreenSize]",{"range":"346","text":"347"},{"range":"348","text":"345"},"Update the dependencies array to be: [getScreenHeight]",{"range":"349","text":"350"},"Update the dependencies array to be: [dispatch, player1, player2]",{"range":"351","text":"352"},"Update the dependencies array to be: [classSelectedP1, classSelectedP2, dispatch, player1.playerClass.className, player2.playerClass.className, pseudoSelectedP1, pseudoSelectedP2]",{"range":"353","text":"354"},"Update the dependencies array to be: [playerNumber, player]",{"range":"355","text":"356"},[368,370],"[dispatch]",[792,794],"[getScreenSize]",[993,995],[1428,1430],"[getScreenHeight]",[2665,2683],"[dispatch, player1, player2]",[5271,5404],"[classSelectedP1, classSelectedP2, dispatch, player1.playerClass.className, player2.playerClass.className, pseudoSelectedP1, pseudoSelectedP2]",[1812,1945],"[playerNumber, player]"]